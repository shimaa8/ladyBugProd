{"version":3,"sources":["./src/app/Services/job.service.ts","./src/app/AdminPanel/jop/add-edit-jop/add-edit-jop.component.ts","./src/app/AdminPanel/jop/add-edit-jop/add-edit-jop.component.html","./src/app/AdminPanel/jop/jop/jop.component.ts","./src/app/AdminPanel/jop/jop/jop.component.html","./src/app/AdminPanel/jop/delete-jop/delete-jop.component.ts","./src/app/AdminPanel/jop/delete-jop/delete-jop.component.html","./src/app/AdminPanel/jop/jop-routing.module.ts","./src/app/AdminPanel/jop/jop.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;AACA;;;AAI3C;IAME,oBAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF3C,YAAO,GAAG,EAAU,CAAC;IAGrB,CAAC;IAED,2BAAM,GAAN;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5C,CAAC;IAGD,2BAAM,GAAN;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjE,CAAC;IAED,8BAAS,GAAT,UAAU,EAAU;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;IAE/D,CAAC;IAED,4BAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAE9E,CAAC;wEAvBU,UAAU;iGAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;qBANpB;CAgCC;AAxBsB;6FAAV,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACe;;;;;;;;;ICCnE,yEACI;IAAA;IAAA,0EACI;IAAA;IAAA,0EACI;IAAA;IAAA,yEAAQ;IAAA,uDAAc;IAAA,4DAAS;IACnC;IAAA,4DAAM;IACV;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IAHc,0DAAc;IAAd,kFAAc;;;IAed,4EACI;IAAA,0IACJ;IAAA,4DAAY;;;IAWZ,4EACI;IAAA,2IACJ;IAAA,4DAAY;;ADhCpC;IAOE,6BAAmB,SAA4C,EAAkC,IAAS;QAAvF,cAAS,GAAT,SAAS,CAAmC;QAAkC,SAAI,GAAJ,IAAI,CAAK;IAC1G,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;0FAVU,mBAAmB,0MAE2C,wEAAe;uGAF7E,mBAAmB;YCRhC,wEAAqB;YAAA,mEAAQ;YAAA,4DAAK;YAClC;YAAA,gFACI;YAAA;YAAA,gHACI;YAMJ;YACA;YAAA,wFACI;YAAA;YAAA,0EAEI;YAAA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YAAA,+EAEA;YAFyC,mNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,8HACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,wEAAY;YAAA,4DAAY;YACnC;YAAA,iFAEA;YAFyC,mNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,8HACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YAIN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAGJ;YAAA,4DAAM;YAEV;YAAA,4DAAqB;YACrB;YAAA,2FACI;YAAA;YAAA,+EAA0D;YAAvC,6IAAS,eAAW,IAAC;YAAkB,mEAAM;YAAA,4DAAS;YACzE;YAAA,+EACI;YAAA,yFACJ;YAAA,4DAAS;YACb;YAAA,4DAAqB;YACzB;YAAA,4DAAO;YACP;;;;;YA7IqB,0DAAkB;YAAlB,gFAAkB;YAe0B,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YAUZ,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YAyGlC,4DAAyB;YAAzB,sFAAyB;;8BD1IpE;CAqBC;AAb+B;6FAAnB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;sBAGmE,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEV1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKC;AAKV;AAGgB;AAEa;AACK;;;;;;;;;;;;ICA3D,yEACI;IAAA,uDACA;IAAA,4EAAoE;IACxE;IAAA,4DAAK;;;IAH2B,yFAA6B;IACzD,0DACA;IADA,mIACA;IAAY,0DAAmB;IAAnB,+EAAmB;;;;IAKnC,yEACI;IAAA;IAAA,4EAGJ;IAFW,qYAAS,qEAA+D,IAAC;IADhF,4DAGJ;IAAA;IAAA,4DAAK;;;IAJ2B,kFAAsB;;;IAR1D;IAAA,qEACI;IAAA;IAAA,qHACI;IAGJ;IAAA,qEAAI;IAAA,kEAAO;IAAA,4DAAK;IACpB;IAAA,4DAAK;IACL;IAAA,qEACI;IAAA;IAAA,uHACI;IAIJ;IAAA,iEAAS;IACb;IAAA,4DAAK;IACT;;;IAdY,0DAA2B;IAA3B,+EAA2B;IAO3B,0DAA2B;IAA3B,+EAA2B;;;IAa3B,uEAAuC;IAAA,uDAAsB;IAAA,4DAAO;;;;IAA7B,0DAAsB;IAAtB,qGAAsB;;;IAGzD,uEACI;IAAA,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,4JACJ;;;IAJJ,uEACpB;IAAA;IACwB;IAAA,sIACI;IAEJ;IACY;IAAA,4DAAO;;;;IAJb,0DAAsC;IAAtC,+FAAsC;;;IANpD,qEACI;IAAA;IACA;IACA;IAAA,+HAAuC;IACvC;IAAA,+HACpB;IAMgB;IAAA,4DAAK;;;IARK,0DAA+B;IAA/B,+FAA+B;IAC/B,0DAA8B;IAA9B,8FAA8B;;;;IAL5C;IAAA,yEACI;IAAA;IAAA,sHACI;IAWJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,sEACI;IAAA;IAAA,2EACI;IAAA;IAAA,8EAII;IAJI,gXAAqC;IAIzC;IAAA,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC/B;IAAA,4DAAS;IACT;IAAA,8EACI;IADiB,kXAAuC;IACxD;IAAA,4EAAU;IAAA,0EAAc;IAAA,4DAAW;IACvC;IAAA,4DAAS;IACb;IAAA,4DAAM;IACV;IAAA,4DAAK;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;IAAA,4DAAK;IACT;;;;IA5CQ,0DAA0B;IAA1B,uFAA0B;IACtB,0DAA2B;IAA3B,gFAA2B;;;ADf/C;IAyBE,sBAAoB,MAAiB,EAClB,WAAuB,EACxB,aAA4B;QAF1B,WAAM,GAAN,MAAM,CAAW;QAClB,gBAAW,GAAX,WAAW,CAAY;QACxB,kBAAa,GAAb,aAAa,CAAe;QAd9C,YAAO,GAAY,KAAK,CAAC;IAezB,CAAC;IAED,EAAE;IACF,+BAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG;YACV,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC;YAC3B,EAAC,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,UAAU,EAAC;YAChD,EAAC,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,UAAU,EAAC;SAGjD,CAAC;QACF,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,4CAA4C;IAC5C,8EAA8E;IAC9E,sDAAsD;IACtD,yCAAyC;IACzC,oBAAoB;IACpB,EAAE;IACF,iBAAiB;IACjB,+BAA+B;IAC/B,EAAE;IACF,UAAU;IACV,IAAI;IAEJ,mCAAY,GAAZ;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAC,GAAa;YAChD,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,GAAa,CAAC;YACpC,6DAA6D;YAC7D,qCAAqC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,wCAAiB,GAAjB;QAAA,iBAoBC;QAlBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wFAAmB,EAAE;YAClD,IAAI,EAAE;gBACJ,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY;aAC/D;SACF,CAAC,CACL;QACD,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC;gBAC7C,KAAI,CAAC,SAAS,EAAE,CAAC;aAElB;iBAAM;gBACL,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,EAAU,CAAC;aAEvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAS,GAAT;QAAA,iBAmBC;QAlBC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,aAAG;QACvC,CAAC,EAAE,eAAK;YAEN,4FAA4F;QAC9F,CAAC,EAAE;YACD,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,EAAU,CAAC;YAEtC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;gBACzB,KAAK,EAAE,SAAS;gBAChB,GAAG,EAAE,0CAA0C;gBAC/C,SAAS,EAAE,IAAI;gBACf,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,UAAU;aAClB,CAAC,CAAC;YACH,2CAA2C;YAC3C,kGAAkG;QACpG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;IAC5B,8EAA8E;IAC9E,6DAA6D;IAC7D,6CAA6C;IAC7C,oBAAoB;IACpB,EAAE;IACF,iBAAiB;IACjB,kCAAkC;IAClC,UAAU;IACV,EAAE;IACF,EAAE;IACF,IAAI;IAEJ,yCAAkB,GAAlB,UAAmB,SAAe;QAAlC,iBAqBC;QAlBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wFAAmB,EAAE;YACtD,IAAI,EAAE,EAAC,UAAU,EAAE,SAAS,EAAC;SAC9B,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC;gBACjF,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC;gBAEjF,gDAAgD;gBAChD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,+BAA+B;gBAC/B,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aAE7C;iBAAM;gBACL,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,EAAU,CAAC;aAEvC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAgB,GAAhB,UAAiB,MAAM;QAAvB,iBAkBC;QAjBC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;QAC9C,CAAC,EAAE,eAAK;YACN,4FAA4F;QAC9F,CAAC,EAAE;YACD,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,EAAU,CAAC;YAEtC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;gBACzB,KAAK,EAAE,SAAS;gBAChB,GAAG,EAAE,0CAA0C;gBAC/C,SAAS,EAAE,IAAI;gBACf,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,UAAU;aAClB,CAAC,CAAC;YACH,2CAA2C;YAC3C,kGAAkG;QACpG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAoB,GAApB,UAAqB,IAAI;QAAzB,iBAaC;QAZC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;YACrD,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC;SACvB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,EAAE;gBACV,gDAAgD;gBAChD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,+BAA+B;gBAC/B,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAE3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAY,GAAZ,UAAa,MAAM;QAAnB,iBAgBC;QAfC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;QAChD,CAAC,EAAE,eAAK;YACN,4FAA4F;QAC9F,CAAC,EAAE;YACD,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC;gBACzB,KAAK,EAAE,SAAS;gBAChB,GAAG,EAAE,0CAA0C;gBAC/C,SAAS,EAAE,IAAI;gBACf,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,UAAU;aAClB,CAAC,CAAC;YACH,2CAA2C;YAC3C,kGAAkG;QACpG,CAAC,CAAC,CAAC;IACL,CAAC;4EA5LU,YAAY;gGAAZ,YAAY;YCvBzB,8EACI;YAAA;YAAA,4EACI;YAD4E,oIAAS,kBAAc,IAAC;YACpG;YAAA,8EAAuB;YAAA,oEAAS;YAAA,4DAAW;YAC3C,kFACJ;YAAA,4DAAS;YACT;YAAA,4EACI;YAD2D,oIAAS,uBAAmB,IAAC;YACxF;YAAA,+EAAuB;YAAA,+DAAG;YAAA,4DAAW;YACrC,mFACJ;YAAA,4DAAS;YACb;YAAA,4DAAW;YACX;YAAA,4EAEI;YAAA;YAAA,iFAEI;YAAA;YAAA,2HACI;YAgBJ;YAAA,2HACI;YA6CR;YAAA,4DAAU;YACd;YAAA,4DAAW;YAEX;;YApEkB,2DAAgB;YAAhB,6EAAgB;;uBDZlC;CAuNC;AAhMwB;6FAAZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEtBD;AAAA;AAAA;AAAA;AAAA;AAAwD;AACe;;;;AAEvE;IAOE,4BAAmB,SAA2C,EAAkC,IAAS;QAAtF,cAAS,GAAT,SAAS,CAAkC;QAAkC,SAAI,GAAJ,IAAI,CAAK;IACzG,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;wFAVU,kBAAkB,0MAE2C,wEAAe;sGAF5E,kBAAkB;YCR/B,wEAAqB;YAAA,qEAAU;YAAA,4DAAK;YACpC;YAAA,yEACI;YAAA;YAAA,yEACI;YAAA;YAAA,yEACI;YAAA;YAAA,kEAAoG;YAAA,iEACxG;YAAA;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,iEACA;YAAA;YAAA,sEAAI;YAAA,4FAAgC;YAAA,4DAAK;YACzC;YAAA,sEAAI;YAAA,wDAAmC;YAAA,4DAAK;YAC5C;YAAA,sEAAI;YAAA,iHAAqD;YAAA,4DAAK;YAClE;YAAA,4DAAM;YACV;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YACA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,6EAAiF;YAAvC,2IAAS,eAAW,IAAC;YAAkB,kEAAM;YAAA,4DAAS;YACpG;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,6EACI;YAAA,uFACJ;YAAA,4DAAS;YACb;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;;YAhBgB,2DAAmC;YAAnC,oGAAmC;YAWmB,2DAAqC;YAArC,kGAAqC;;6BDpB3G;CAoBC;AAZ8B;6FAAlB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;sBAGkE,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEVzF;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACN;;;AAEjD,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAY,EAAC;CAEpC,CAAC;AAEF;IAAA;KAIiC;mGAApB,gBAAgB;8JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;2BAXxB;CAaiC;AAAJ;mIAAhB,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAES;AACL;AACyB;AACL;AAClB;AACI;AACf;AACW;AACI;AACd;AACqB;AACT;;AAGvD;IAAA;KAe0B;4FAAb,SAAS;gJAAT,SAAS,kBAbT;gBACL,4DAAY;gBACZ,oEAAgB;gBAChB,oEAAa;gBACb,wEAAe;gBACf,yDAAW;gBACX,oEAAa;gBACb,yEAAe;gBACf,2DAAW;gBACX,gFAAkB;gBAClB,uEAAc;aACjB;oBA9BL;CAgC0B;AAAJ;mIAAT,SAAS,mBAdL,+DAAY,EAAE,wFAAmB,EAAE,mFAAkB,aAE9D,4DAAY;QACZ,oEAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,yDAAW;QACX,oEAAa;QACb,yEAAe;QACf,2DAAW;QACX,gFAAkB;QAClB,uEAAc;6FAGT,SAAS;cAfrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,+DAAY,EAAE,wFAAmB,EAAE,mFAAkB,CAAC;gBACnE,OAAO,EAAE;oBACL,4DAAY;oBACZ,oEAAgB;oBAChB,oEAAa;oBACb,wEAAe;oBACf,yDAAW;oBACX,oEAAa;oBACb,yEAAe;oBACf,2DAAW;oBACX,gFAAkB;oBAClB,uEAAc;iBACjB;aACJ","file":"jop-jop-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {DataService} from './data.service';\r\nimport {ITableData} from '../Models/table-data';\r\nimport {IJob} from '../Models/job';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobService {\r\n  Addjobs = {} as IJob;\r\n\r\n  constructor(public dataService: DataService) {\r\n  }\r\n\r\n  getJop() {\r\n    return this.dataService.get('human_jobs');\r\n  }\r\n\r\n\r\n  AddJop() {\r\n    return this.dataService.post('admin/human_jobs', this.Addjobs);\r\n  }\r\n\r\n  deleteJop(id: number) {\r\n    return this.dataService.delete('admin/human_jobs' + '/', id);\r\n\r\n  }\r\n\r\n  editJop(id: number) {\r\n    return this.dataService.update('admin/human_jobs' + '/' + id, this.Addjobs);\r\n\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-jop',\r\n  templateUrl: './add-edit-jop.component.html',\r\n  styleUrls: ['./add-edit-jop.component.css']\r\n})\r\nexport class AddEditJopComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEditJopComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Job </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!--    -->\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {ICity} from '../../../Models/products-info';\r\nimport {IAddFarmedType, IFarmedType} from '../../../Models/farms';\r\nimport {ProductsInfoService} from '../../../Services/products-info.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MeasuringUnitsService} from '../../../Services/measuring-units.service';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {TaskTypesService} from '../../../Services/task-types.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditCityComponent} from '../../products-information/city/add-edit-city/add-edit-city.component';\r\nimport {DeleteCityComponent} from '../../products-information/city/delete-city/delete-city.component';\r\nimport {JobService} from '../../../Services/job.service';\r\nimport {IJob} from '../../../Models/job';\r\nimport {DeleteJopComponent} from '../delete-jop/delete-jop.component';\r\nimport {AddEditJopComponent} from '../add-edit-jop/add-edit-jop.component';\r\n\r\n@Component({\r\n  selector: 'app-jop',\r\n  templateUrl: './jop.component.html',\r\n  styleUrls: ['./jop.component.css']\r\n})\r\nexport class JopComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IJob[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor( public dialog: MatDialog,\r\n             private _JobService: JobService,\r\n            private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Job (Ar)'},\r\n      {field: 'name_en_localized', header: 'Job (En)'},\r\n\r\n\r\n    ];\r\n    this.getTableData();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getTableData() {\r\n    this._JobService.getJop().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IJob[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddDataDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditJopComponent, {\r\n          data: {\r\n            FarmedData: this._JobService.Addjobs, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._JobService.Addjobs = result.FarmedData;\r\n        this.onAddData();\r\n\r\n      } else {\r\n        this._JobService.Addjobs = {} as IJob;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddData() {\r\n    this._JobService.AddJop().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getTableData();\r\n      this._JobService.Addjobs = {} as IJob;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditDataDialog(classData: IJob) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditJopComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._JobService.Addjobs.name_ar_localized = result.FarmedData.name_ar_localized;\r\n        this._JobService.Addjobs.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._JobService.Addjobs = {} as IJob;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._JobService.editJop(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getTableData();\r\n      this._JobService.Addjobs = {} as IJob;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openDeleteDataDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteJopComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteData(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteData(roleId) {\r\n    this._JobService.deleteJop(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getTableData();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getTableData()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddDataDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Job\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                                    <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    <!--                    {{rowData[col.field]}}-->\r\n                    <span *ngIf=\"col.field!=='districts'\"> {{rowData[col.field]}}</span>\r\n                    <span *ngIf=\"col.field=='districts'\">\r\n<!--                                    {{rowData[col.field].districts|json}}-->\r\n                        <span *ngFor=\"let dis of rowData[col.field]\">\r\n                            {{dis.name_ar_localized}},\r\n                        </span>\r\n                        <!--                        {{rowData[col.field]}}-->\r\n                                    </span>\r\n                </td>\r\n                <!--                <td *ngFor=\"let col of columns;let i=index\">-->\r\n                <!--                                  <span *ngIf=\"col.field=='districts'\">-->\r\n                <!--&lt;!&ndash;                                    {{rowData[col.field].districts|json}}&ndash;&gt;-->\r\n                <!--                        <span *ngFor=\"let dis of rowData[col.field]\">-->\r\n                <!--                            {{dis.name_ar_localized}},-->\r\n                <!--                        </span>-->\r\n                <!--                                      &lt;!&ndash;                        {{rowData[col.field]}}&ndash;&gt;-->\r\n                <!--                                    </span>-->\r\n                <!--                </td>-->\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditDataDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openDeleteDataDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-jop',\r\n  templateUrl: './delete-jop.component.html',\r\n  styleUrls: ['./delete-jop.component.css']\r\n})\r\nexport class DeleteJopComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteJopComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Delete Job</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Job permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {JopComponent} from './jop/jop.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: JopComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class JopRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { JopRoutingModule } from './jop-routing.module';\r\nimport { JopComponent } from './jop/jop.component';\r\nimport { AddEditJopComponent } from './add-edit-jop/add-edit-jop.component';\r\nimport { DeleteJopComponent } from './delete-jop/delete-jop.component';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {TableModule} from 'primeng/table';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\n\r\n\r\n@NgModule({\r\n  declarations: [JopComponent, AddEditJopComponent, DeleteJopComponent],\r\n    imports: [\r\n        CommonModule,\r\n        JopRoutingModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        TableModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule\r\n    ]\r\n})\r\nexport class JopModule { }\r\n"],"sourceRoot":"webpack:///"}