{"version":3,"sources":["./src/app/Pages/UserAccount/OrderHistory/OrderHistory.component.ts","./src/app/Pages/UserAccount/OrderHistory/OrderHistory.component.html","./src/app/Pages/UserAccount/Address/Address.component.ts","./src/app/Pages/UserAccount/Address/Address.component.html","./src/app/Pages/UserAccount/EditProfile/EditProfile.component.ts","./src/app/Pages/UserAccount/EditProfile/EditProfile.component.html","./src/app/Pages/UserAccount/UserAccount.module.ts","./src/app/Pages/UserAccount/Account/Account.component.ts","./src/app/Pages/UserAccount/Account/Account.component.html","./src/app/Pages/UserAccount/UserAccount.routing.ts","./src/app/Pages/UserAccount/GridProduct/GridProduct.component.ts","./src/app/Pages/UserAccount/GridProduct/GridProduct.component.html","./src/app/Pages/UserAccount/Cards/Cards.component.ts","./src/app/Pages/UserAccount/Cards/Cards.component.html","./src/app/Pages/UserAccount/Profile/Profile.component.ts","./src/app/Pages/UserAccount/Profile/Profile.component.html"],"names":[],"mappings":"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","file":"Pages-UserAccount-UserAccount-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nconst order_history = [\r\n   {position: 1, orderid:1801, name: 'LEGITIM', price: 1.0079, status: 'Sent',action:''},\r\n   {position: 2, orderid:1832, name: 'GRUNDTAL', price: 4.0026, status: 'In processing',action:''},\r\n   {position: 3, orderid:1881, name: 'BOHOLMEN', price: 6.941, status: 'Sent',action:''},\r\n   {position: 4, orderid:1832, name: 'ROSTAD LÖK', price: 9.0122, status: 'Return',action:''},\r\n   {position: 5, orderid:1810, name: 'TÅRTA CHOKLADKROKANT', price: 10.811, status: 'Sent',action:''},\r\n];\r\n\r\n@Component({\r\n  selector: 'app-OrderHistory',\r\n  templateUrl: './OrderHistory.component.html',\r\n  styleUrls: ['./OrderHistory.component.scss']\r\n})\r\nexport class OrderHistoryComponent implements OnInit {\r\n\r\n   displayedColumns: string[] = ['position', 'orderid', 'name', 'price', 'status','action'];\r\n   dataSource = order_history;\r\n\r\n   constructor() { }\r\n\r\n   ngOnInit() {\r\n   }\r\n\r\n}\r\n","<mat-card>\r\n   <h4 class=\"mb-3\">Order History</h4>\r\n   <div class=\"table-responsive-x\">\r\n      <table mat-table [dataSource]=\"dataSource\" class=\"w-100 table-scroll-wrap\">\r\n         <!--- Note that these columns can be defined in any order.\r\n                     The actual rendered columns are set as a property on the row definition\" -->\r\n         <!-- Position Column -->\r\n         <ng-container matColumnDef=\"position\">\r\n            <th class=\"px-3\" mat-header-cell *matHeaderCellDef> No. </th>\r\n            <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\r\n         </ng-container>\r\n         <!-- id Column -->\r\n         <ng-container matColumnDef=\"orderid\">\r\n            <th class=\"px-3 text-nowrap\" mat-header-cell *matHeaderCellDef> Order Id </th>\r\n            <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> {{element.orderid}} </td>\r\n         </ng-container>\r\n         <!-- Name Column -->\r\n         <ng-container matColumnDef=\"name\">\r\n            <th class=\"px-3\" mat-header-cell *matHeaderCellDef>Product Name </th>\r\n            <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n         </ng-container>\r\n         <!-- price Column -->\r\n         <ng-container matColumnDef=\"price\">\r\n            <th class=\"px-3\" mat-header-cell *matHeaderCellDef> Price </th>\r\n            <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> ${{element.price}} </td>\r\n         </ng-container>\r\n         <!-- Status Column -->\r\n         <ng-container matColumnDef=\"status\">\r\n            <th class=\"px-3\" mat-header-cell *matHeaderCellDef> Status </th>\r\n            <td class=\"px-3\" mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n         </ng-container>\r\n         <!-- Actions Column -->\r\n         <ng-container matColumnDef=\"action\">\r\n            <th class=\"px-3\" mat-header-cell *matHeaderCellDef> Action </th>\r\n            <td class=\"px-3\" mat-cell *matCellDef=\"let element\">\r\n               <a href=\"javascript:void(0)\" class=\"accent-color\">   <i class=\"material-icons\">\r\n                  remove_red_eye\r\n               </i></a>\r\n            </td>\r\n         </ng-container>\r\n         <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n         <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n   </div>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-Address',\r\n  templateUrl: './Address.component.html',\r\n  styleUrls: ['./Address.component.scss']\r\n})\r\nexport class AddressComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <h4>Address Infomation</h4>\r\n  <div fxLayout=\"row wrap\" class=\"col-gap\">\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"40\" fxFlex.lg=\"40\" fxFlex.xl=\"40\">\r\n      <h5>Billing Address</h5>\r\n      <div class=\"pt-3\">\r\n         <address class=\"mb-4\">\r\n               2735  Sherman Street<br>\r\n               Hodour Sheridan Plaza<br>\r\n               New Jersey<br>\r\n               Zip - 6739HG1<br>\r\n               USA<br>\r\n         </address>\r\n        <button mat-raised-button color=\"accent\" [routerLink]=\"['/account/profile/edit']\" [queryParams]=\"{type:'address'}\">Edit</button>\r\n      </div>\r\n    </div>\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"40\" fxFlex.lg=\"40\" fxFlex.xl=\"40\">\r\n      <h5>Shipping Address</h5>\r\n      <div class=\"pt-3\">\r\n         <address class=\"mb-4\">\r\n               2735  Sherman Street<br>\r\n               Hodour Sheridan Plaza<br>\r\n               New Jersey<br>\r\n               Zip - 6739HG1<br>\r\n               USA<br>\r\n         </address>\r\n        <button mat-raised-button color=\"accent\" [routerLink]=\"['/account/profile/edit']\" [queryParams]=\"{type:'ship-address'}\">Edit</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params }   from '@angular/router';\r\nimport { FormControl, FormGroup, FormBuilder,FormArray, Validators } from '@angular/forms';\r\nimport { ToastaService, ToastaConfig, ToastOptions, ToastData} from 'ngx-toasta';\r\n\r\n@Component({\r\n  selector: 'app-EditProfile',\r\n  templateUrl: './EditProfile.component.html',\r\n  styleUrls: ['./EditProfile.component.scss']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n\r\n   type         : string;\r\n   info         : FormGroup;\r\n   address      : FormGroup;\r\n   card         : FormGroup;\r\n   emailPattern : any = /\\S+@\\S+\\.\\S+/;\r\n   toastOption  : ToastOptions = {\r\n      title     : \"Account Information\",\r\n      msg       : \"Your account information updated successfully!\",\r\n      showClose : true,\r\n      timeout   : 3000,\r\n      theme     : \"material\"\r\n   };\r\n\r\n   constructor(private route: ActivatedRoute,\r\n               private router: Router,\r\n               private formGroup : FormBuilder,\r\n               private toastyService: ToastaService) {\r\n\r\n      this.route.params.subscribe(params => {\r\n         this.route.queryParams.forEach(queryParams => {\r\n            this.type = queryParams['type'];\r\n         });   \r\n      });\r\n   }\r\n\r\n   ngOnInit() {\r\n      this.info = this.formGroup.group({\r\n         first_name   : ['', [Validators.required]],\r\n         last_name    : ['', [Validators.required]],\r\n         gender       : ['male'],\r\n         date         : [],\r\n         phone_number : ['', [Validators.required]],\r\n         location     : [''],\r\n         email        : ['', [Validators.required, Validators.pattern(this.emailPattern)]]\r\n      });\r\n\r\n      this.address = this.formGroup.group({\r\n         address      : ['', [Validators.required]],\r\n         buiding_name : ['', [Validators.required]],\r\n         street_no    : ['', [Validators.required]],\r\n         state        : ['', [Validators.required]],\r\n         zip_code     : ['', [Validators.required]],\r\n         country      : ['', [Validators.required]]\r\n      });\r\n\r\n      this.card = this.formGroup.group({\r\n         card_number : ['', [Validators.required]],\r\n         cvv         : ['', [Validators.required]],\r\n         name        : ['', [Validators.required]],\r\n         month       : ['', [Validators.required]],\r\n         year        : ['', [Validators.required]]\r\n      })\r\n   }\r\n\r\n   /**\r\n    * Function is used to submit the profile info.\r\n    * If form value is valid, redirect to profile page.\r\n    */\r\n   submitProfileInfo() {\r\n      if(this.info.valid){\r\n         this.router.navigate(['/account/profile']).then(()=>{\r\n           this.toastyService.success(this.toastOption);\r\n         });\r\n      } else {\r\n         for (let i in this.info.controls) {\r\n            this.info.controls[i].markAsTouched();\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Function is used to submit the profile address.\r\n    * If form value is valid, redirect to address page.\r\n    */\r\n   submitAddress() {\r\n      if(this.address.valid){\r\n         this.router.navigate(['/account/address']).then(()=>{\r\n           this.toastyService.success(this.toastOption);\r\n         });\r\n      } else {\r\n         for (let i in this.address.controls) {\r\n            this.address.controls[i].markAsTouched();\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Function is used to submit the profile card.\r\n    * If form value is valid, redirect to card page.\r\n    */\r\n   submitCard() {\r\n      if(this.card.valid) {\r\n         this.router.navigate(['/account/card']).then(()=>{\r\n           this.toastyService.success(this.toastOption);\r\n         });\r\n      } else {\r\n         for(let i in this.card.controls) {\r\n            this.card.controls[i].markAsTouched();\r\n         }\r\n      }\r\n   }\r\n\r\n}\r\n","<mat-card *ngIf=\"type == 'info'\">\r\n  <h4> Edit Profile Information</h4>\r\n  <div fxLayout=\"row wrap\" class=\"col-gap\">\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\">\r\n      <form [formGroup] = \"info\">\r\n        <div class=\"example-container\">\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"First Name\" formControlName=\"first_name\">\r\n            <mat-error *ngIf=\"info.get('first_name').hasError('required') && info.get('first_name').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Last Name\" formControlName=\"last_name\">\r\n            <mat-error *ngIf=\"info.get('last_name').hasError('required') && info.get('last_name').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <div class=\"mb-3\">\r\n            <mat-radio-group formControlName=\"gender\">\r\n              <mat-radio-button class=\"mr-2\" value=\"male\">Male</mat-radio-button>\r\n              <mat-radio-button value=\"female\">Female</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div>\r\n            <mat-form-field class=\"w-100 mb-3\">\r\n              <input matInput [matDatepicker]=\"picker\" placeholder=\"Bith Date\" formControlName=\"date\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker></mat-datepicker>\r\n              <mat-error *ngIf=\"info.get('date').hasError('required') && info.get('date').touched\">This field should not be empty.</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Mobile No.\" formControlName=\"phone_number\">\r\n            <mat-error *ngIf=\"info.get('phone_number').hasError('required') && info.get('phone_number').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Location\" formControlName=\"location\">\r\n            <mat-error *ngIf=\"info.get('location').hasError('required') && info.get('location').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"info.get('email').hasError('required') && info.get('email').touched\">This field should not be empty.</mat-error>\r\n            <mat-error *ngIf=\"info.get('email').hasError('pattern') && info.get('email').touched\">Please enter a valid email.</mat-error>\r\n          </mat-form-field>\r\n          <button mat-raised-button color=\"accent\" (click)=\"submitProfileInfo()\">Save</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\" class=\"edit-profile\" style=\"background-image: url(assets/images/user-edit.png)\">\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n\r\n<mat-card *ngIf=\"type == 'address' || type == 'ship-address'\">\r\n  <h4 *ngIf=\"type == 'address'\"> Edit Billing Information</h4>\r\n  <h4 *ngIf=\"type == 'ship-address'\"> Edit Shipping Information</h4>\r\n  <div fxLayout=\"row wrap\" class=\"col-gap\">\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\">\r\n      <form [formGroup] = \"address\">\r\n        <div class=\"example-container\">\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Address\" formControlName=\"address\">\r\n            <mat-error *ngIf=\"address.get('address').hasError('required') && address.get('address').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Buiding Name\" formControlName=\"buiding_name\">\r\n            <mat-error *ngIf=\"address.get('buiding_name').hasError('required') && address.get('buiding_name').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Street No.\" formControlName=\"street_no\">\r\n            <mat-error *ngIf=\"address.get('street_no').hasError('required') && address.get('street_no').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"State\" formControlName=\"state\">\r\n            <mat-error *ngIf=\"address.get('state').hasError('required') && address.get('state').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Zip Code/Pin Code\" formControlName=\"zip_code\">\r\n            <mat-error *ngIf=\"address.get('zip_code').hasError('required') && address.get('zip_code').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"w-100 mb-3\">\r\n            <input matInput placeholder=\"Country\" formControlName=\"country\">\r\n            <mat-error *ngIf=\"address.get('country').hasError('required') && address.get('country').touched\">This field should not be empty.</mat-error>\r\n          </mat-form-field>\r\n          <button mat-raised-button color=\"accent\" (click)=\"submitAddress()\">Save</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\" class=\"edit-profile\" style=\"background-image: url(assets/images/billing-edit.png)\">\r\n    </div>\r\n  </div>\r\n</mat-card>\r\n\r\n<mat-card *ngIf=\"type == 'card' || type == 'add-card'\">\r\n  <h4 *ngIf=\"type == 'card'\"> Edit Card Information</h4>\r\n  <h4 *ngIf=\"type == 'add-card'\"> Add Card Information</h4>\r\n  <div fxLayout=\"row wrap\" class=\"col-gap\">\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\">\r\n      <form [formGroup] = \"card\">\r\n        <div fxLayout=\"row wrap\" class=\"col-gap\">\r\n          <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"70\" fxFlex.xl=\"70\">\r\n            <mat-form-field class=\"w-100 mb-3\">\r\n              <input matInput placeholder=\"Card Number\" formControlName=\"card_number\">\r\n              <mat-error *ngIf=\"card.get('card_number').hasError('required') && card.get('card_number').touched\">This field should not be empty.</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"30\" fxFlex.xl=\"30\">\r\n            <mat-form-field class=\"w-100 mb-3\">\r\n              <input matInput placeholder=\"CVV\" formControlName=\"cvv\">\r\n              <mat-error *ngIf=\"card.get('cvv').hasError('required') && card.get('cvv').touched\">This field should not be empty.</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n          <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"100\" fxFlex.lg=\"100\" fxFlex.xl=\"100\">\r\n            <mat-form-field class=\"w-100 mb-3\">\r\n              <input matInput placeholder=\"Name on Card\" formControlName=\"name\">\r\n              <mat-error *ngIf=\"card.get('name').hasError('required') && card.get('name').touched\">This field should not be empty.</mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <Label class=\"pl-3 text-muted\">Expiry Date</Label>\r\n          <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"100\" fxFlex.lg=\"100\" fxFlex.xl=\"100\">\r\n            <mat-form-field>\r\n              <mat-select placeholder=\"Month\" formControlName=\"month\">\r\n                <mat-option value=\"January\">January</mat-option>\r\n                <mat-option value=\"February\">February</mat-option>\r\n                <mat-option value=\"March\">March</mat-option>\r\n                <mat-option value=\"April\">April</mat-option>\r\n                <mat-option value=\"May\">May</mat-option>\r\n                <mat-option value=\"June\">June</mat-option>\r\n                <mat-option value=\"July\">July</mat-option>\r\n                <mat-option value=\"August\">August</mat-option>\r\n                <mat-option value=\"September\">September</mat-option>\r\n                <mat-option value=\"October\">October</mat-option>\r\n                <mat-option value=\"November\">November</mat-option>\r\n                <mat-option value=\"December\">December</mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"card.get('month').hasError('required') && card.get('month').touched\">This field should not be empty.</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"mx-3\">\r\n                  <mat-select placeholder=\"Year\" formControlName=\"year\">\r\n                    <mat-option value=\"2019\">2019</mat-option>\r\n                    <mat-option value=\"2020\">2020</mat-option>\r\n                    <mat-option value=\"2021\">2021</mat-option>\r\n                    <mat-option value=\"2022\">2022</mat-option>\r\n                    <mat-option value=\"2023\">2023</mat-option>\r\n                    <mat-option value=\"2024\">2024</mat-option>\r\n                    <mat-option value=\"2025\">2025</mat-option>\r\n                    <mat-option value=\"2026\">2026</mat-option>\r\n                    <mat-option value=\"2027\">2027</mat-option>\r\n                    <mat-option value=\"2028\">2028</mat-option>\r\n                    <mat-option value=\"2029\">2029</mat-option>\r\n                    <mat-option value=\"2030\">2030</mat-option>\r\n                  </mat-select>\r\n                  <mat-error *ngIf=\"card.get('year').hasError('required') && card.get('year').touched\">This field should not be empty.</mat-error>\r\n                </mat-form-field>\r\n          </div>\r\n    </div>\r\n    <button mat-raised-button color=\"accent\" (click)=\"submitCard()\">Save</button>\r\n    </form>\r\n  </div>\r\n  <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"50\" fxFlex.xl=\"50\" class=\"edit-profile\" style=\"background-image: url(assets/images/card-edit.png)\">\r\n  </div>\r\n  </div>\r\n</mat-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { UserAccountRoutes } from './UserAccount.routing';\r\nimport { AccountComponent } from './Account/Account.component';\r\nimport { ProfileComponent } from './Profile/Profile.component';\r\nimport { EditProfileComponent } from './EditProfile/EditProfile.component';\r\nimport { CardsComponent } from './Cards/Cards.component';\r\nimport { AddressComponent } from './Address/Address.component';\r\nimport { OrderHistoryComponent } from './OrderHistory/OrderHistory.component';\r\nimport { GridProductComponent } from './GridProduct/GridProduct.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(UserAccountRoutes),\r\n    MatBadgeModule,\r\n    MatButtonModule, \r\n    FlexLayoutModule,\r\n    MatCardModule, \r\n    MatMenuModule, \r\n    MatToolbarModule, \r\n    MatIconModule, \r\n    MatInputModule, \r\n    MatDatepickerModule, \r\n    MatNativeDateModule, \r\n    MatProgressSpinnerModule,\r\n    MatTableModule, \r\n    MatExpansionModule, \r\n    MatSelectModule, \r\n    MatSnackBarModule, \r\n    MatTooltipModule, \r\n    MatChipsModule, \r\n    MatListModule, \r\n    MatSidenavModule, \r\n    MatTabsModule, \r\n    MatProgressBarModule,\r\n    MatCheckboxModule,\r\n    MatSliderModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    MatGridListModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n     AccountComponent, \r\n     ProfileComponent, \r\n     EditProfileComponent, \r\n     CardsComponent, \r\n     AddressComponent, \r\n     OrderHistoryComponent,\r\n     GridProductComponent\r\n   ]\r\n})\r\nexport class UserAccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-Account',\r\n  templateUrl: './Account.component.html',\r\n  styleUrls: ['./Account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"inner-container\">\r\n   <div class=\"bg-white final-receipt-page section-gap\">\r\n      <div class=\"account-info\">\r\n         <div class=\"container\">\r\n            <div class=\"user-info\">\r\n               <div fxLayoutAlign=\"flex-start\">\r\n                  <div class=\"login-user-img\">\r\n                    <img src=\"assets/images/user-4.jpg\" width=\"70\" alt=\"Active User\">\r\n                  </div>\r\n                  <div class=\"px-3\">\r\n                    <h4>Hi, John Doe</h4>\r\n                    <div class=\"text-muted text-xl\">johndoe@deo.com</div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div fxLayout=\"row wrap\" class=\"col-gap mx-0\">\r\n               <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"30\" fxFlex.lg=\"20\" fxFlex.xl=\"20\" class=\"user-nav-list\">\r\n                  <mat-list role=\"list\">\r\n                    <mat-list-item role=\"listitem\">\r\n                        <a [routerLink]=\"['/account/order-history']\" routerLinkActive=\"tab-active\">\r\n                           <i class=\"material-icons\">history</i>\r\n                           <span> Order History</span> \r\n                        </a>\r\n                     </mat-list-item>\r\n                    <mat-list-item role=\"listitem\">\r\n                        <a [routerLink]=\"['/account/profile']\" routerLinkActive=\"tab-active\">\r\n                           <span>\r\n                              <i class=\"material-icons\">account_circle</i>Profile\r\n                          </span>\r\n                        </a>\r\n                     </mat-list-item>\r\n                     <mat-list-item role=\"listitem\"> \r\n                        <a [routerLink]=\"['/account/address']\" routerLinkActive=\"tab-active\">\r\n                           <i class=\"material-icons\">location_on</i> \r\n                           <span>Addresses</span> \r\n                        </a>\r\n                     </mat-list-item>\r\n                     <mat-list-item role=\"listitem\"> \r\n                        <a [routerLink]=\"['/account/cards']\" routerLinkActive=\"tab-active\">\r\n                           <i class=\"material-icons\">credit_card</i> \r\n                           <span>Saved Cards</span> \r\n                        </a>\r\n                     </mat-list-item>\r\n                  </mat-list>\r\n               </div>\r\n               <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"70\" fxFlex.lg=\"80\" fxFlex.xl=\"80\" class=\"user-content-wrapper\">\r\n                  <div class=\"tab-container\">\r\n                    <router-outlet></router-outlet>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { AccountComponent } from './Account/Account.component';\r\nimport { ProfileComponent } from './Profile/Profile.component';\r\nimport { EditProfileComponent } from './EditProfile/EditProfile.component';\r\nimport { CardsComponent } from './Cards/Cards.component';\r\nimport { AddressComponent } from './Address/Address.component';\r\nimport { OrderHistoryComponent } from './OrderHistory/OrderHistory.component';\r\nimport { GridProductComponent } from './GridProduct/GridProduct.component';\r\n\r\nexport const UserAccountRoutes : Routes = [\r\n   {\r\n      path : '',\r\n      component : AccountComponent,\r\n      children: [ \r\n         {\r\n            path: 'profile',\r\n            component: ProfileComponent\r\n         },\r\n         { \r\n            path: 'cards', \r\n            component: CardsComponent \r\n         },\r\n         { \r\n            path: 'address', \r\n            component: AddressComponent \r\n         },\r\n         { \r\n            path: 'order-history', \r\n            component: OrderHistoryComponent \r\n         },\r\n         {\r\n            path: 'profile/edit',\r\n            component: EditProfileComponent\r\n         },\r\n         {\r\n            path: 'grid-product',\r\n            component: GridProductComponent\r\n         }\r\n      ]\r\n   }\r\n]","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-grid-product',\r\n  templateUrl: './GridProduct.component.html',\r\n  styleUrls: ['./GridProduct.component.scss']\r\n})\r\nexport class GridProductComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  grid-product works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-Cards',\r\n  templateUrl: './Cards.component.html',\r\n  styleUrls: ['./Cards.component.scss']\r\n})\r\nexport class CardsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n   <div fxLayoutAlign=\"space-between\"><h4>Saved Card Infomation</h4> <button mat-raised-button color=\"accent\" [routerLink]=\"['/account/profile/edit']\" [queryParams]=\"{type:'add-card'}\">Add New Card</button></div>\r\n  \r\n  <div fxLayout=\"row wrap\" class=\"col-gap\">\r\n    <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"40\" fxFlex.xl=\"40\">\r\n      <mat-card>\r\n        <h5>VISA -- Credit Card</h5>\r\n        <div class=\"pt-3\">\r\n          <div class=\"saved-card-box text-xl mb-4\">\r\n            <span>4545 4XXX XXX5 4545</span>\r\n          </div>\r\n          <button mat-raised-button color=\"accent\" [routerLink]=\"['/account/profile/edit']\" [queryParams]=\"{type:'card'}\">Edit</button>\r\n    </div>\r\n    </mat-card>\r\n  </div>\r\n  <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.md=\"50\" fxFlex.lg=\"40\" fxFlex.xl=\"40\">\r\n      <mat-card>\r\n        <h5>MasterCard -- Debit Card</h5>\r\n        <div class=\"pt-3\">\r\n          <div class=\"saved-card-box text-xl mb-4\">\r\n            <span>8585 8XXX XXX5 8585</span>\r\n          </div>\r\n\r\n          <button mat-raised-button color=\"accent\" [routerLink]=\"['/account/profile/edit']\" [queryParams]=\"{type:'card'}\">Edit</button>\r\n       \r\n    </div>\r\n    </mat-card>\r\n  </div>\r\n  </div>\r\n\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-Profile',\r\n  templateUrl: './Profile.component.html',\r\n  styleUrls: ['./Profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n   constructor() { }\r\n\r\n   ngOnInit() {\r\n   }\r\n\r\n}\r\n","<mat-card>\r\n  <h4>Profile Information</h4>\r\n  <div class=\"pt-3\">\r\n    <div class=\"proflie-field mb-3\">\r\n      <label>First Name:</label>\r\n      <span>John</span>\r\n    </div>\r\n    <div class=\"proflie-field mb-3\">\r\n      <label>Last Name:</label>\r\n      <span>Doe</span>\r\n    </div>\r\n    <div class=\"proflie-field mb-3\">\r\n      <label>Gender:</label>\r\n      <span>Male</span>\r\n    </div>\r\n    <div class=\"proflie-field mb-3\">\r\n      <label>Date of birth:</label>\r\n      <span>Jan,06,1979</span>\r\n    </div>\r\n    <div class=\"proflie-field mb-3\">\r\n      <label>Mobile Number:</label>\r\n      <span>+120 256 254 125</span>\r\n    </div>\r\n    <div class=\"proflie-field mb-3\">\r\n      <label>location:</label>\r\n      <span>New York</span>\r\n    </div>\r\n    <div class=\"proflie-field mb-3\">\r\n      <label>E-mail id:</label>\r\n      <span>johnDoe@doe.com</span>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"accent\" [routerLink]=\"['edit']\" [queryParams]=\"{type:'info'}\">Edit</button>\r\n  </div>\r\n</mat-card>\r\n"],"sourceRoot":"webpack:///"}