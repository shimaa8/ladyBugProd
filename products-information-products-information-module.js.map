{"version":3,"sources":["./src/app/AdminPanel/products-information/city/add-edit-city/add-edit-city.component.ts","./src/app/AdminPanel/products-information/city/add-edit-city/add-edit-city.component.html","./src/app/AdminPanel/products-information/district/delete-district/delete-district.component.ts","./src/app/AdminPanel/products-information/district/delete-district/delete-district.component.html","./src/app/AdminPanel/products-information/city/city.component.ts","./src/app/AdminPanel/products-information/city/city.component.html","./src/app/AdminPanel/products-information/rate/rate.component.ts","./src/app/AdminPanel/products-information/rate/rate.component.html","./src/app/AdminPanel/products-information/city/delete-city/delete-city.component.ts","./src/app/AdminPanel/products-information/city/delete-city/delete-city.component.html","./src/app/AdminPanel/products-information/products-information.module.ts","./src/app/AdminPanel/products-information/rating/rating.component.ts","./src/app/AdminPanel/products-information/rating/rating.component.html","../../src/app/components/rating/rating.ts","../../src/app/components/rating/primeng-rating.ts","./src/app/AdminPanel/products-information/get-products/delete-product/delete-product.component.ts","./src/app/AdminPanel/products-information/get-products/delete-product/delete-product.component.html","./src/app/Services/products-info.service.ts","./src/app/AdminPanel/products-information/district/district.component.ts","./src/app/AdminPanel/products-information/district/district.component.html","./src/app/AdminPanel/products-information/get-products/rate-product/rate-product.component.ts","./src/app/AdminPanel/products-information/get-products/rate-product/rate-product.component.html","./src/app/AdminPanel/products-information/get-products/get-products.component.ts","./src/app/AdminPanel/products-information/get-products/get-products.component.html","./src/app/AdminPanel/products-information/district/add-edit-district/add-edit-district.component.ts","./src/app/AdminPanel/products-information/district/add-edit-district/add-edit-district.component.html","./src/app/AdminPanel/products-information/products-information-routing.module.ts"],"names":[],"mappings":"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","file":"products-information-products-information-module.js","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-city',\r\n  templateUrl: './add-edit-city.component.html',\r\n  styleUrls: ['./add-edit-city.component.css']\r\n})\r\nexport class AddEditCityComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEditCityComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n}\r\n","<h2 mat-dialog-title>Add City </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n<!--    -->\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-district',\r\n  templateUrl: './delete-district.component.html',\r\n  styleUrls: ['./delete-district.component.css']\r\n})\r\nexport class DeleteDistrictComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteDistrictComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Delete District</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Measuring Units permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ProductsInfoService} from '../../../Services/products-info.service';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MeasuringUnitsService} from '../../../Services/measuring-units.service';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {TaskTypesService} from '../../../Services/task-types.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditMeasuringComponent} from '../../measuring-units/add-edit-measuring/add-edit-measuring.component';\r\nimport {DeleteMeasuringComponent} from '../../measuring-units/delete-measuring/delete-measuring.component';\r\nimport {ICity} from '../../../Models/products-info';\r\nimport {AddEditCityComponent} from './add-edit-city/add-edit-city.component';\r\nimport {DeleteCityComponent} from './delete-city/delete-city.component';\r\n\r\n@Component({\r\n    selector: 'app-city',\r\n    templateUrl: './city.component.html',\r\n    styleUrls: ['./city.component.css']\r\n})\r\nexport class CityComponent implements OnInit {\r\n\r\n    cols: any;\r\n    products: any;\r\n    roles: IAppAdmin[];\r\n    farms: ICity[];\r\n    profileFarm: IFarmedType;\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    data: any;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n    errorMessage: string;\r\n    profileFarmData: IAddFarmedType;\r\n\r\n    constructor(private _ProductsInfoService: ProductsInfoService, public dialog: MatDialog, private _MeasuringUnitsService: MeasuringUnitsService,\r\n                private _AppAdminService: AppAdminService, private _TaskTypesService: TaskTypesService,\r\n                private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'id', header: 'ID'},\r\n            {field: 'name_ar_localized', header: 'Cities (Ar)'},\r\n            {field: 'name_en_localized', header: 'Cities (En)'},\r\n            {field: 'districts', header: 'Districts'},\r\n\r\n\r\n        ];\r\n        this.getTableData();\r\n    }\r\n\r\n    // showDialogGetFarmedTypeById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarm = res.data as IFarmedType;\r\n    //         console.log(this.profileFarm);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         this.display = true;\r\n    //\r\n    //     });\r\n    // }\r\n\r\n    getTableData() {\r\n        this._ProductsInfoService.getCities().subscribe((res: { data }) => {\r\n            this.farms = res.data.all as ICity[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n\r\n    openAddDataDialog() {\r\n\r\n        const dialogRef = this.dialog.open(AddEditCityComponent, {\r\n                data: {\r\n                    FarmedData: this._ProductsInfoService.AddCityForm, error: this.errorMessage,\r\n                }\r\n            })\r\n        ;\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.errorMessage = null;\r\n\r\n            if (result) {\r\n                this._ProductsInfoService.AddCityForm = result.FarmedData;\r\n                this.onAddData();\r\n\r\n            } else {\r\n                this._ProductsInfoService.AddCityForm = {} as ICity;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddData() {\r\n        this._ProductsInfoService.addCity().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this._ProductsInfoService.AddCityForm = {} as ICity;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    // getDataById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarmData = res.data as IAddFarmedType;\r\n    //         console.log(this.profileFarmData);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         // this.display = true;\r\n    //     });\r\n    //\r\n    //\r\n    // }\r\n\r\n    openEditDataDialog(classData: ICity) {\r\n\r\n\r\n        const dialogRef = this.dialog.open(AddEditCityComponent, {\r\n            data: {FarmedData: classData}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this._ProductsInfoService.AddCityForm.name_ar_localized = result.FarmedData.name_ar_localized;\r\n                this._ProductsInfoService.AddCityForm.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onEditFarmedType(result.FarmedData.id);\r\n\r\n            } else {\r\n                this._ProductsInfoService.AddCityForm = {} as ICity;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditFarmedType(roleId) {\r\n        this._ProductsInfoService.editCity(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this._ProductsInfoService.AddCityForm = {} as ICity;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Updated successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    openDeleteDataDialog(data) {\r\n        const dialogRef = this.dialog.open(DeleteCityComponent, {\r\n            data: {farmData: data}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteData(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteData(roleId) {\r\n        this._ProductsInfoService.deleteCity(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getTableData()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddDataDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add City\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                                    <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    <!--                    {{rowData[col.field]}}-->\r\n                    <span *ngIf=\"col.field!=='districts'\"> {{rowData[col.field]}}</span>\r\n                    <span *ngIf=\"col.field=='districts'\">\r\n<!--                                    {{rowData[col.field].districts|json}}-->\r\n                        <span *ngFor=\"let dis of rowData[col.field]\">\r\n                            {{dis.name_ar_localized}},\r\n                        </span>\r\n                        <!--                        {{rowData[col.field]}}-->\r\n                                    </span>\r\n                </td>\r\n<!--                <td *ngFor=\"let col of columns;let i=index\">-->\r\n<!--                                  <span *ngIf=\"col.field=='districts'\">-->\r\n<!--&lt;!&ndash;                                    {{rowData[col.field].districts|json}}&ndash;&gt;-->\r\n<!--                        <span *ngFor=\"let dis of rowData[col.field]\">-->\r\n<!--                            {{dis.name_ar_localized}},-->\r\n<!--                        </span>-->\r\n<!--                                      &lt;!&ndash;                        {{rowData[col.field]}}&ndash;&gt;-->\r\n<!--                                    </span>-->\r\n<!--                </td>-->\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditDataDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openDeleteDataDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rate',\r\n  templateUrl: './rate.component.html',\r\n  styleUrls: ['./rate.component.css']\r\n})\r\nexport class RateComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>rate works!</p>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-city',\r\n  templateUrl: './delete-city.component.html',\r\n  styleUrls: ['./delete-city.component.css']\r\n})\r\nexport class DeleteCityComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteCityComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Delete City</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this City permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProductsInformationRoutingModule } from './products-information-routing.module';\r\nimport { CityComponent } from './city/city.component';\r\nimport { DistrictComponent } from './district/district.component';\r\nimport { RateComponent } from './rate/rate.component';\r\nimport { GetProductsComponent } from './get-products/get-products.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {TableModule} from 'primeng/table';\r\nimport { AddEditCityComponent } from './city/add-edit-city/add-edit-city.component';\r\nimport { DeleteCityComponent } from './city/delete-city/delete-city.component';\r\nimport { AddEditDistrictComponent } from './district/add-edit-district/add-edit-district.component';\r\nimport { DeleteDistrictComponent } from './district/delete-district/delete-district.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { DeleteProductComponent } from './get-products/delete-product/delete-product.component';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { RatingComponent } from './rating/rating.component';\r\nimport { RateProductComponent } from './get-products/rate-product/rate-product.component';\r\nimport {RatingModule} from 'primeng/rating';\r\nimport {BarRatingModule} from 'ngx-bar-rating';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CityComponent, DistrictComponent, RateComponent, GetProductsComponent, AddEditCityComponent, DeleteCityComponent, AddEditDistrictComponent, DeleteDistrictComponent, DeleteProductComponent, RatingComponent, RateProductComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ProductsInformationRoutingModule,\r\n        MatCardModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        TableModule,\r\n        MatDialogModule,\r\n        FormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        RatingModule,\r\n        BarRatingModule\r\n    ]\r\n})\r\nexport class ProductsInformationModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rating',\r\n  templateUrl: './rating.component.html',\r\n  styleUrls: ['./rating.component.css']\r\n})\r\nexport class RatingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>rating works!</p>\r\n","import {NgModule,Component,OnInit,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const RATING_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Rating),\n  multi: true\n};\n\n@Component({\n    selector: 'p-rating',\n    template: `\n        <div class=\"p-rating\" [ngClass]=\"{'p-readonly': readonly, 'p-disabled': disabled}\">\n            <span [attr.tabindex]=\"(disabled || readonly) ? null : '0'\" *ngIf=\"cancel\" (click)=\"clear($event)\" (keydown.enter)=\"clear($event)\" class=\"p-rating-icon p-rating-cancel\" [ngClass]=\"iconCancelClass\" [ngStyle]=\"iconCancelStyle\"></span>\n            <span *ngFor=\"let star of starsArray;let i=index\" class=\"p-rating-icon\" [attr.tabindex]=\"(disabled || readonly) ? null : '0'\"  (click)=\"rate($event,i)\" (keydown.enter)=\"rate($event,i)\"\n                [ngClass]=\"(!value || i >= value) ? iconOffClass : iconOnClass\"\n                [ngStyle]=\"(!value || i >= value) ? iconOffStyle : iconOnStyle\"></span>\n        </div>\n    `,\n    providers: [RATING_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./rating.css']\n})\nexport class Rating implements OnInit,ControlValueAccessor {\n\n    @Input() disabled: boolean;\n\n    @Input() readonly: boolean;\n\n    @Input() stars: number = 5;\n\n    @Input() cancel: boolean = true;\n\n    @Input() iconOnClass: string = 'pi pi-star';\n\n    @Input() iconOnStyle: any;\n\n    @Input() iconOffClass: string = 'pi pi-star-o';\n\n    @Input() iconOffStyle: any;\n\n    @Input() iconCancelClass: string = 'pi pi-ban';\n\n    @Input() iconCancelStyle: any;\n\n    @Output() onRate: EventEmitter<any> = new EventEmitter();\n\n    @Output() onCancel: EventEmitter<any> = new EventEmitter();\n\n    constructor(private cd: ChangeDetectorRef) {} \n    \n    value: number;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    public starsArray: number[];\n    \n    ngOnInit() {\n        this.starsArray = [];\n        for(let i = 0; i < this.stars; i++) {\n            this.starsArray[i] = i;\n        }\n    }\n    \n    rate(event, i: number): void {\n        if (!this.readonly&&!this.disabled) {\n            this.value = (i + 1);\n            this.onModelChange(this.value);\n            this.onModelTouched();\n            this.onRate.emit({\n                originalEvent: event,\n                value: (i+1)\n            });\n        }\n        event.preventDefault();        \n    }\n    \n    clear(event): void {\n        if (!this.readonly&&!this.disabled) {\n            this.value = null;\n            this.onModelChange(this.value);\n            this.onModelTouched();\n            this.onCancel.emit(event);\n        }\n        event.preventDefault();\n    }\n    \n    writeValue(value: any) : void {\n        this.value = value;\n        this.cd.detectChanges();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Rating],\n    declarations: [Rating]\n})\nexport class RatingModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-product',\r\n  templateUrl: './delete-product.component.html',\r\n  styleUrls: ['./delete-product.component.css']\r\n})\r\nexport class DeleteProductComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteProductComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Products</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Measuring Units permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {DataService} from './data.service';\r\nimport {ICity, IDistrict, IRate} from '../Models/products-info';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductsInfoService {\r\n\r\n    AddCityForm = {} as ICity;\r\n    AddDistrictForm = {} as IDistrict;\r\n    AddRateForm = {} as IRate;\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    getCities() {\r\n        return this.dataService.get('cities');\r\n\r\n    }\r\n\r\n    getDistricts() {\r\n        return this.dataService.get('districts');\r\n\r\n    }\r\n\r\n    getProducts() {\r\n        return this.dataService.get('products');\r\n\r\n    }\r\n\r\n    deleteProducts(id: number) {\r\n        return this.dataService.delete('products' + '/', id);\r\n\r\n    }\r\n\r\n    addCity() {\r\n        return this.dataService.post('admin/cities', this.AddCityForm);\r\n\r\n    }\r\n\r\n    deleteCity(id: number) {\r\n        return this.dataService.delete('admin/cities' + '/', id);\r\n\r\n    }\r\n\r\n    editCity(id: number) {\r\n        return this.dataService.update('admin/cities' + '/' + id, this.AddCityForm);\r\n\r\n    }\r\n\r\n    addDistrict() {\r\n        return this.dataService.post('admin/districts', this.AddDistrictForm);\r\n\r\n    }\r\n\r\n    deleteDistrict(id: number) {\r\n        return this.dataService.delete('admin/districts' + '/', id);\r\n\r\n    }\r\n\r\n    editDistrict(id: number) {\r\n        return this.dataService.update('admin/districts' + '/' + id, this.AddDistrictForm);\r\n\r\n    }\r\n\r\n    AddRating() {\r\n        return this.dataService.post('admin/products/rate', this.AddRateForm);\r\n\r\n    }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {ICity, IDistrict} from '../../../Models/products-info';\r\nimport {IAddFarmedType, IFarmedType} from '../../../Models/farms';\r\nimport {ProductsInfoService} from '../../../Services/products-info.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MeasuringUnitsService} from '../../../Services/measuring-units.service';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {TaskTypesService} from '../../../Services/task-types.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditCityComponent} from '../city/add-edit-city/add-edit-city.component';\r\nimport {DeleteCityComponent} from '../city/delete-city/delete-city.component';\r\nimport {AddEditDistrictComponent} from './add-edit-district/add-edit-district.component';\r\nimport {DeleteDistrictComponent} from './delete-district/delete-district.component';\r\n\r\n@Component({\r\n    selector: 'app-district',\r\n    templateUrl: './district.component.html',\r\n    styleUrls: ['./district.component.css']\r\n})\r\nexport class DistrictComponent implements OnInit {\r\n\r\n\r\n    cols: any;\r\n    products: any;\r\n    roles: IAppAdmin[];\r\n    farms: IDistrict[];\r\n    cities: ICity[];\r\n    profileFarm: IFarmedType;\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    data: any;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n    errorMessage: string;\r\n    profileFarmData: IAddFarmedType;\r\n\r\n    constructor(private _ProductsInfoService: ProductsInfoService, public dialog: MatDialog, private _MeasuringUnitsService: MeasuringUnitsService,\r\n                private _AppAdminService: AppAdminService, private _TaskTypesService: TaskTypesService,\r\n                private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'id', header: 'ID'},\r\n            {field: 'name_ar_localized', header: 'Cities (Ar)'},\r\n            {field: 'name_en_localized', header: 'Cities (En)'},\r\n            {field: 'districts', header: 'Districts'},\r\n\r\n\r\n        ];\r\n        this.getTableData();\r\n        this.getTableCities();\r\n\r\n    }\r\n\r\n    // showDialogGetFarmedTypeById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarm = res.data as IFarmedType;\r\n    //         console.log(this.profileFarm);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         this.display = true;\r\n    //\r\n    //     });\r\n    // }\r\n    getTableCities() {\r\n        this._ProductsInfoService.getCities().subscribe((res: { data }) => {\r\n            this.cities = res.data.all as ICity[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n    getTableData() {\r\n        this._ProductsInfoService.getDistricts().subscribe((res: { data }) => {\r\n            this.farms = res.data.all as IDistrict[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n\r\n    openAddDataDialog() {\r\n        const dialogRef = this.dialog.open(AddEditDistrictComponent, {\r\n                data: {\r\n                    FarmedData: this._ProductsInfoService.AddDistrictForm, cities: this.cities, error: this.errorMessage,\r\n                }\r\n            })\r\n        ;\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.errorMessage = null;\r\n\r\n            if (result) {\r\n                this._ProductsInfoService.AddDistrictForm = result.FarmedData;\r\n                this.onAddData();\r\n\r\n            } else {\r\n                this._ProductsInfoService.AddDistrictForm = {} as IDistrict;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddData() {\r\n        this._ProductsInfoService.addDistrict().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this._ProductsInfoService.AddDistrictForm = {} as IDistrict;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    // getDataById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarmData = res.data as IAddFarmedType;\r\n    //         console.log(this.profileFarmData);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         // this.display = true;\r\n    //     });\r\n    //\r\n    //\r\n    // }\r\n\r\n    openEditDataDialog(classData: IDistrict) {\r\n\r\n\r\n        const dialogRef = this.dialog.open(AddEditDistrictComponent, {\r\n            data: {FarmedData: classData, cities: this.cities}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this._ProductsInfoService.AddDistrictForm.name_ar_localized = result.FarmedData.name_ar_localized;\r\n                this._ProductsInfoService.AddDistrictForm.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onEditFarmedType(result.FarmedData.id);\r\n\r\n            } else {\r\n                this._ProductsInfoService.AddDistrictForm = {} as IDistrict;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditFarmedType(roleId) {\r\n        this._ProductsInfoService.editDistrict(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this._ProductsInfoService.AddDistrictForm = {} as IDistrict;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Updated successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    openDeleteDataDialog(data) {\r\n        const dialogRef = this.dialog.open(DeleteDistrictComponent, {\r\n            data: {farmData: data}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteData(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteData(roleId) {\r\n        this._ProductsInfoService.deleteDistrict(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getTableData()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddDataDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add District\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                                    <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    <!--                    {{rowData[col.field]}}-->\r\n                    <span *ngIf=\"col.field!=='districts'\"> {{rowData[col.field]}}</span>\r\n                    <span *ngIf=\"col.field=='districts'\">\r\n<!--                                    {{rowData[col.field].districts|json}}-->\r\n                        <span *ngFor=\"let dis of rowData[col.field]\">\r\n                            {{dis.name_ar_localized}},\r\n                        </span>\r\n                        <!--                        {{rowData[col.field]}}-->\r\n                                    </span>\r\n                </td>\r\n                <!--                <td *ngFor=\"let col of columns;let i=index\">-->\r\n                <!--                                  <span *ngIf=\"col.field=='districts'\">-->\r\n                <!--&lt;!&ndash;                                    {{rowData[col.field].districts|json}}&ndash;&gt;-->\r\n                <!--                        <span *ngFor=\"let dis of rowData[col.field]\">-->\r\n                <!--                            {{dis.name_ar_localized}},-->\r\n                <!--                        </span>-->\r\n                <!--                                      &lt;!&ndash;                        {{rowData[col.field]}}&ndash;&gt;-->\r\n                <!--                                    </span>-->\r\n                <!--                </td>-->\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditDataDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openDeleteDataDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-rate-product',\r\n  templateUrl: './rate-product.component.html',\r\n  styleUrls: ['./rate-product.component.css']\r\n})\r\nexport class RateProductComponent implements OnInit {\r\n  formRating: any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<RateProductComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Product Rate</h2>\r\n<!--<div class=\"alert alert-danger \" role=\"alert\">-->\r\n<span>Give a rate for product {{data.FarmedData.name_en_localized}}</span>\r\n\r\n    <div class=\"row text-center pb-5\">\r\n        <bar-rating name=\"rating\" [(ngModel)]=\"formRating\" [max]=\"5\" required ></bar-rating>\r\n    </div>\r\n<span>Rate is {{formRating}}</span>\r\n\r\n<!--</div>-->\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"formRating\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {ICity, IRate, ProductsInfo} from '../../../Models/products-info';\r\nimport {IAddFarmedType, IFarmedType} from '../../../Models/farms';\r\nimport {ProductsInfoService} from '../../../Services/products-info.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MeasuringUnitsService} from '../../../Services/measuring-units.service';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {TaskTypesService} from '../../../Services/task-types.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditCityComponent} from '../city/add-edit-city/add-edit-city.component';\r\nimport {DeleteCityComponent} from '../city/delete-city/delete-city.component';\r\nimport {DeleteProductComponent} from './delete-product/delete-product.component';\r\nimport {RateProductComponent} from './rate-product/rate-product.component';\r\n\r\n@Component({\r\n    selector: 'app-get-products',\r\n    templateUrl: './get-products.component.html',\r\n    styleUrls: ['./get-products.component.css']\r\n})\r\nexport class GetProductsComponent implements OnInit {\r\n\r\n    cols: any;\r\n    // products: any;\r\n    roles: IAppAdmin[];\r\n    products: ProductsInfo[];\r\n    profileFarm: IFarmedType;\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    data: any;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n    errorMessage: string;\r\n    profileFarmData: IAddFarmedType;\r\n\r\n    constructor(private _ProductsInfoService: ProductsInfoService, public dialog: MatDialog, private _MeasuringUnitsService: MeasuringUnitsService,\r\n                private _AppAdminService: AppAdminService, private _TaskTypesService: TaskTypesService,\r\n                private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'id', header: 'ID'},\r\n            {field: 'name_ar_localized', header: 'Product Name'},\r\n            {field: 'name_en_localized', header: 'Product Name (En)'},\r\n            {field: 'price', header: 'Price'},\r\n            {field: 'rating', header: 'Rate'},\r\n            {field: 'description_ar_localized', header: 'Descraption (Ar)'},\r\n            {field: 'description_en_localized', header: 'Descraption (En)'},\r\n        ];\r\n        this.getTableData();\r\n    }\r\n\r\n    // showDialogGetFarmedTypeById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarm = res.data as IFarmedType;\r\n    //         console.log(this.profileFarm);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         this.display = true;\r\n    //\r\n    //     });\r\n    // }\r\n\r\n    getTableData() {\r\n        this._ProductsInfoService.getProducts().subscribe((res: { data }) => {\r\n            this.products = res.data.all as ProductsInfo[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n\r\n    openAddDataDialog() {\r\n\r\n        const dialogRef = this.dialog.open(AddEditCityComponent, {\r\n                data: {\r\n                    FarmedData: this._ProductsInfoService.AddCityForm, error: this.errorMessage,\r\n                }\r\n            })\r\n        ;\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.errorMessage = null;\r\n\r\n            if (result) {\r\n                this._ProductsInfoService.AddCityForm = result.FarmedData;\r\n                this.onAddData();\r\n\r\n            } else {\r\n                this._ProductsInfoService.AddCityForm = {} as ICity;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddData() {\r\n        this._ProductsInfoService.addCity().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this._ProductsInfoService.AddCityForm = {} as ICity;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    // getDataById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarmData = res.data as IAddFarmedType;\r\n    //         console.log(this.profileFarmData);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         // this.display = true;\r\n    //     });\r\n    //\r\n    //\r\n    // }\r\n\r\n    openRatingDataDialog(classData: ProductsInfo) {\r\n\r\n\r\n        const dialogRef = this.dialog.open(RateProductComponent, {\r\n            data: {\r\n                FarmedData: classData,\r\n            }\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                console.log(result);\r\n                this._ProductsInfoService.AddRateForm.product = classData.id;\r\n                this._ProductsInfoService.AddRateForm.rating = result;\r\n\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                // this.onEditFarmedType(result.FarmedData.id);\r\n                this.onAddRating();\r\n            } else {\r\n                this._ProductsInfoService.AddRateForm = {} as IRate;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddRating() {\r\n        this._ProductsInfoService.AddRating().subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this._ProductsInfoService.AddRateForm = {} as IRate;\r\n\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Updated successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    openDeleteDataDialog(data) {\r\n        const dialogRef = this.dialog.open(DeleteProductComponent, {\r\n            data: {farmData: data}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteData(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteData(roleId) {\r\n        this._ProductsInfoService.deleteProducts(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getTableData();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getTableData()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n<!--    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddDataDialog()\">-->\r\n<!--        <mat-icon class=\"ml-2\">add</mat-icon>-->\r\n<!--        Add Measuring Units-->\r\n<!--    </button>-->\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"products\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                                    <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    <!--                    {{rowData[col.field]}}-->\r\n                    <span *ngIf=\"col.field!=='districts'\"> {{rowData[col.field]}}</span>\r\n\r\n                </td>\r\n<!--                <td *ngFor=\"let col of columns\">-->\r\n<!--                                  <span *ngIf=\"col.field=='districts'\">-->\r\n<!--                        <span *ngFor=\"let dis of col.field\">-->\r\n<!--                            {{dis.name_ar_localized}}-->\r\n<!--                        </span>-->\r\n<!--                                      &lt;!&ndash;                        {{rowData[col.field]}}&ndash;&gt;-->\r\n<!--</span>-->\r\n<!--                </td>-->\r\n                <td>\r\n                    <div class=\"embryo-ham-icon d-flex justify-content-between\">\r\n                        <button (click)=\"openRatingDataDialog(rowData)\" mat-mini-fab class=\"mr-1\"\r\n                                color=\"primary\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>reviews</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openDeleteDataDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ProductsInfoService} from '../../../../Services/products-info.service';\r\n\r\n@Component({\r\n    selector: 'app-add-edit-district',\r\n    templateUrl: './add-edit-district.component.html',\r\n    styleUrls: ['./add-edit-district.component.css']\r\n})\r\nexport class AddEditDistrictComponent implements OnInit {\r\n\r\n    constructor(public _ProductsInfoService: ProductsInfoService, public dialogRef: MatDialogRef<AddEditDistrictComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n\r\n}\r\n","<h2 mat-dialog-title>Add District </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!--    -->\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>City Name</mat-label>\r\n                        <mat-select name=\"farm_activity_type_id\" required\r\n                                    [(ngModel)]=\"data.FarmedData.city_id\"\r\n                                    #farm_activity_type_id=\"ngModel\">\r\n                            <mat-option *ngFor=\"let activity of data.cities\" [value]=\"activity.id\">\r\n                                {{activity.name_ar_localized}}\r\n                            </mat-option>\r\n\r\n                        </mat-select>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {CityComponent} from './city/city.component';\r\nimport {DistrictComponent} from './district/district.component';\r\nimport {RateComponent} from './rate/rate.component';\r\nimport {GetProductsComponent} from './get-products/get-products.component';\r\n\r\nconst routes: Routes = [\r\n    {path: '', component: GetProductsComponent},\r\n    {path: 'cities', component: CityComponent},\r\n    {path: 'district', component: DistrictComponent},\r\n    {path: 'rate', component: RateComponent},\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProductsInformationRoutingModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}