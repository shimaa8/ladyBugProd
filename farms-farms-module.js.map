{"version":3,"sources":["../../src/app/components/progressbar/progressbar.ts","../../src/app/components/progressbar/primeng-progressbar.ts","./src/app/AdminPanel/farms/irrigation-ways/irrigation-ways.component.ts","./src/app/AdminPanel/farms/irrigation-ways/irrigation-ways.component.html","./src/app/AdminPanel/farms/setting-farm/setting-farm.component.ts","./src/app/AdminPanel/farms/setting-farm/setting-farm.component.html","./src/app/AdminPanel/farms/animal-fodder/add-animal-fodder/add-animal-fodder.component.ts","./src/app/AdminPanel/farms/animal-fodder/add-animal-fodder/add-animal-fodder.component.html","./src/app/AdminPanel/farms/acidity-types/acidity-types.component.ts","./src/app/AdminPanel/farms/acidity-types/acidity-types.component.html","./src/app/AdminPanel/farms/soil-types/soil-types.component.ts","./src/app/AdminPanel/farms/soil-types/soil-types.component.html","./src/app/AdminPanel/farms/seedling-sources/seedling-sources.component.ts","./src/app/AdminPanel/farms/seedling-sources/seedling-sources.component.html","./src/app/AdminPanel/farms/farmed-type-class/add-edit-class/add-edit-class.component.ts","./src/app/AdminPanel/farms/farmed-type-class/add-edit-class/add-edit-class.component.html","./src/app/AdminPanel/farms/salt-types/delete-salt-types/delete-salt-types.component.ts","./src/app/AdminPanel/farms/salt-types/delete-salt-types/delete-salt-types.component.html","./src/app/AdminPanel/farms/soil-types/add-edit-soil-types/add-edit-soil-types.component.ts","./src/app/AdminPanel/farms/soil-types/add-edit-soil-types/add-edit-soil-types.component.html","./src/app/AdminPanel/farms/chemical-fertilizer-sources/delete-chemical-fertilizer-sources/delete-chemical-fertilizer-sources.component.ts","./src/app/AdminPanel/farms/chemical-fertilizer-sources/delete-chemical-fertilizer-sources/delete-chemical-fertilizer-sources.component.html","./src/app/AdminPanel/farms/farming-way/farming-way.component.ts","./src/app/AdminPanel/farms/farming-way/farming-way.component.html","./src/app/AdminPanel/farms/home-plant-illuminating-sources/delete-plant-illuminating-sources/delete-plant-illuminating-sources.component.ts","./src/app/AdminPanel/farms/home-plant-illuminating-sources/delete-plant-illuminating-sources/delete-plant-illuminating-sources.component.html","./src/app/AdminPanel/farms/farming-way/add-way/add-way.component.ts","./src/app/AdminPanel/farms/farming-way/add-way/add-way.component.html","./src/app/AdminPanel/farms/salt-types/add-edit-salt-types/add-edit-salt-types.component.ts","./src/app/AdminPanel/farms/salt-types/add-edit-salt-types/add-edit-salt-types.component.html","./src/app/AdminPanel/farms/animal-fodder-sources/delete-animal-fodder-sources/delete-animal-fodder-sources.component.ts","./src/app/AdminPanel/farms/animal-fodder-sources/delete-animal-fodder-sources/delete-animal-fodder-sources.component.html","./src/app/AdminPanel/farms/animal-breeding/animal-breeding.component.ts","./src/app/AdminPanel/farms/animal-breeding/animal-breeding.component.html","./src/app/AdminPanel/farms/plant-pot-sizes/delete-plant-pot-sizes/delete-plant-pot-sizes.component.ts","./src/app/AdminPanel/farms/plant-pot-sizes/delete-plant-pot-sizes/delete-plant-pot-sizes.component.html","./src/app/AdminPanel/farms/farming-methods/add-edit-method/add-edit-method.component.ts","./src/app/AdminPanel/farms/farming-methods/add-edit-method/add-edit-method.component.html","./src/app/AdminPanel/farms/farms.component.ts","./src/app/AdminPanel/farms/farms.component.html","./src/app/AdminPanel/farms/farms.module.ts","./src/app/AdminPanel/farms/acidity-types/add-edit-acidity-types/add-edit-acidity-types.component.ts","./src/app/AdminPanel/farms/acidity-types/add-edit-acidity-types/add-edit-acidity-types.component.html","./src/app/AdminPanel/farms/seedling-sources/delete-seedling/delete-seedling.component.ts","./src/app/AdminPanel/farms/seedling-sources/delete-seedling/delete-seedling.component.html","./src/app/AdminPanel/farms/plant-pot-sizes/plant-pot-sizes.component.ts","./src/app/AdminPanel/farms/plant-pot-sizes/plant-pot-sizes.component.html","./src/app/AdminPanel/farms/animal-breeding/delete-animal-breeding/delete-animal-breeding.component.ts","./src/app/AdminPanel/farms/animal-breeding/delete-animal-breeding/delete-animal-breeding.component.html","./src/app/AdminPanel/farms/farmed-type/delete-type/delete-type.component.ts","./src/app/AdminPanel/farms/farmed-type/delete-type/delete-type.component.html","./src/app/AdminPanel/farms/animal-medicine/animal-medicine.component.ts","./src/app/AdminPanel/farms/animal-medicine/animal-medicine.component.html","./src/app/AdminPanel/farms/animal-breeding/add-edit-animal-breeding/add-edit-animal-breeding.component.ts","./src/app/AdminPanel/farms/animal-breeding/add-edit-animal-breeding/add-edit-animal-breeding.component.html","./src/app/AdminPanel/farms/acidity-types/delete-acidity-types/delete-acidity-types.component.ts","./src/app/AdminPanel/farms/acidity-types/delete-acidity-types/delete-acidity-types.component.html","./src/app/AdminPanel/farms/soil-types/delete-soil-types/delete-soil-types.component.ts","./src/app/AdminPanel/farms/soil-types/delete-soil-types/delete-soil-types.component.html","./src/app/AdminPanel/farms/seedling-sources/add-edit-seedling-sources/add-edit-seedling-sources.component.ts","./src/app/AdminPanel/farms/seedling-sources/add-edit-seedling-sources/add-edit-seedling-sources.component.html","./src/app/AdminPanel/farms/salt-types/salt-types.component.ts","./src/app/AdminPanel/farms/salt-types/salt-types.component.html","./src/app/AdminPanel/farms/farming-methods/delete-method/delete-method.component.ts","./src/app/AdminPanel/farms/farming-methods/delete-method/delete-method.component.html","./src/app/AdminPanel/farms/animal-fodder-sources/add-edit-animal-fodder-sources/add-edit-animal-fodder-sources.component.ts","./src/app/AdminPanel/farms/animal-fodder-sources/add-edit-animal-fodder-sources/add-edit-animal-fodder-sources.component.html","./src/app/AdminPanel/farms/animal-medicine/delete-animal-medicine/delete-animal-medicine.component.ts","./src/app/AdminPanel/farms/animal-medicine/delete-animal-medicine/delete-animal-medicine.component.html","ngx-mat-file-input/lib/model/file-input-config.model.ts","ngx-mat-file-input/lib/model/file-input.model.ts","ngx-mat-file-input/lib/file-input/file-input-mixin.ts","ngx-mat-file-input/lib/file-input/file-input.component.ts","ngx-mat-file-input/lib/pipe/byte-format.pipe.ts","ngx-mat-file-input/lib/material-file-input.module.ts","ngx-mat-file-input/lib/validator/file-validator.ts","ngx-mat-file-input/ngx-mat-file-input.ts","./src/app/AdminPanel/farms/farmed-type/add-type/add-type.component.ts","./src/app/AdminPanel/farms/farmed-type/add-type/add-type.component.html","./src/app/AdminPanel/farms/plant-pot-sizes/add-edit-plant-pot-sizes/add-edit-plant-pot-sizes.component.ts","./src/app/AdminPanel/farms/plant-pot-sizes/add-edit-plant-pot-sizes/add-edit-plant-pot-sizes.component.html","./src/app/AdminPanel/farms/farms-routing.module.ts","./src/app/AdminPanel/farms/farmed-type-class/farmed-type-class.component.ts","./src/app/AdminPanel/farms/farmed-type-class/farmed-type-class.component.html","./src/app/AdminPanel/farms/farmed-type-class/delete-class/delete-class.component.ts","./src/app/AdminPanel/farms/farmed-type-class/delete-class/delete-class.component.html","./src/app/AdminPanel/farms/home-plant-illuminating-sources/add-edit-plant-illuminating-sources/add-edit-plant-illuminating-sources.component.ts","./src/app/AdminPanel/farms/home-plant-illuminating-sources/add-edit-plant-illuminating-sources/add-edit-plant-illuminating-sources.component.html","./src/app/AdminPanel/farms/animal-fodder/animal-fodder.component.ts","./src/app/AdminPanel/farms/animal-fodder/animal-fodder.component.html","./src/app/AdminPanel/farms/farmed-type/edit-type/edit-type.component.ts","./src/app/AdminPanel/farms/farmed-type/edit-type/edit-type.component.html","./src/app/AdminPanel/farms/farming-way/delete-way/delete-way.component.ts","./src/app/AdminPanel/farms/farming-way/delete-way/delete-way.component.html","./src/app/AdminPanel/farms/animal-medicine/add-edit-animal-medicine/add-edit-animal-medicine.component.ts","./src/app/AdminPanel/farms/animal-medicine/add-edit-animal-medicine/add-edit-animal-medicine.component.html","./src/app/AdminPanel/farms/animal-fodder/delete-animal-fodder/delete-animal-fodder.component.ts","./src/app/AdminPanel/farms/animal-fodder/delete-animal-fodder/delete-animal-fodder.component.html","./src/app/AdminPanel/farms/farming-methods/farming-methods.component.ts","./src/app/AdminPanel/farms/farming-methods/farming-methods.component.html","./src/app/AdminPanel/farms/chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources.component.ts","./src/app/AdminPanel/farms/chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources.component.html","./src/app/AdminPanel/farms/view-farm/view-farm.component.ts","./src/app/AdminPanel/farms/view-farm/view-farm.component.html","./src/app/AdminPanel/farms/home-plant-illuminating-sources/home-plant-illuminating-sources.component.ts","./src/app/AdminPanel/farms/home-plant-illuminating-sources/home-plant-illuminating-sources.component.html","./src/app/AdminPanel/farms/chemical-fertilizer-sources/chemical-fertilizer-sources.component.ts","./src/app/AdminPanel/farms/chemical-fertilizer-sources/chemical-fertilizer-sources.component.html","./src/app/AdminPanel/farms/animal-fodder-sources/animal-fodder-sources.component.ts","./src/app/AdminPanel/farms/animal-fodder-sources/animal-fodder-sources.component.html","./src/app/AdminPanel/farms/farmed-type/farmed-type.component.ts","./src/app/AdminPanel/farms/farmed-type/farmed-type.component.html"],"names":[],"mappings":"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A,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YAAA,+EAEA;YAFyC,wNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,mIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,wEAAY;YAAA,4DAAY;YACnC;YAAA,iFAEA;YAFyC,wNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,mIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YAIN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAGJ;YAAA,4DAAM;YAEV;YAAA,4DAAqB;YACrB;YAAA,2FACI;YAAA;YAAA,+EAA0D;YAAvC,kJAAS,eAAW,IAAC;YAAkB,mEAAM;YAAA,4DAAS;YACzE;YAAA,+EACI;YAAA,yFACJ;YAAA,4DAAS;YACb;YAAA,4DAAqB;YACzB;YAAA,4DAAO;YACP;;;;;YA5IqB,0DAAkB;YAAlB,gFAAkB;YAc0B,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YAUZ,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YAyGlC,4DAAyB;YAAzB,sFAAyB;;mCDzIpE;CAsBC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FACI;YAAA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YACA;YACA;YACA;YAAA,oFAEI;YADQ,uNAA4C;YACpD;YAAA,kIACI;YAGR;YAAA,4DAAa;YACb;YACA;YACA;YACA;YACA;YACA;YAAA,gIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,2EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YAAA,iFAEA;YAFyC,qNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,gIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,2EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,wEAAY;YAAA,4DAAY;YACnC;YAAA,iFAEA;YAFyC,qNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,gIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YAIN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAGJ;YAAA,4DAAM;YAEV;YAAA,4DAAqB;YACrB;YAAA,2FACI;YAAA;YAAA,+EAA0D;YAAvC,+IAAS,eAA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CI;YAAA;YAAA,yHACI;YAMJ;YAAA,wFACI;YAAA;YAAA,0EAEI;YAAA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YAAA,+EAEA;YAFyC,4NAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,uIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,wEAAY;YAAA,4DAAY;YACnC;YAAA,iFAEA;YAFyC,4NAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,uIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YAIN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAGJ;YAAA,4DAAM;YAEV;YAAA,4DAAqB;YACrB;YAAA,2FACI;YAAA;YAAA,+EAA0D;YAAvC,sJAAS,eAAW,IAAC;YAAkB,mEAAM;YAAA,4DAAS;YACzE;YAAA,+EACI;YAAA,yFACJ;YAAA,4DAAS;YACb;YAAA,4DAAqB;YACzB;YAAA,4DAAO;YACP;;;;;YA5IqB,0DAAkB;YAAlB,gFAAkB;YAc0B,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YAUZ,2DAA+C;YAA/C,0GAA+C;YAG7E,0D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IACA,CAAC;IAED,uDAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;0HAVU,mCAAmC,0MAE2C,wEAAe;uHAF7F,mCAAmC;YCRhD,wEAAqB;YAAA,qFAA0B;YAAA,4DAAK;YACpD;YAAA,gFACI;YAAA;YAAA,gIACI;YAMJ;YAAA,wFACI;YAAA;YAAA,0EAEI;YAAA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YAAA,+EAEA;YAFyC,mOAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,8IACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,wEAAY;YAAA,4DAAY;YACnC;YAAA,iFAEA;YAFyC,mOAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,8IACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YAIN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAGJ;YAAA,4DAAM;YAEV;YAAA,4DAAqB;YACrB;YAAA,2FACI;YAAA;YAAA,+EAA0D;YAAvC,6JAAS,eAAW,IAAC;YAAkB,mEAAM;YAAA,4DAAS;YACzE;YAAA,+EACI;YAAA,yFACJ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AA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YAAA,+EAEA;YAFyC,iNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,4HACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,wEAAY;YAAA,4DAAY;YACnC;YAAA,iFAEA;YAFyC,iNAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,4HACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,iEAAK;YAAA,4DAAY;YAE5B;YAAA,0FAGA;YAHgC,8JAAU,wBAAoB,IAAC;YAG/D;YAAA,4DAAqB;YACrB;YACA;YACA;YACA;YACJ;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,8EAAkB;YAAA,4DAAY;YACzC;YACA;YACA;YACA;YAAA,sFAEI;YADQ,0NAAmD;YAC3D;YAAA,8HACI;YAGR;YAAA,4DAAa;YACb;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACJ;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YAEN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAGJ;YAAA,4DAAM;YAEV;YAAA,4DAAqB;YACrB;YAAA,2FACI;YAAA;YAAA,+EAA0D;YAAvC,2IAAS,eAAW,IAAC;YAAkB,mEAAM;YAAA,4DAAS;YACzE;YAAA,+EAEI;YAAA,yFACJ;YAAA,4DAAS;YACb;YAAA,4DAAqB;YACzB;YAAA,4DAAO;YACP;;;;;YAnLqB,0DAAkB;YAAlB,gFAAkB;YAa0B,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YAUZ,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YA8BzC,2DAAmD;YAAnD,8GAAmD;YAC/C,0DAAqC;YAArC,qFAAqC;YAiHlC,4DAAyB;YAAzB,sFAAyB;;4BD/KpE;CAmFC;AAzE6B;6FAAjB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;sBAWqG,oDAAM;uBAAC,wEAAe;wBAFhH,YAAY;kBAArB,oDAAM;;;;;;;;;;;;;;AElBT;AAAA;AAAA;AAAA;AAAA;AAAwD;AACe;;;;AAEvE;IAOE,4BAAmB,SAA2C,EAAkC,IAAS;QAAtF,cAAS,GAAT,SAAS,CAAkC;QAAkC,SAAI,GAAJ,IAAI,CAAK;IACzG,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;wFAVU,kBAAkB,0MAE2C,wEAAe;sGAF5E,kBAAkB;YCR/B,wEAAqB;YAAA,sEAAW;YAAA,4DAAK;YACrC;YAAA,yEACI;YAAA;YAAA,yEACI;YAAA;YAAA,yEACI;YAAA;YAAA,kEAAoG;YAAA,iEACxG;YAAA;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,iEACA;YAAA;YAAA,sEAAI;YAAA,4FAAgC;YAAA,4DAAK;YACzC;YAAA,sEAAI;YAAA,wDAAmC;YAAA,4DAAK;YAC5C;YAAA,sEAAI;YAAA,+HAAmE;YAAA,4DAAK;YAChF;YAAA,4DAAM;YACV;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YACA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,6EAAiF;YAAvC,2IAAS,eAAW,IAAC;YAAkB,kEAAM;YAAA,4DAAS;YACpG;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,6EACI;YAAA,uFACJ;YAAA,4DAAS;YACb;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;;YAhBgB,2DAAmC;YAAnC,oGAAmC;YAWmB,2DAAqC;YAArC,kGAAqC;;6BDpB3G;CAoBC;AAZ8B;6FAAlB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;sBAGkE,oDAAM;uBAAC,wEAAe;;;;;;;;;;;;;;AEVzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACQ;AACO;;;;;;;;;;ICAnE,yEACI;IAAA;IAAA,0EACI;IAAA;IAAA,0EACI;IAAA;IAAA,yEAAQ;IAAA,uDAAc;IAAA,4DAAS;IACnC;IAAA,4DAAM;IACV;IAAA,4DAAM;IACV;IAAA,4DAAM;;;IAHc,0DAAc;IAAd,kFAAc;;;IAcd,4EACI;IAAA,0IACJ;IAAA,4DAAY;;;IAWZ,4EACI;IAAA,2IACJ;IAAA,4DAAY;;AD9BpC;IAOE,wCAAmB,aAA2B,EAAS,SAAuD,EAAkC,IAAS;QAAtI,kBAAa,GAAb,aAAa,CAAc;QAAS,cAAS,GAAT,SAAS,CAA8C;QAAkC,SAAI,GAAJ,IAAI,CAAK;IACzJ,CAAC;IAED,iDAAQ,GAAR;QACE,2BAA2B;IAC7B,CAAC;IAGD,kDAAS,GAAT;QAEE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;gHAbU,8BAA8B,iVAE+E,wEAAe;kHAF5H,8BAA8B;YCT3C,wEAAqB;YAAA,+EAAoB;YAAA,4DAAK;YAC9C;YAAA,gFACI;YAAA;YAAA,2HACI;YAMJ;YAAA,wFACI;YAAA;YAAA,0EAEI;YAAA;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,uEAAW;YAAA,4DAAY;YAClC;YAAA,+EAEA;YAFyC,8NAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,yIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YACN;YAAA,0EACI;YAAA;YAAA,0EACI;YAAA;YAAA,qFACI;YAAA;YAAA,6EAAW;YAAA,wEAAY;YAAA,4DAAY;YACnC;YAAA,iFAEA;YAFyC,8NAA+C;YAAxF,4DAEA;YAAA;YACA;YAAA,yIACI;YAER;YAAA,4DAAiB;YACrB;YAAA,4DAAM;YACV;YAAA,4DAAM;YAIN;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YAGJ;YAAA,4DAAM;YAEV;YAAA,4DAAqB;YACrB;YAAA,2FACI;YAAA;YAAA,+EAA0D;YAAvC,wJAAS,eAAW,IAAC;YAAkB,mEAAM;YAAA,4DAAS;YACzE;YAAA,+EACI;YAAA,yFACJ;YAAA,4DAAS;YACb;YAAA,4DAAqB;YACzB;YAAA,4DAAO;YACP;;;;;YA5IqB,0DAAkB;YAAlB,gFAAkB;YAc0B,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iHAA0C;YAUZ,2DAA+C;YAA/C,0GAA+C;YAG7E,0DAA0C;YAA1C,iH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","file":"farms-farms-module.js","sourcesContent":["import {NgModule,Component,Input,ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-progressBar',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" role=\"progressbar\" aria-valuemin=\"0\" [attr.aria-valuenow]=\"value\" aria-valuemax=\"100\"\n            [ngClass]=\"{'p-progressbar p-component': true, 'p-progressbar-determinate': (mode === 'determinate'), 'p-progressbar-indeterminate': (mode === 'indeterminate')}\">\n            <div *ngIf=\"mode === 'determinate'\" class=\"p-progressbar-value p-progressbar-value-animate\" [style.width]=\"value + '%'\" style=\"display:block\"></div>\n            <div *ngIf=\"mode === 'determinate' && showValue\" class=\"p-progressbar-label\" [style.display]=\"value != null ? 'block' : 'none'\">{{value}}{{unit}}</div>\n            <div *ngIf=\"mode === 'indeterminate'\" class=\"p-progressbar-indeterminate-container\">\n                <div class=\"p-progressbar-value p-progressbar-value-animate\"></div>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./progressbar.css']\n})\nexport class ProgressBar {\n\n    @Input() value: any;\n    \n    @Input() showValue: boolean = true;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n\n    @Input() unit: string = '%';\n    \n    @Input() mode: string = 'determinate';\n    \n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ProgressBar],\n    declarations: [ProgressBar]\n})\nexport class ProgressBarModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddSoilTypes, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditChemicalFertilizerSourcesComponent} from '../chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources.component';\r\nimport {DeleteChemicalFertilizerSourcesComponent} from '../chemical-fertilizer-sources/delete-chemical-fertilizer-sources/delete-chemical-fertilizer-sources.component';\r\nimport {AddEditIrrigationWaysComponent} from './add-edit-irrigation-ways/add-edit-irrigation-ways.component';\r\nimport {DeleteIrrigationWaysComponent} from './delete-irrigation-ways/delete-irrigation-ways.component';\r\n\r\n@Component({\r\n  selector: 'app-irrigation-ways',\r\n  templateUrl: './irrigation-ways.component.html',\r\n  styleUrls: ['./irrigation-ways.component.css']\r\n})\r\nexport class IrrigationWaysComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddSoilTypes[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Irrigation Ways (Ar)'},\r\n      {field: 'name_en_localized', header: 'Irrigation Ways (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getIrrigation_ways().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddSoilTypes[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditIrrigationWaysComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddIrrigationWays, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddIrrigationWays = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddIrrigationWays = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddIrrigation_ways().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddIrrigationWays = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddSoilTypes) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditIrrigationWaysComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddIrrigationWays.name_ar_localized = result.FarmedData.name_ar_localized;\r\n        this._FarmsService.AddIrrigationWays.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddIrrigationWays = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editIrrigation_ways(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddIrrigationWays = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteIrrigationWaysComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteIrrigation_ways(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Irrigation Way\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-setting-farm',\r\n  templateUrl: './setting-farm.component.html',\r\n  styleUrls: ['./setting-farm.component.css']\r\n})\r\nexport class SettingFarmComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>setting-farm works!</p>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-animal-fodder',\r\n  templateUrl: './add-animal-fodder.component.html',\r\n  styleUrls: ['./add-animal-fodder.component.css']\r\n})\r\nexport class AddAnimalFodderComponent implements OnInit {\r\n  constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddAnimalFodderComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getFarmsActivity();\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Animal Fodder </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddSoilTypes, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditSoilTypesComponent} from '../soil-types/add-edit-soil-types/add-edit-soil-types.component';\r\nimport {DeleteSoilTypesComponent} from '../soil-types/delete-soil-types/delete-soil-types.component';\r\nimport {AddEditAcidityTypesComponent} from './add-edit-acidity-types/add-edit-acidity-types.component';\r\nimport {DeleteAcidityTypesComponent} from './delete-acidity-types/delete-acidity-types.component';\r\n\r\n@Component({\r\n  selector: 'app-acidity-types',\r\n  templateUrl: './acidity-types.component.html',\r\n  styleUrls: ['./acidity-types.component.css']\r\n})\r\nexport class AcidityTypesComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddSoilTypes[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Acidity Type (Ar)'},\r\n      {field: 'name_en_localized', header: 'Acidity Type (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getAcidity_types().subscribe((res: { data }) => {\r\n      this.farms = res.data as IAddSoilTypes[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditAcidityTypesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddAcidityTypes, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddAcidityTypes = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddAcidityTypes = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddAcidity_types().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAcidityTypes = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddSoilTypes) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditAcidityTypesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddAcidityTypes.name_ar_localized = result.FarmedData.name_ar_localized;\r\n        this._FarmsService.AddAcidityTypes.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddAcidityTypes = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editAcidity_types(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAcidityTypes = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteAcidityTypesComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteAcidity_types(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Acidity Type\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IAddSoilTypes, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditSaltTypesComponent} from '../salt-types/add-edit-salt-types/add-edit-salt-types.component';\r\nimport {DeleteSaltTypesComponent} from '../salt-types/delete-salt-types/delete-salt-types.component';\r\nimport {AddEditSoilTypesComponent} from './add-edit-soil-types/add-edit-soil-types.component';\r\nimport {DeleteSoilTypesComponent} from './delete-soil-types/delete-soil-types.component';\r\n\r\n@Component({\r\n  selector: 'app-soil-types',\r\n  templateUrl: './soil-types.component.html',\r\n  styleUrls: ['./soil-types.component.css']\r\n})\r\nexport class SoilTypesComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddSoilTypes[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Soil Type (Ar)'},\r\n      {field: 'name_en_localized', header: 'Soil Type (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getSoil_types().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddSoilTypes[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditSoilTypesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddSoilTypes, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddSoilTypes = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddSoilTypes = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddSoil_types().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddSoilTypes = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddSoilTypes) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditSoilTypesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddSoilTypes = result.FarmedData;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddSoilTypes = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editSoil_types(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddSoilTypes = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteSoilTypesComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteSoil_types(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Soil Type\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditMethodComponent} from '../farming-methods/add-edit-method/add-edit-method.component';\r\nimport {DeleteWayComponent} from '../farming-way/delete-way/delete-way.component';\r\nimport {AddEditSeedlingSourcesComponent} from './add-edit-seedling-sources/add-edit-seedling-sources.component';\r\nimport {DeleteSeedlingComponent} from './delete-seedling/delete-seedling.component';\r\n\r\n@Component({\r\n  selector: 'app-seedling-sources',\r\n  templateUrl: './seedling-sources.component.html',\r\n  styleUrls: ['./seedling-sources.component.css']\r\n})\r\nexport class SeedlingSourcesComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddFarmingWays[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Seedling Sources (Ar)'},\r\n      {field: 'name_en_localized', header: 'Seedling Sources (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getSeedlingSources().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddFarmingWays[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditSeedlingSourcesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddSeedling, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddSeedling = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddSeedling = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddSeedlingSources().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddSeedling = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddFarmingWays) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditSeedlingSourcesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddSeedling = result.FarmedData;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddSeedling = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editSeedlingSources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddSeedling = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteSeedlingComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteSeedlingSources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Seedling Sources\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {IFarmActivity} from '../../../../Models/farms';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-class',\r\n  templateUrl: './add-edit-class.component.html',\r\n  styleUrls: ['./add-edit-class.component.css']\r\n})\r\nexport class AddEditClassComponent implements OnInit {\r\n\r\n  imageSrc: string;\r\n  fileToUpload: File = null;\r\n  // farmActivities: IFarmActivity[];\r\n  farmActivity: IFarmActivity[];\r\n\r\n  constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddEditClassComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFarmsActivity();\r\n  }\r\n\r\n\r\n  getFarmsActivity() {\r\n    this._FarmsService.getFarmedType().subscribe((res: { data }) => {\r\n      this.farmActivity = res.data.all as IFarmActivity[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Farmed Type Class</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Farmed Type</mat-label>\r\n                        <!--                        <input matInput name=\"first_name\" [(ngModel)]=\"data.FarmedData.farm_activity_type_id\"-->\r\n                        <!--                               #farm_activity_type_id=\"ngModel\" required>-->\r\n                        <!--                        <mat-label>Gender</mat-label>-->\r\n                        <mat-select name=\"farmed_type_id\" required\r\n                                    [(ngModel)]=\"data.FarmedData.farmed_type_id\" #farmed_type_id=\"ngModel\">\r\n                            <mat-option *ngFor=\"let activity of farmActivity\" [value]=\"activity.id\">\r\n                                {{activity.name_ar_localized}}\r\n                            </mat-option>\r\n\r\n                        </mat-select>\r\n                        <!-- <mat-icon matSuffix>wc</mat-icon> -->\r\n                        <!--                        <mat-error *ngIf=\"gender.errors?.required\">-->\r\n                        <!--                            Gender is required-->\r\n                        <!--                        </mat-error>-->\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"farmed_type_id.errors?.required\">\r\n                            Farm Type Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-salt-types',\r\n  templateUrl: './delete-salt-types.component.html',\r\n  styleUrls: ['./delete-salt-types.component.css']\r\n})\r\nexport class DeleteSaltTypesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteSaltTypesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Salt Types</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-soil-types',\r\n  templateUrl: './add-edit-soil-types.component.html',\r\n  styleUrls: ['./add-edit-soil-types.component.css']\r\n})\r\nexport class AddEditSoilTypesComponent implements OnInit {\r\n  constructor(public dialogRef: MatDialogRef<AddEditSoilTypesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Salt Type</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-chemical-fertilizer-sources',\r\n  templateUrl: './delete-chemical-fertilizer-sources.component.html',\r\n  styleUrls: ['./delete-chemical-fertilizer-sources.component.css']\r\n})\r\nexport class DeleteChemicalFertilizerSourcesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteChemicalFertilizerSourcesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Chemical Fertilizer</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmedTypeClass, IAddFarmingWays, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditClassComponent} from '../farmed-type-class/add-edit-class/add-edit-class.component';\r\nimport {DeleteClassComponent} from '../farmed-type-class/delete-class/delete-class.component';\r\nimport {AddWayComponent} from './add-way/add-way.component';\r\nimport {DeleteWayComponent} from './delete-way/delete-way.component';\r\n\r\n@Component({\r\n    selector: 'app-farming-way',\r\n    templateUrl: './farming-way.component.html',\r\n    styleUrls: ['./farming-way.component.css']\r\n})\r\nexport class FarmingWayComponent implements OnInit {\r\n\r\n    cols: any;\r\n    products: any;\r\n    roles: IAppAdmin[];\r\n    farms: IAddFarmingWays[];\r\n    profileFarm: IFarmedType;\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    data: any;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n    errorMessage: string;\r\n    profileFarmData: IAddFarmedType;\r\n\r\n    constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'id', header: 'ID'},\r\n            {field: 'name_ar_localized', header: 'Farming Way (Ar)'},\r\n            {field: 'name_en_localized', header: 'Farming Way (EN)'},\r\n            {field: 'type', header: 'Type'}\r\n\r\n\r\n        ];\r\n        this.getFarmsApp();\r\n    }\r\n\r\n    // showDialogGetFarmedTypeById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarm = res.data as IFarmedType;\r\n    //         console.log(this.profileFarm);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         this.display = true;\r\n    //\r\n    //     });\r\n    // }\r\n\r\n    getFarmsApp() {\r\n        this._FarmsService.getFarmingWays().subscribe((res: { data }) => {\r\n            this.farms = res.data.all as IAddFarmingWays[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n\r\n    openAddFarmedTypeDialog() {\r\n\r\n        const dialogRef = this.dialog.open(AddWayComponent, {\r\n                data: {\r\n                    FarmedData: this._FarmsService.AddWays, error: this.errorMessage,\r\n                }\r\n            })\r\n        ;\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.errorMessage = null;\r\n\r\n            if (result) {\r\n                this._FarmsService.AddWays = result.FarmedData;\r\n                this.onAddFarmedType();\r\n\r\n            } else {\r\n                this._FarmsService.AddWays = {} as IAddFarmingWays;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddFarmedType() {\r\n        this._FarmsService.AddFarmingWays().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    // getDataById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarmData = res.data as IAddFarmedType;\r\n    //         console.log(this.profileFarmData);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         // this.display = true;\r\n    //     });\r\n    //\r\n    //\r\n    // }\r\n\r\n    openEditFarmedTypeDialog(classData: IAddFarmingWays) {\r\n\r\n\r\n        const dialogRef = this.dialog.open(AddWayComponent, {\r\n            data: {FarmedData: classData}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this._FarmsService.AddWays = result.FarmedData;\r\n\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onEditFarmedType(result.FarmedData.id);\r\n\r\n            } else {\r\n                this._FarmsService.AddWays = {} as IAddFarmingWays;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditFarmedType(roleId) {\r\n        this._FarmsService.editFarmingWays(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    openFarmedTypeDeleteDialog(data) {\r\n        const dialogRef = this.dialog.open(DeleteWayComponent, {\r\n            data: {farmData: data}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteFarmedType(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteFarmedType(roleId) {\r\n        this._FarmsService.deleteFarmingWays(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Farming Way\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-plant-illuminating-sources',\r\n  templateUrl: './delete-plant-illuminating-sources.component.html',\r\n  styleUrls: ['./delete-plant-illuminating-sources.component.css']\r\n})\r\nexport class DeletePlantIlluminatingSourcesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeletePlantIlluminatingSourcesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Plant Illuminating Source</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {IFarmActivity} from '../../../../Models/farms';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-add-way',\r\n    templateUrl: './add-way.component.html',\r\n    styleUrls: ['./add-way.component.css']\r\n})\r\nexport class AddWayComponent implements OnInit {\r\n\r\n    imageSrc: string;\r\n    fileToUpload: File = null;\r\n    // farmActivities: IFarmActivity[];\r\n    farmActivity: IFarmActivity[];\r\n\r\n    constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddWayComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.getFarmsActivity();\r\n    }\r\n\r\n\r\n    // getFarmsActivity() {\r\n    //   this._FarmsService.getFarmedType().subscribe((res: { data }) => {\r\n    //     this.farmActivity = res.data.all as IFarmActivity[];\r\n    //     // this.rolesPermations = this.roles.map(x => x.permissions);\r\n    //     // console.log(this.rolesPermations);\r\n    //   });\r\n    // }\r\n\r\n    onNoClick(): void {\r\n\r\n        this.dialogRef.close();\r\n    }\r\n\r\n\r\n}\r\n","    <h2 mat-dialog-title>Add Farming Way</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Type</mat-label>\r\n                        <input matInput name=\"type\" [(ngModel)]=\"data.FarmedData.type\"\r\n                               #type=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"type.errors?.required\">\r\n                            type Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-salt-types',\r\n  templateUrl: './add-edit-salt-types.component.html',\r\n  styleUrls: ['./add-edit-salt-types.component.css']\r\n})\r\nexport class AddEditSaltTypesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEditSaltTypesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Salt Type</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Type</mat-label>\r\n                        <input matInput name=\"type\" [(ngModel)]=\"data.FarmedData.type\"\r\n                               #type=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"type.errors?.required\">\r\n                            type Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-animal-fodder-sources',\r\n  templateUrl: './delete-animal-fodder-sources.component.html',\r\n  styleUrls: ['./delete-animal-fodder-sources.component.css']\r\n})\r\nexport class DeleteAnimalFodderSourcesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteAnimalFodderSourcesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Animal Fodder Sources</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditSeedlingSourcesComponent} from '../seedling-sources/add-edit-seedling-sources/add-edit-seedling-sources.component';\r\nimport {DeleteWayComponent} from '../farming-way/delete-way/delete-way.component';\r\nimport {AddEditAnimalBreedingComponent} from './add-edit-animal-breeding/add-edit-animal-breeding.component';\r\nimport {DeleteAnimalBreedingComponent} from './delete-animal-breeding/delete-animal-breeding.component';\r\n\r\n@Component({\r\n    selector: 'app-animal-breeding',\r\n    templateUrl: './animal-breeding.component.html',\r\n    styleUrls: ['./animal-breeding.component.css']\r\n})\r\nexport class AnimalBreedingComponent implements OnInit {\r\n\r\n    cols: any;\r\n    products: any;\r\n    roles: IAppAdmin[];\r\n    farms: IAddFarmingWays[];\r\n    profileFarm: IFarmedType;\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    data: any;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n    errorMessage: string;\r\n    profileFarmData: IAddFarmedType;\r\n\r\n    constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'id', header: 'ID'},\r\n            {field: 'name_ar_localized', header: 'Animal Breeding Purposes (Ar)'},\r\n            {field: 'name_en_localized', header: 'Animal Breeding Purposes (En)'},\r\n\r\n\r\n        ];\r\n        this.getFarmsApp();\r\n    }\r\n\r\n    // showDialogGetFarmedTypeById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarm = res.data as IFarmedType;\r\n    //         console.log(this.profileFarm);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         this.display = true;\r\n    //\r\n    //     });\r\n    // }\r\n\r\n    getFarmsApp() {\r\n        this._FarmsService.getAnimal_breeding().subscribe((res: { data }) => {\r\n            this.farms = res.data.all as IAddFarmingWays[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n\r\n    openAddFarmedTypeDialog() {\r\n\r\n        const dialogRef = this.dialog.open(AddEditAnimalBreedingComponent, {\r\n                data: {\r\n                    FarmedData: this._FarmsService.AddAnimalBreeding, error: this.errorMessage,\r\n                }\r\n            })\r\n        ;\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.errorMessage = null;\r\n\r\n            if (result) {\r\n                this._FarmsService.AddAnimalBreeding = result.FarmedData;\r\n                this.onAddFarmedType();\r\n\r\n            } else {\r\n                this._FarmsService.AddAnimalBreeding = {} as IAddFarmingWays;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddFarmedType() {\r\n        this._FarmsService.AddAnimal_breeding().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this._FarmsService.AddAnimalBreeding = {} as IAddFarmingWays;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    // getDataById(id: number) {\r\n    //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n    //         this.profileFarmData = res.data as IAddFarmedType;\r\n    //         console.log(this.profileFarmData);\r\n    //     }, error => {\r\n    //\r\n    //     }, () => {\r\n    //         // this.display = true;\r\n    //     });\r\n    //\r\n    //\r\n    // }\r\n\r\n    openEditFarmedTypeDialog(classData: IAddFarmingWays) {\r\n\r\n\r\n        const dialogRef = this.dialog.open(AddEditAnimalBreedingComponent, {\r\n            data: {FarmedData: classData}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this._FarmsService.AddAnimalBreeding.name_ar_localized = result.FarmedData.name_ar_localized;\r\n                this._FarmsService.AddAnimalBreeding.name_en_localized = result.FarmedData.name_en_localized;\r\n                // this._FarmsService.AddAnimalBreeding.type = result.FarmedData.type;\r\n\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onEditFarmedType(result.FarmedData.id);\r\n\r\n            } else {\r\n                this._FarmsService.AddAnimalBreeding = {} as IAddFarmingWays;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditFarmedType(roleId) {\r\n        this._FarmsService.editAnimal_breeding(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this._FarmsService.AddAnimalBreeding = {} as IAddFarmingWays;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    openFarmedTypeDeleteDialog(data) {\r\n        const dialogRef = this.dialog.open(DeleteAnimalBreedingComponent, {\r\n            data: {farmData: data}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteFarmedType(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteFarmedType(roleId) {\r\n        this._FarmsService.deleteAnimal_breeding(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Animal Breeding\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-plant-pot-sizes',\r\n  templateUrl: './delete-plant-pot-sizes.component.html',\r\n  styleUrls: ['./delete-plant-pot-sizes.component.css']\r\n})\r\nexport class DeletePlantPotSizesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeletePlantPotSizesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n}\r\n","<h2 mat-dialog-title>Plant Pot Size</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>Size {{data.farmData.size}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-method',\r\n  templateUrl: './add-edit-method.component.html',\r\n  styleUrls: ['./add-edit-method.component.css']\r\n})\r\nexport class AddEditMethodComponent implements OnInit {\r\n\r\n  constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddEditMethodComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getFarmsActivity();\r\n  }\r\n\r\n\r\n  // getFarmsActivity() {\r\n  //   this._FarmsService.getFarmedType().subscribe((res: { data }) => {\r\n  //     this.farmActivity = res.data.all as IFarmActivity[];\r\n  //     // this.rolesPermations = this.roles.map(x => x.permissions);\r\n  //     // console.log(this.rolesPermations);\r\n  //   });\r\n  // }\r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Farmed Type Class</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IAppAdmin} from '../../Models/app-admin';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../Services/app-admin.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {DeleteRoleComponent} from '../roles/delete-role/delete-role.component';\r\nimport {IFarms} from '../../Models/farms';\r\nimport {FarmsService} from '../../Services/farms.service';\r\n\r\n@Component({\r\n    selector: 'app-farms',\r\n    templateUrl: './farms.component.html',\r\n    styleUrls: ['./farms.component.css']\r\n})\r\nexport class FarmsComponent implements OnInit {\r\n\r\n    cols: any;\r\n    products: any;\r\n    roles: IAppAdmin[];\r\n    farms: IFarms[];\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n\r\n    constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'id', header: 'ID'},\r\n            {field: 'admin', header: 'Name'},\r\n                {field: 'code', header: 'Code'},\r\n            {field: 'farmed_type', header: 'Farmed Type'},\r\n            {field: 'farmed_type_class', header: 'Farmed Type Class'}\r\n        ];\r\n\r\n        this.getFarmsApp();\r\n    }\r\n\r\n    showDialog(data: any) {\r\n        this.rolesPermations = data.permissions;\r\n        console.log(data.permissions);\r\n        this.display = true;\r\n    }\r\n\r\n    getFarmsApp() {\r\n        this._FarmsService.getFarms().subscribe((res: { data }) => {\r\n            this.farms = res.data.all as IFarms[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n    openRoleDeleteDialog(id) {\r\n        const dialogRef = this.dialog.open(DeleteRoleComponent, {\r\n            data: {id}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteMember(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteMember(roleId) {\r\n        this._AppAdminService.deleteRole(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n<!--    <button style=\"float: right\" mat-raised-button color=\"primary\" [routerLink]=\"['/admin-panel/roles/add-role']\">-->\r\n<!--        <mat-icon class=\"ml-2\">add</mat-icon>-->\r\n<!--        Add Role-->\r\n<!--    </button>-->\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n<!--                <th>Permations</th>-->\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n<!--                <th></th>-->\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n<!--                <td>-->\r\n<!--                    <div class=\"embryo-ham-icon\">-->\r\n<!--                        <button (click)=\"showDialog(rowData)\" mat-raised-button color=\"primary\" mat-card-icon>-->\r\n<!--                            <mat-icon>visibility</mat-icon>-->\r\n<!--                        </button>-->\r\n<!--                    </div>-->\r\n<!--                </td>-->\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button [routerLink]=\"['/admin-panel/roles/update-role/'+rowData.id]\" mat-mini-fab color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openRoleDeleteDialog(rowData.id)\" color=\"warn\" mat-card-icon\r\n                        >\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n<p-dialog header=\"Title\" [(visible)]=\"display\" [style]=\"{width: '50vw'}\">\r\n    <div *ngIf=\"rolesPermations?.length!=0\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-4\">Name</div>\r\n            <div class=\"col-md-4\">Display Name</div>\r\n            <div class=\"col-md-4\">Description</div>\r\n        </div>\r\n        <div class=\"row text-black-50\" *ngFor=\"let p of rolesPermations\">\r\n\r\n            <div class=\"col-md-4\">{{p.name}}</div>\r\n            <div class=\"col-md-4\">{{p.display_name}}</div>\r\n            <div class=\"col-md-4\">{{p.description}}</div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"rolesPermations?.length==0\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"alert alert-primary text-center\">\r\n                No Data\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</p-dialog>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FarmsRoutingModule } from './farms-routing.module';\r\nimport { FarmsComponent } from './farms.component';\r\nimport { ViewFarmComponent } from './view-farm/view-farm.component';\r\nimport { SettingFarmComponent } from './setting-farm/setting-farm.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {TableModule} from 'primeng/table';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { FarmedTypeComponent } from './farmed-type/farmed-type.component';\r\nimport { AddTypeComponent } from './farmed-type/add-type/add-type.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\nimport { EditTypeComponent } from './farmed-type/edit-type/edit-type.component';\r\nimport { DeleteTypeComponent } from './farmed-type/delete-type/delete-type.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MaterialFileInputModule} from 'ngx-mat-file-input';\r\nimport { FarmedTypeClassComponent } from './farmed-type-class/farmed-type-class.component';\r\nimport { AddEditClassComponent } from './farmed-type-class/add-edit-class/add-edit-class.component';\r\nimport { DeleteClassComponent } from './farmed-type-class/delete-class/delete-class.component';\r\nimport { FarmingWayComponent } from './farming-way/farming-way.component';\r\nimport { AddWayComponent } from './farming-way/add-way/add-way.component';\r\nimport { DeleteWayComponent } from './farming-way/delete-way/delete-way.component';\r\nimport { FarmingMethodsComponent } from './farming-methods/farming-methods.component';\r\nimport { AddEditMethodComponent } from './farming-methods/add-edit-method/add-edit-method.component';\r\nimport { SeedlingSourcesComponent } from './seedling-sources/seedling-sources.component';\r\nimport { AddEditSeedlingSourcesComponent } from './seedling-sources/add-edit-seedling-sources/add-edit-seedling-sources.component';\r\nimport { AnimalBreedingComponent } from './animal-breeding/animal-breeding.component';\r\nimport { AddEditAnimalBreedingComponent } from './animal-breeding/add-edit-animal-breeding/add-edit-animal-breeding.component';\r\nimport { DeleteAnimalBreedingComponent } from './animal-breeding/delete-animal-breeding/delete-animal-breeding.component';\r\nimport { AnimalFodderComponent } from './animal-fodder/animal-fodder.component';\r\nimport { AddAnimalFodderComponent } from './animal-fodder/add-animal-fodder/add-animal-fodder.component';\r\nimport { DeleteAnimalFodderComponent } from './animal-fodder/delete-animal-fodder/delete-animal-fodder.component';\r\nimport { DeleteSeedlingComponent } from './seedling-sources/delete-seedling/delete-seedling.component';\r\nimport { DeleteMethodComponent } from './farming-methods/delete-method/delete-method.component';\r\nimport { AnimalMedicineComponent } from './animal-medicine/animal-medicine.component';\r\nimport { AddEditAnimalMedicineComponent } from './animal-medicine/add-edit-animal-medicine/add-edit-animal-medicine.component';\r\nimport { DeleteAnimalMedicineComponent } from './animal-medicine/delete-animal-medicine/delete-animal-medicine.component';\r\nimport { PlantPotSizesComponent } from './plant-pot-sizes/plant-pot-sizes.component';\r\nimport { AddEditPlantPotSizesComponent } from './plant-pot-sizes/add-edit-plant-pot-sizes/add-edit-plant-pot-sizes.component';\r\nimport { DeletePlantPotSizesComponent } from './plant-pot-sizes/delete-plant-pot-sizes/delete-plant-pot-sizes.component';\r\nimport { SaltTypesComponent } from './salt-types/salt-types.component';\r\nimport { AddEditSaltTypesComponent } from './salt-types/add-edit-salt-types/add-edit-salt-types.component';\r\nimport { DeleteSaltTypesComponent } from './salt-types/delete-salt-types/delete-salt-types.component';\r\nimport { SoilTypesComponent } from './soil-types/soil-types.component';\r\nimport { AddEditSoilTypesComponent } from './soil-types/add-edit-soil-types/add-edit-soil-types.component';\r\nimport { DeleteSoilTypesComponent } from './soil-types/delete-soil-types/delete-soil-types.component';\r\nimport { AcidityTypesComponent } from './acidity-types/acidity-types.component';\r\nimport { AddEditAcidityTypesComponent } from './acidity-types/add-edit-acidity-types/add-edit-acidity-types.component';\r\nimport { DeleteAcidityTypesComponent } from './acidity-types/delete-acidity-types/delete-acidity-types.component';\r\nimport { AnimalFodderSourcesComponent } from './animal-fodder-sources/animal-fodder-sources.component';\r\nimport { AddEditAnimalFodderSourcesComponent } from './animal-fodder-sources/add-edit-animal-fodder-sources/add-edit-animal-fodder-sources.component';\r\nimport { DeleteAnimalFodderSourcesComponent } from './animal-fodder-sources/delete-animal-fodder-sources/delete-animal-fodder-sources.component';\r\nimport { ChemicalFertilizerSourcesComponent } from './chemical-fertilizer-sources/chemical-fertilizer-sources.component';\r\nimport { AddEditChemicalFertilizerSourcesComponent } from './chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources.component';\r\nimport { DeleteChemicalFertilizerSourcesComponent } from './chemical-fertilizer-sources/delete-chemical-fertilizer-sources/delete-chemical-fertilizer-sources.component';\r\nimport { IrrigationWaysComponent } from './irrigation-ways/irrigation-ways.component';\r\nimport { HomePlantIlluminatingSourcesComponent } from './home-plant-illuminating-sources/home-plant-illuminating-sources.component';\r\nimport { AddEditIrrigationWaysComponent } from './irrigation-ways/add-edit-irrigation-ways/add-edit-irrigation-ways.component';\r\nimport { DeleteIrrigationWaysComponent } from './irrigation-ways/delete-irrigation-ways/delete-irrigation-ways.component';\r\nimport { AddEditPlantIlluminatingSourcesComponent } from './home-plant-illuminating-sources/add-edit-plant-illuminating-sources/add-edit-plant-illuminating-sources.component';\r\nimport { DeletePlantIlluminatingSourcesComponent } from './home-plant-illuminating-sources/delete-plant-illuminating-sources/delete-plant-illuminating-sources.component';\r\n\r\n@NgModule({\r\n  declarations: [FarmsComponent, ViewFarmComponent, SettingFarmComponent, FarmedTypeComponent, AddTypeComponent, EditTypeComponent, DeleteTypeComponent, FarmedTypeClassComponent, AddEditClassComponent, DeleteClassComponent, FarmingWayComponent, AddWayComponent, DeleteWayComponent, FarmingMethodsComponent, AddEditMethodComponent, SeedlingSourcesComponent, AddEditSeedlingSourcesComponent, AnimalBreedingComponent, AddEditAnimalBreedingComponent, DeleteAnimalBreedingComponent, AnimalFodderComponent, AddAnimalFodderComponent, DeleteAnimalFodderComponent, DeleteSeedlingComponent, DeleteMethodComponent, AnimalMedicineComponent, AddEditAnimalMedicineComponent, DeleteAnimalMedicineComponent, PlantPotSizesComponent, AddEditPlantPotSizesComponent, DeletePlantPotSizesComponent, SaltTypesComponent, AddEditSaltTypesComponent, DeleteSaltTypesComponent, SoilTypesComponent, AddEditSoilTypesComponent, DeleteSoilTypesComponent, AcidityTypesComponent, AddEditAcidityTypesComponent, DeleteAcidityTypesComponent, AnimalFodderSourcesComponent, AddEditAnimalFodderSourcesComponent, DeleteAnimalFodderSourcesComponent, ChemicalFertilizerSourcesComponent, AddEditChemicalFertilizerSourcesComponent, DeleteChemicalFertilizerSourcesComponent, IrrigationWaysComponent, HomePlantIlluminatingSourcesComponent, AddEditIrrigationWaysComponent, DeleteIrrigationWaysComponent, AddEditPlantIlluminatingSourcesComponent, DeletePlantIlluminatingSourcesComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FarmsRoutingModule,\r\n        MatCardModule,\r\n        TableModule,\r\n        DialogModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        ProgressBarModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        FormsModule,\r\n        MatSelectModule,\r\n        MaterialFileInputModule,\r\n    ]\r\n})\r\nexport class FarmsModule { }\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-acidity-types',\r\n  templateUrl: './add-edit-acidity-types.component.html',\r\n  styleUrls: ['./add-edit-acidity-types.component.css']\r\n})\r\nexport class AddEditAcidityTypesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEditAcidityTypesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Salt Type</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-seedling',\r\n  templateUrl: './delete-seedling.component.html',\r\n  styleUrls: ['./delete-seedling.component.css']\r\n})\r\nexport class DeleteSeedlingComponent implements OnInit {\r\n\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteSeedlingComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Seedling Sources</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IAddPlantSize, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditAnimalMedicineComponent} from '../animal-medicine/add-edit-animal-medicine/add-edit-animal-medicine.component';\r\nimport {DeleteAnimalMedicineComponent} from '../animal-medicine/delete-animal-medicine/delete-animal-medicine.component';\r\nimport {AddEditPlantPotSizesComponent} from './add-edit-plant-pot-sizes/add-edit-plant-pot-sizes.component';\r\nimport {DeletePlantPotSizesComponent} from './delete-plant-pot-sizes/delete-plant-pot-sizes.component';\r\n\r\n@Component({\r\n  selector: 'app-plant-pot-sizes',\r\n  templateUrl: './plant-pot-sizes.component.html',\r\n  styleUrls: ['./plant-pot-sizes.component.css']\r\n})\r\nexport class PlantPotSizesComponent implements OnInit {\r\n\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddPlantSize[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'size', header: 'Plant Pot Sizes '},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getPlant_pot_sizes().subscribe((res: { data }) => {\r\n      this.farms = res.data as IAddPlantSize[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditPlantPotSizesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddPlantPotSizes, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddPlantPotSizes = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddPlantPotSizes = {} as IAddPlantSize;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddPlant_pot_sizes().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddPlantPotSizes = {} as IAddPlantSize;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddPlantSize) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditPlantPotSizesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddPlantPotSizes = result.FarmedData;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddPlantPotSizes = {} as IAddPlantSize;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editPlant_pot_sizes(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddPlantPotSizes = {} as IAddPlantSize;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeletePlantPotSizesComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deletePlant_pot_sizes(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Plant Pot Size\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-animal-breeding',\r\n  templateUrl: './delete-animal-breeding.component.html',\r\n  styleUrls: ['./delete-animal-breeding.component.css']\r\n})\r\nexport class DeleteAnimalBreedingComponent implements OnInit {\r\n  constructor(public dialogRef: MatDialogRef<DeleteAnimalBreedingComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Animal Breeding </h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-type',\r\n  templateUrl: './delete-type.component.html',\r\n  styleUrls: ['./delete-type.component.css']\r\n})\r\nexport class DeleteTypeComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteTypeComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Farmed Type</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type  permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddAnimalFodderComponent} from '../animal-fodder/add-animal-fodder/add-animal-fodder.component';\r\nimport {DeleteAnimalFodderComponent} from '../animal-fodder/delete-animal-fodder/delete-animal-fodder.component';\r\nimport {AddEditAnimalMedicineComponent} from './add-edit-animal-medicine/add-edit-animal-medicine.component';\r\nimport {DeleteAnimalMedicineComponent} from './delete-animal-medicine/delete-animal-medicine.component';\r\n\r\n@Component({\r\n  selector: 'app-animal-medicine',\r\n  templateUrl: './animal-medicine.component.html',\r\n  styleUrls: ['./animal-medicine.component.css']\r\n})\r\nexport class AnimalMedicineComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddFarmingWays[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Animal Medicine (Ar)'},\r\n      {field: 'name_en_localized', header: 'Animal Medicine (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getAnimal_medicine().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddFarmingWays[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditAnimalMedicineComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddAnimalMedicine, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddAnimalMedicine = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddAnimalMedicine = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddAnimal_medicine().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAnimalMedicine = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddFarmingWays) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditAnimalMedicineComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddAnimalMedicine = result.FarmedData;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddAnimalMedicine = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editAnimal_medicine(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAnimalMedicine = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteAnimalMedicineComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteAnimal_medicine(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Animal Medicine\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-animal-breeding',\r\n  templateUrl: './add-edit-animal-breeding.component.html',\r\n  styleUrls: ['./add-edit-animal-breeding.component.css']\r\n})\r\nexport class AddEditAnimalBreedingComponent implements OnInit {\r\n\r\n  constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddEditAnimalBreedingComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getFarmsActivity();\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Animal Breeding Purposes</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-acidity-types',\r\n  templateUrl: './delete-acidity-types.component.html',\r\n  styleUrls: ['./delete-acidity-types.component.css']\r\n})\r\nexport class DeleteAcidityTypesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteAcidityTypesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Salt Types</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-soil-types',\r\n  templateUrl: './delete-soil-types.component.html',\r\n  styleUrls: ['./delete-soil-types.component.css']\r\n})\r\nexport class DeleteSoilTypesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteSoilTypesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Salt Types</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-add-edit-seedling-sources',\r\n    templateUrl: './add-edit-seedling-sources.component.html',\r\n    styleUrls: ['./add-edit-seedling-sources.component.css']\r\n})\r\nexport class AddEditSeedlingSourcesComponent implements OnInit {\r\n\r\n    constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddEditSeedlingSourcesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // this.getFarmsActivity();\r\n    }\r\n\r\n\r\n    onNoClick(): void {\r\n\r\n        this.dialogRef.close();\r\n    }\r\n\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Farmed Type Class</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddWayComponent} from '../farming-way/add-way/add-way.component';\r\nimport {DeleteWayComponent} from '../farming-way/delete-way/delete-way.component';\r\nimport {DeleteSaltTypesComponent} from './delete-salt-types/delete-salt-types.component';\r\nimport {AddEditSaltTypesComponent} from './add-edit-salt-types/add-edit-salt-types.component';\r\n\r\n@Component({\r\n  selector: 'app-salt-types',\r\n  templateUrl: './salt-types.component.html',\r\n  styleUrls: ['./salt-types.component.css']\r\n})\r\nexport class SaltTypesComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddFarmingWays[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Salt Type (Ar)'},\r\n      {field: 'name_en_localized', header: 'Salt Type (En)'},\r\n      {field: 'type', header: 'Type'}\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getSalt_types().subscribe((res: { data }) => {\r\n      this.farms = res.data as IAddFarmingWays[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditSaltTypesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddSaltTypes, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddSaltTypes = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddSaltTypes = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddSalt_types().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddFarmingWays) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditSaltTypesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddSaltTypes = result.FarmedData;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddSaltTypes = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editSalt_types(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteSaltTypesComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteSalt_types(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Salt Type\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-method',\r\n  templateUrl: './delete-method.component.html',\r\n  styleUrls: ['./delete-method.component.css']\r\n})\r\nexport class DeleteMethodComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteMethodComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Farming Methods</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-animal-fodder-sources',\r\n  templateUrl: './add-edit-animal-fodder-sources.component.html',\r\n  styleUrls: ['./add-edit-animal-fodder-sources.component.css']\r\n})\r\nexport class AddEditAnimalFodderSourcesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEditAnimalFodderSourcesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Animal Fodder Sources </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-animal-medicine',\r\n  templateUrl: './delete-animal-medicine.component.html',\r\n  styleUrls: ['./delete-animal-medicine.component.css']\r\n})\r\nexport class DeleteAnimalMedicineComponent implements OnInit {\r\n\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteAnimalMedicineComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Animal Medicine</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Optional token to provide custom configuration to the module\n */\nexport const NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken<FileInputConfig>(\n  'ngx-mat-file-input.config'\n);\n\n/**\n * Provide additional configuration to dynamically customize the module injection\n */\nexport class FileInputConfig {\n  /**\n   * Unit used with the ByteFormatPipe, default value is *Byte*.\n   * The first letter is used for the short notation.\n   */\n  sizeUnit: string;\n}\n","/**\n * The files to be uploaded\n */\nexport class FileInput {\n  private _fileNames: string;\n\n  constructor(private _files: File[] | null, private delimiter: string = ', ') {\n    this._fileNames = (this._files || []).map((f: File) => f.name).join(delimiter);\n  }\n\n  get files() {\n    return this._files || [];\n  }\n\n  get fileNames(): string {\n    return this._fileNames;\n  }\n}\n","import { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { CanUpdateErrorStateCtor, ErrorStateMatcher, mixinErrorState } from '@angular/material/core';\n\n// Boilerplate for applying mixins to FileInput\n/** @docs-private */\nexport class FileInputBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n      public _parentForm: NgForm,\n      public _parentFormGroup: FormGroupDirective,\n      public ngControl: NgControl) { }\n}\n\n/**\n * Allows to use a custom ErrorStateMatcher with the file-input component\n */\nexport const FileInputMixinBase:\n  CanUpdateErrorStateCtor &\n  typeof FileInputBase =\n  mixinErrorState(FileInputBase);\n","import { Component, OnInit, Input, ElementRef, OnDestroy, HostBinding, Renderer2, HostListener, Optional, Self, DoCheck } from '@angular/core';\nimport { ControlValueAccessor, NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { FileInput } from '../model/file-input.model';\nimport { FileInputMixinBase } from './file-input-mixin';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.css'],\n  providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }]\n})\nexport class FileInputComponent extends FileInputMixinBase implements MatFormFieldControl<FileInput>, ControlValueAccessor, OnInit, OnDestroy, DoCheck {\n  static nextId = 0;\n\n  focused = false;\n  controlType = 'file-input';\n\n  @Input() autofilled = false;\n\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() valuePlaceholder: string;\n  @Input() multiple: boolean;\n  @Input() accept: string | null = null;\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  @HostBinding() id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @Input()\n  get value(): FileInput | null {\n    return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n  }\n  set value(fileInput: FileInput | null) {\n    if (fileInput) {\n      this.writeValue(fileInput);\n      this.stateChanges.next();\n    }\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Whether the current input has files\n   */\n  get empty() {\n    return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n  }\n\n  @HostBinding('class.mat-form-field-should-float')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @HostBinding('class.file-input-disabled')\n  get isDisabled() {\n    return this.disabled;\n  }\n  @Input()\n  get disabled(): boolean {\n    return this._elementRef.nativeElement.disabled;\n  }\n  set disabled(dis: boolean) {\n    this.setDisabledState(coerceBooleanProperty(dis));\n    this.stateChanges.next();\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input' && !this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').focus();\n      this.focused = true;\n      this.open();\n    }\n  }\n\n  /**\n   * @see https://angular.io/api/forms/ControlValueAccessor\n   */\n  constructor(\n    private fm: FocusMonitor,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    @Optional()\n    @Self()\n    public ngControl: NgControl,\n    @Optional() public _parentForm: NgForm,\n    @Optional() public _parentFormGroup: FormGroupDirective,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl)\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n    fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  get fileNames() {\n    return this.value ? this.value.fileNames : this.valuePlaceholder;\n  }\n\n  writeValue(obj: FileInput | null): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj instanceof FileInput ? obj.files : null);\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Remove all files from the file input component\n   * @param [event] optional event that may have triggered the clear action\n   */\n  clear(event?: Event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.value = new FileInput([]);\n    this._elementRef.nativeElement.querySelector('input').value = null;\n    this._onChange(this.value);\n  }\n\n  @HostListener('change', ['$event'])\n  change(event: Event) {\n    const fileList: FileList | null = (<HTMLInputElement>event.target).files;\n    const fileArray: File[] = [];\n    if (fileList) {\n      for (let i = 0; i < fileList.length; i++) {\n        fileArray.push(fileList[i]);\n      }\n    }\n    this.value = new FileInput(fileArray);\n    this._onChange(this.value);\n  }\n\n  @HostListener('focusout')\n  blur() {\n    this.focused = false;\n    this._onTouched();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  ngOnInit() {\n    this.multiple = coerceBooleanProperty(this.multiple);\n  }\n\n  open() {\n    if (!this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').click();\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n}\n","import { Pipe, PipeTransform, Optional, Inject } from '@angular/core';\nimport { FileInputConfig, NGX_MAT_FILE_INPUT_CONFIG } from '../model/file-input-config.model';\n\n@Pipe({\n  name: 'byteFormat'\n})\nexport class ByteFormatPipe implements PipeTransform {\n  private unit: string;\n\n  constructor(\n    @Optional()\n    @Inject(NGX_MAT_FILE_INPUT_CONFIG)\n    private config: FileInputConfig\n  ) {\n    this.unit = config ? config.sizeUnit : 'Byte';\n  }\n\n  transform(value: any, args?: any): any {\n    if (parseInt(value, 10) >= 0) {\n      value = this.formatBytes(+value, +args);\n    }\n    return value;\n  }\n\n  private formatBytes(bytes: number, decimals?: number) {\n    if (bytes === 0) {\n      return '0 ' + this.unit;\n    }\n    const B = this.unit.charAt(0);\n    const k = 1024;\n    const dm = decimals || 2;\n    const sizes = [this.unit, 'K' + B, 'M' + B, 'G' + B, 'T' + B, 'P' + B, 'E' + B, 'Z' + B, 'Y' + B];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FileInputComponent } from './file-input/file-input.component';\nimport { ByteFormatPipe } from './pipe/byte-format.pipe';\nimport { FileInputConfig } from './model/file-input-config.model';\n\n@NgModule({\n  declarations: [FileInputComponent, ByteFormatPipe],\n  providers: [FocusMonitor],\n  exports: [FileInputComponent, ByteFormatPipe]\n})\nexport class MaterialFileInputModule {}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FileInput } from '../model/file-input.model';\n\nexport namespace FileValidator {\n  /**\n   * Function to control content of files\n   *\n   * @param bytes max number of bytes allowed\n   *\n   * @returns\n   */\n  export function maxContentSize(bytes: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const size = control && control.value ? (control.value as FileInput).files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n      const condition = bytes >= size;\n      return condition\n        ? null\n        : {\n            maxContentSize: {\n              actualSize: size,\n              maxSize: bytes\n            }\n          };\n    };\n  }\n\n  /**\n   *\n   * @description Handles allowed file types by controlling whether some specific extensions matches with the uploaded file type\n   * @export\n   * @param {string[]} extensions\n   * @returns {ValidatorFn}\n   */\n  export function allowedExtensions(extensions: string[]): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const allowed =\n        control &&\n        control.value &&\n        (control.value as FileInput).files.every(file => {\n\n          const fileNameSplit = file.name.split('.')\n\n          const extension = fileNameSplit[fileNameSplit.length - 1];\n\n          const foundIndex = extensions.indexOf(extension);\n\n          return foundIndex !== -1;\n        });\n\n      return allowed\n        ? null\n        : {\n          allowedExtensions: extensions\n          };\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileInputBase as Éµa,FileInputMixinBase as Éµb} from './lib/file-input/file-input-mixin';","import {Component, Inject, OnInit, Output, EventEmitter} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {IFarmActivity} from '../../../../Models/farms';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {Form} from '@angular/forms';\r\n\r\n// import * as EventEmitter from 'events';\r\n\r\n@Component({\r\n    selector: 'app-add-type',\r\n    templateUrl: './add-type.component.html',\r\n    styleUrls: ['./add-type.component.css']\r\n})\r\nexport class AddTypeComponent implements OnInit {\r\n    imagePath: any;\r\n    fileToUpload: File = null;\r\n    // farmActivities: IFarmActivity[];\r\n    farmActivity: IFarmActivity[];\r\n    min: number;\r\n    max: number;\r\n    min_water_salts: number;\r\n    max_water_salts: number;\r\n    min_suitable_phs: number;\r\n    max_suitable_phs: number;\r\n    min_suitable_soil: number;\r\n    max_suitable_soil: number;\r\n    min_farming: number;\r\n    max_farming: number;\r\n    min_flowering: number;\r\n    max_flowering: number;\r\n    min_maturity: number;\r\n    max_maturity: number;\r\n    min_humidity: number;\r\n    max_humidity: number;\r\n    min_maturity_time: number;\r\n    max_maturity_time: number;\r\n    min_flowering_time: number;\r\n    max_flowering_time: number;\r\n\r\n    @Output() newItemEvent: EventEmitter<File> = new EventEmitter();\r\n    saltArray: number[] = [];\r\n    water_salts: number[] = [];\r\n    suitable_ph: number[] = [];\r\n    suitable_soil: number[] = [];\r\n    farming_temperature: number[] = [];\r\n    flowering_temperature: number[] = [];\r\n    maturity_temperature: number[] = [];\r\n    humidity: number[] = [];\r\n    flowering_time: number[] = [];\r\n    maturity_time: number[] = [];\r\n\r\n    constructor(public _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    addNewItem(value: File) {\r\n        this.newItemEvent.emit(value);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getFarmsActivity();\r\n    }\r\n\r\n    onImageChange(event) {\r\n        const reader2 = new FileReader();\r\n        if (event.target.files && event.target.files.length) {\r\n            const [file] = event.target.files;\r\n            reader2.readAsDataURL(file);\r\n            reader2.onload = () => {\r\n                // this.imageSrc = reader2.result as string;\r\n                this.fileToUpload = event.target.files.item(0);\r\n                this.addNewItem(this.fileToUpload);\r\n            };\r\n        }\r\n    }\r\n\r\n    onSelectFile(event) {\r\n        // called each time file input changes\r\n        console.log(event);\r\n        if (event.target.files && event.target.files[0]) {\r\n            const reader = new FileReader();\r\n\r\n            const [file] = event.target.files;\r\n            // reader2.readAsDataURL(file);\r\n            reader.readAsDataURL(file);\r\n\r\n            // tslint:disable-next-line:no-shadowed-variable\r\n            reader.onload = () => {\r\n                this.fileToUpload = event.target.files.item(0);\r\n\r\n                this.imagePath = event.target.result;\r\n                console.log(this.fileToUpload);\r\n\r\n\r\n            };\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getFarmsActivity() {\r\n        this._FarmsService.getFarm_activity().subscribe((res: { data }) => {\r\n            this.farmActivity = res.data.all as IFarmActivity[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n    onAddFarmedType(data: any) {\r\n\r\n        this.min = Number((<HTMLInputElement>document.getElementById('min')).value);\r\n        this.max = Number((<HTMLInputElement>document.getElementById('max')).value);\r\n        this.saltArray.push(this.min, this.max);\r\n\r\n        this.min_water_salts = Number((<HTMLInputElement>document.getElementById('min_water_salts')).value);\r\n        this.max_water_salts = Number((<HTMLInputElement>document.getElementById('max_water_salts')).value);\r\n        this.water_salts.push(this.min_water_salts, this.max_water_salts);\r\n\r\n        this.min_suitable_phs = Number((<HTMLInputElement>document.getElementById('min_suitable_phs')).value);\r\n        this.max_suitable_phs = Number((<HTMLInputElement>document.getElementById('max_suitable_phs')).value);\r\n        this.suitable_ph.push(this.min_suitable_phs, this.max_suitable_phs);\r\n\r\n        this.min_suitable_soil = Number((<HTMLInputElement>document.getElementById('min_suitable_soil')).value);\r\n        this.max_suitable_soil = Number((<HTMLInputElement>document.getElementById('max_suitable_soil')).value);\r\n        this.suitable_soil.push(this.min_suitable_soil, this.max_suitable_soil);\r\n\r\n        this.min_farming = Number((<HTMLInputElement>document.getElementById('min_farming')).value);\r\n        this.max_farming = Number((<HTMLInputElement>document.getElementById('max_farming')).value);\r\n        this.farming_temperature.push(this.min_farming, this.max_farming);\r\n\r\n        this.min_flowering = Number((<HTMLInputElement>document.getElementById('min_flowering')).value);\r\n        this.max_flowering = Number((<HTMLInputElement>document.getElementById('max_flowering')).value);\r\n        this.flowering_temperature.push(this.min_flowering, this.max_flowering);\r\n\r\n        this.min_maturity = Number((<HTMLInputElement>document.getElementById('min_maturity')).value);\r\n        this.max_maturity = Number((<HTMLInputElement>document.getElementById('max_maturity')).value);\r\n        this.maturity_temperature.push(this.min_maturity, this.max_maturity);\r\n\r\n        this.min_humidity = Number((<HTMLInputElement>document.getElementById('min_humidity')).value);\r\n        this.max_humidity = Number((<HTMLInputElement>document.getElementById('max_humidity')).value);\r\n        this.humidity.push(this.min_humidity, this.max_humidity);\r\n\r\n        this.min_humidity = Number((<HTMLInputElement>document.getElementById('min_humidity')).value);\r\n        this.max_humidity = Number((<HTMLInputElement>document.getElementById('max_humidity')).value);\r\n        this.flowering_time.push(this.min_humidity, this.max_humidity);\r\n\r\n        console.log(this.suitable_ph);\r\n        this._FarmsService.AddFarmType.suitable_soil_salts_concentration = this.saltArray;\r\n        this._FarmsService.AddFarmType.suitable_water_salts_concentration = this.water_salts;\r\n        this._FarmsService.AddFarmType.suitable_ph = this.suitable_ph;\r\n        this._FarmsService.AddFarmType.suitable_soil_types = this.suitable_soil;\r\n        this._FarmsService.AddFarmType.farming_temperature = this.farming_temperature;\r\n        this._FarmsService.AddFarmType.flowering_temperature = this.flowering_temperature;\r\n        this._FarmsService.AddFarmType.maturity_temperature = this.maturity_temperature;\r\n        this._FarmsService.AddFarmType.humidity = this.humidity;\r\n\r\n        this._FarmsService.AddFarmedType().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            // this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n\r\n    addSalt(val: any) {\r\n        this.saltArray.push(val.target.value);\r\n    }\r\n}\r\n","<div class=\"container\">\r\n    <h2 mat-dialog-title>Add Farmed Type</h2>\r\n    <form #addFarmedType=\"ngForm\">\r\n\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\"\r\n                               [(ngModel)]=\"_FarmsService.AddFarmType.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\"\r\n                               [(ngModel)]=\" _FarmsService.AddFarmType.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Photo</mat-label>\r\n\r\n                        <ngx-mat-file-input name=\"file\" (change)=\"onSelectFile($event)\"\r\n                                            placeholder=\"Profile Image\"\r\n                                            accept=\"image/x-png,image/gif,image/jpeg\">\r\n                        </ngx-mat-file-input>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <!--                        <mat-error *ngIf=\"photo.errors?.required\">-->\r\n                        <!--                            Photo Name Is Required-->\r\n                        <!--                        </mat-error>-->\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Farm Activity Type</mat-label>\r\n                        <!--                        <input matInput name=\"first_name\" [(ngModel)]=\" _FarmsService.AddFarmType.farm_activity_type_id\"-->\r\n                        <!--                               #farm_activity_type_id=\"ngModel\" required>-->\r\n                        <!--                        <mat-label>Gender</mat-label>-->\r\n                        <mat-select name=\"farm_activity_type_id\" required\r\n                                    [(ngModel)]=\" _FarmsService.AddFarmType.farm_activity_type_id\"\r\n                                    #farm_activity_type_id=\"ngModel\">\r\n                            <mat-option *ngFor=\"let activity of farmActivity\" [value]=\"activity.id\">\r\n                                {{activity.name_ar_localized}}\r\n                            </mat-option>\r\n\r\n                        </mat-select>\r\n                        <!-- <mat-icon matSuffix>wc</mat-icon> -->\r\n                        <!--                        <mat-error *ngIf=\"gender.errors?.required\">-->\r\n                        <!--                            Gender is required-->\r\n                        <!--                        </mat-error>-->\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <!--                        <mat-error *ngIf=\"farm_activity_type_id.errors?.required\">-->\r\n                        <!--                            Farm Activity Is Required-->\r\n                        <!--                        </mat-error>-->\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">Salt</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min\" type=\"number\" [value]=\"min.value\" id=\"min\"\r\n                                       #min required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max\" [value]=\"max.value\" id=\"max\"\r\n                                       #max required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">Water Salt</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min_water_salts\" type=\"number\" [value]=\"min_water_salts.value\"\r\n                                       id=\"min_water_salts\"\r\n                                       #min_water_salts required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max_water_salts\" [value]=\"max_water_salts.value\"\r\n                                       id=\"max_water_salts\"\r\n                                       #max_water_salts required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">suitable_ph</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min_suitable_phs\" type=\"number\" [value]=\"min_suitable_phs.value\"\r\n                                       id=\"min_suitable_phs\"\r\n                                       #min_suitable_phs required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max_suitable_phs\" [value]=\"max_suitable_phs.value\"\r\n                                       id=\"max_suitable_phs\"\r\n                                       #max_suitable_phs required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">suitable_soil_types</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min_suitable_phs\" type=\"number\" [value]=\"min_suitable_soil.value\"\r\n                                       id=\"min_suitable_soil\"\r\n                                       #min_suitable_soil required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max_suitable_soil\" [value]=\"max_suitable_soil.value\"\r\n                                       id=\"max_suitable_soil\"\r\n                                       #max_suitable_soil required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">farming_temperature</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min_farming\" type=\"number\" [value]=\"min_farming.value\"\r\n                                       id=\"min_farming\"\r\n                                       #min_farming required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max_farming\" [value]=\"max_farming.value\"\r\n                                       id=\"max_farming\"\r\n                                       #max_farming required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">flowering_temperature</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min_flowering\" type=\"number\" [value]=\"min_flowering.value\"\r\n                                       id=\"min_flowering\"\r\n                                       #min_flowering required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max_flowering\" [value]=\"max_flowering.value\"\r\n                                       id=\"max_flowering\"\r\n                                       #max_flowering required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">maturity_temperature</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min_maturity\" type=\"number\" [value]=\"min_maturity.value\"\r\n                                       id=\"min_maturity\"\r\n                                       #min_maturity required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max_maturity\" [value]=\"max_maturity.value\"\r\n                                       id=\"max_maturity\"\r\n                                       #max_maturity required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 \">\r\n                        <h5 class=\" \">humidity</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>min</mat-label>\r\n                                <input matInput name=\"min_humidity\" type=\"number\" [value]=\"min_humidity.value\"\r\n                                       id=\"min_humidity\"\r\n                                       #min_humidity required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                <mat-label>max</mat-label>\r\n                                <input matInput name=\"max_humidity\" [value]=\"max_humidity.value\"\r\n                                       id=\"max_humidity\"\r\n                                       #max_humidity required>\r\n                                <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                                <!--                                <mat-error *ngIf=\"max.errors?.required\">-->\r\n                                <!--                                    English Name Is Required-->\r\n                                <!--                                </mat-error>-->\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n<!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"row\">-->\r\n            <!--                    <div class=\"col-md-12 \">-->\r\n            <!--                        <h5 class=\" \">flowering_time</h5>-->\r\n            <!--                    </div>-->\r\n            <!--                    <div class=\"col-md-4\">-->\r\n            <!--                        <div class=\"form-group\">-->\r\n            <!--                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                                <mat-label>min</mat-label>-->\r\n            <!--                                <input matInput name=\"min_flowering_time\" type=\"number\"-->\r\n            <!--                                       [value]=\"min_flowering_time.value\"-->\r\n            <!--                                       id=\"min_flowering_time\"-->\r\n            <!--                                       #min_flowering_time required>-->\r\n            <!--                                &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                                &lt;!&ndash;                                <mat-error *ngIf=\"min.errors?.required\">&ndash;&gt;-->\r\n            <!--                                &lt;!&ndash;                                    English Name Is Required&ndash;&gt;-->\r\n            <!--                                &lt;!&ndash;                                </mat-error>&ndash;&gt;-->\r\n            <!--                            </mat-form-field>-->\r\n            <!--                        </div>-->\r\n            <!--                    </div>-->\r\n            <!--                    <div class=\"col-md-4\">-->\r\n            <!--                        <div class=\"form-group\">-->\r\n            <!--                            <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                                <mat-label>max</mat-label>-->\r\n            <!--                                <input matInput name=\"max_flowering_time\" [value]=\"max_flowering_time.value\"-->\r\n            <!--                                       id=\"max_flowering_time\"-->\r\n            <!--                                       #max_flowering_time required>-->\r\n            <!--                                &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                                &lt;!&ndash;                                <mat-error *ngIf=\"max.errors?.required\">&ndash;&gt;-->\r\n            <!--                                &lt;!&ndash;                                    English Name Is Required&ndash;&gt;-->\r\n            <!--                                &lt;!&ndash;                                </mat-error>&ndash;&gt;-->\r\n            <!--                            </mat-form-field>-->\r\n            <!--                        </div>-->\r\n            <!--                    </div>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>maturity_time</mat-label>\r\n                        <input matInput name=\"maturity_time\" type=\"number\"\r\n                               [(ngModel)]=\"_FarmsService.AddFarmType.maturity_time\"\r\n\r\n                               #maturity_time=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                        <!--                                    English Name Is Required-->\r\n                        <!--                                </mat-error>-->\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>flowering_time</mat-label>\r\n                        <input matInput name=\"maturity_time\" type=\"number\"\r\n                               [(ngModel)]=\"_FarmsService.AddFarmType.flowering_time\"\r\n\r\n                               #flowering_time=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <!--                                <mat-error *ngIf=\"min.errors?.required\">-->\r\n                        <!--                                    English Name Is Required-->\r\n                        <!--                                </mat-error>-->\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"col-md-12\">\r\n            <button mat-raised-button color=\"accent\" style=\"float: right\" class=\"button-lg ml-3\"\r\n                    (click)=\"onAddFarmedType(addFarmedType)\">Create\r\n            </button>\r\n            <button class=\"button-lg\" [routerLink]=\"['/admin-panel/farms/farmed-type']\" style=\"float: right\"\r\n                    mat-raised-button>Discard\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-plant-pot-sizes',\r\n  templateUrl: './add-edit-plant-pot-sizes.component.html',\r\n  styleUrls: ['./add-edit-plant-pot-sizes.component.css']\r\n})\r\nexport class AddEditPlantPotSizesComponent implements OnInit {\r\n\r\n  constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddEditPlantPotSizesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getFarmsActivity();\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Plant Pot Size </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Pot Size</mat-label>\r\n                        <input matInput name=\"size\" [(ngModel)]=\"data.FarmedData.size\"\r\n                               #size=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"size.errors?.required\">\r\n                            Pot Size Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {PermeationsComponent} from '../permeations/permeations.component';\r\nimport {ViewPermeationComponent} from '../permeations/view-permeation/view-permeation.component';\r\nimport {UpdatePermeationComponent} from '../permeations/update-permeation/update-permeation.component';\r\nimport {FarmsComponent} from './farms.component';\r\nimport {ViewFarmComponent} from './view-farm/view-farm.component';\r\nimport {SettingFarmComponent} from './setting-farm/setting-farm.component';\r\nimport {FarmedTypeComponent} from './farmed-type/farmed-type.component';\r\nimport {FarmedTypeClassComponent} from './farmed-type-class/farmed-type-class.component';\r\nimport {FarmingWayComponent} from './farming-way/farming-way.component';\r\nimport {FarmingMethodsComponent} from './farming-methods/farming-methods.component';\r\nimport {SeedlingSourcesComponent} from './seedling-sources/seedling-sources.component';\r\nimport {AnimalBreedingComponent} from './animal-breeding/animal-breeding.component';\r\nimport {AnimalFodderComponent} from './animal-fodder/animal-fodder.component';\r\nimport {AnimalMedicineComponent} from './animal-medicine/animal-medicine.component';\r\nimport {PlantPotSizesComponent} from './plant-pot-sizes/plant-pot-sizes.component';\r\nimport {SaltTypesComponent} from './salt-types/salt-types.component';\r\nimport {SoilTypesComponent} from './soil-types/soil-types.component';\r\nimport {AcidityTypesComponent} from './acidity-types/acidity-types.component';\r\nimport {AnimalFodderSourcesComponent} from './animal-fodder-sources/animal-fodder-sources.component';\r\nimport {ChemicalFertilizerSourcesComponent} from './chemical-fertilizer-sources/chemical-fertilizer-sources.component';\r\nimport {HomePlantIlluminatingSourcesComponent} from './home-plant-illuminating-sources/home-plant-illuminating-sources.component';\r\nimport {IrrigationWaysComponent} from './irrigation-ways/irrigation-ways.component';\r\nimport {AddTypeComponent} from './farmed-type/add-type/add-type.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: FarmsComponent},\r\n  {path: 'view-farm', component: ViewFarmComponent},\r\n  {path: 'setting-farm', component: SettingFarmComponent},\r\n  {path: 'farmed-type', component: FarmedTypeComponent},\r\n  {path: 'add-farmed-type', component: AddTypeComponent},\r\n  {path: 'farmed-type-class', component: FarmedTypeClassComponent},\r\n  {path: 'farming-ways', component: FarmingWayComponent},\r\n  {path: 'farming-method', component: FarmingMethodsComponent},\r\n  {path: 'seedling_sources', component: SeedlingSourcesComponent},\r\n  {path: 'animal_breeding_purposes', component: AnimalBreedingComponent},\r\n  {path: 'animal_fodder', component: AnimalFodderComponent},\r\n  {path: 'animal_medicine', component: AnimalMedicineComponent},\r\n  {path: 'plant_pot', component: PlantPotSizesComponent},\r\n  {path: 'salt-types', component: SaltTypesComponent},\r\n  {path: 'soil-types', component: SoilTypesComponent},\r\n  {path: 'acidity_types', component: AcidityTypesComponent},\r\n  {path: 'animal_fodder_sources', component: AnimalFodderSourcesComponent},\r\n  {path: 'chemical_fertilizer_sources', component: ChemicalFertilizerSourcesComponent},\r\n  {path: 'irrigation_ways', component: IrrigationWaysComponent},\r\n  {path: 'plant_illuminating_sources', component: HomePlantIlluminatingSourcesComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FarmsRoutingModule { }\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmedTypeClass, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddTypeComponent} from '../farmed-type/add-type/add-type.component';\r\nimport {DeleteTypeComponent} from '../farmed-type/delete-type/delete-type.component';\r\nimport {AddEditClassComponent} from './add-edit-class/add-edit-class.component';\r\nimport {DeleteClassComponent} from './delete-class/delete-class.component';\r\n\r\n@Component({\r\n    selector: 'app-farmed-type-class',\r\n    templateUrl: './farmed-type-class.component.html',\r\n    styleUrls: ['./farmed-type-class.component.css']\r\n})\r\nexport class FarmedTypeClassComponent implements OnInit {\r\n\r\n    cols: any;\r\n    products: any;\r\n    roles: IAppAdmin[];\r\n    farms: IFarmedType[];\r\n    profileFarm: IFarmedType;\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    data: any;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n    errorMessage: string;\r\n    profileFarmData: IAddFarmedType;\r\n\r\n    constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'farmed_type_id', header: 'ID'},\r\n            {field: 'farmed_type_name', header: 'Farmed Type Name'},\r\n            {field: 'name_ar_localized', header: 'Class Name'}\r\n\r\n\r\n        ];\r\n        this.getFarmsApp();\r\n    }\r\n\r\n    showDialogGetFarmedTypeById(id: number) {\r\n        this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n            this.profileFarm = res.data as IFarmedType;\r\n            console.log(this.profileFarm);\r\n        }, error => {\r\n\r\n        }, () => {\r\n            this.display = true;\r\n\r\n        });\r\n    }\r\n\r\n    getFarmsApp() {\r\n        this._FarmsService.getFarmedTypeClass().subscribe((res: { data }) => {\r\n            this.farms = res.data.all as IFarmedType[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n\r\n    openAddFarmedTypeDialog() {\r\n\r\n        const dialogRef = this.dialog.open(AddEditClassComponent, {\r\n                data: {\r\n                    FarmedData: this._FarmsService.AddFarmTypeClass, error: this.errorMessage,\r\n                }\r\n            })\r\n        ;\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.errorMessage = null;\r\n\r\n            if (result) {\r\n                this._FarmsService.AddFarmTypeClass = result.FarmedData;\r\n                this.onAddFarmedType();\r\n\r\n            } else {\r\n                this._FarmsService.AddFarmTypeClass = {} as IAddFarmedTypeClass;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddFarmedType() {\r\n        this._FarmsService.AddFarmedTypeClass().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    getDataById(id: number) {\r\n        this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n            this.profileFarmData = res.data as IAddFarmedType;\r\n            console.log(this.profileFarmData);\r\n        }, error => {\r\n\r\n        }, () => {\r\n            // this.display = true;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    openEditFarmedTypeDialog(classData: IAddFarmedTypeClass) {\r\n\r\n\r\n        const dialogRef = this.dialog.open(AddEditClassComponent, {\r\n            data: {FarmedData: classData}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this._FarmsService.AddFarmTypeClass = result.FarmedData;\r\n                this.onEditFarmedType(result.FarmedData.id);\r\n\r\n            } else {\r\n                this._FarmsService.AddFarmTypeClass = {} as IAddFarmedTypeClass;\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditFarmedType(roleId) {\r\n        this._FarmsService.editFarmedTypeClass(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this._FarmsService.AddFarmTypeClass = {} as IAddFarmedTypeClass;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    openFarmedTypeDeleteDialog(data) {\r\n        const dialogRef = this.dialog.open(DeleteClassComponent, {\r\n            data: {farmData: data}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteFarmedType(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteFarmedType(roleId) {\r\n        this._FarmsService.deleteFarmedTypeClass(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Farmed Type Class\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-class',\r\n  templateUrl: './delete-class.component.html',\r\n  styleUrls: ['./delete-class.component.css']\r\n})\r\nexport class DeleteClassComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteClassComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Farming Way</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-plant-illuminating-sources',\r\n  templateUrl: './add-edit-plant-illuminating-sources.component.html',\r\n  styleUrls: ['./add-edit-plant-illuminating-sources.component.css']\r\n})\r\nexport class AddEditPlantIlluminatingSourcesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEditPlantIlluminatingSourcesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Plant Illuminating Source </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditAnimalBreedingComponent} from '../animal-breeding/add-edit-animal-breeding/add-edit-animal-breeding.component';\r\nimport {DeleteAnimalBreedingComponent} from '../animal-breeding/delete-animal-breeding/delete-animal-breeding.component';\r\nimport {AddAnimalFodderComponent} from './add-animal-fodder/add-animal-fodder.component';\r\nimport {DeleteAnimalFodderComponent} from './delete-animal-fodder/delete-animal-fodder.component';\r\n\r\n@Component({\r\n  selector: 'app-animal-fodder',\r\n  templateUrl: './animal-fodder.component.html',\r\n  styleUrls: ['./animal-fodder.component.css']\r\n})\r\nexport class AnimalFodderComponent implements OnInit {\r\n\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddFarmingWays[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Animal Fodder (Ar)'},\r\n      {field: 'name_en_localized', header: 'Animal Fodder (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getAnimal_fodder().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddFarmingWays[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddAnimalFodderComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddAnimalFodder, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddAnimalFodder = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddAnimalFodder = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddAnimal_fodder().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAnimalFodder = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddFarmingWays) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddAnimalFodderComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddAnimalFodder = result.FarmedData;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddAnimalFodder = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editAnimal_fodder(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAnimalFodder = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteAnimalFodderComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteAnimal_fodder(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Animal Fodder\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, EventEmitter, Inject, OnInit, Output} from '@angular/core';\r\nimport {IFarmActivity} from '../../../../Models/farms';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-edit-type',\r\n  templateUrl: './edit-type.component.html',\r\n  styleUrls: ['./edit-type.component.css']\r\n})\r\nexport class EditTypeComponent implements OnInit {\r\n\r\n  imagePath: any;\r\n  fileToUpload: File = null;\r\n  // farmActivities: IFarmActivity[];\r\n  farmActivity: IFarmActivity[];\r\n  min: number;\r\n  max: number;\r\n  @Output() newItemEvent: EventEmitter<File> = new EventEmitter();\r\n\r\n  constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<EditTypeComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  addNewItem(value: File) {\r\n    this.newItemEvent.emit(value);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFarmsActivity();\r\n  }\r\n\r\n  onImageChange(event) {\r\n    const reader2 = new FileReader();\r\n    if (event.target.files && event.target.files.length) {\r\n      const [file] = event.target.files;\r\n      reader2.readAsDataURL(file);\r\n      reader2.onload = () => {\r\n        // this.imageSrc = reader2.result as string;\r\n        this.fileToUpload = event.target.files.item(0);\r\n        this.addNewItem(this.fileToUpload);\r\n      };\r\n    }\r\n  }\r\n\r\n  onSelectFile(event) {\r\n    // called each time file input changes\r\n    console.log(event);\r\n    if (event.target.files && event.target.files[0]) {\r\n      const reader = new FileReader();\r\n\r\n      const [file] = event.target.files;\r\n      // reader2.readAsDataURL(file);\r\n      reader.readAsDataURL(file);\r\n\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      reader.onload = () => {\r\n        this.fileToUpload = event.target.files.item(0);\r\n\r\n        this.imagePath = event.target.result;\r\n        console.log(this.fileToUpload);\r\n        this.data.FarmedData.photo = this.fileToUpload;\r\n        console.log(this.data.FarmedData.photo);\r\n\r\n\r\n      };\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getFarmsActivity() {\r\n    this._FarmsService.getFarm_activity().subscribe((res: { data }) => {\r\n      this.farmActivity = res.data.all as IFarmActivity[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Add Farmed Type</h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Photo</mat-label>\r\n\r\n                        <ngx-mat-file-input name=\"file\" (change)=\"onSelectFile($event)\"\r\n                                            placeholder=\"Profile Image\"\r\n                                            accept=\"image/x-png,image/gif,image/jpeg\">\r\n                        </ngx-mat-file-input>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <!--                        <mat-error *ngIf=\"photo.errors?.required\">-->\r\n                        <!--                            Photo Name Is Required-->\r\n                        <!--                        </mat-error>-->\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Farm Activity Type</mat-label>\r\n                        <!--                        <input matInput name=\"first_name\" [(ngModel)]=\"data.FarmedData.farm_activity_type_id\"-->\r\n                        <!--                               #farm_activity_type_id=\"ngModel\" required>-->\r\n                        <!--                        <mat-label>Gender</mat-label>-->\r\n                        <mat-select name=\"farm_activity_type_id\" required\r\n                                    [(ngModel)]=\"data.FarmedData.farm_activity_type_id\" #farm_activity_type_id=\"ngModel\">\r\n                            <mat-option *ngFor=\"let activity of farmActivity\" [value]=\"activity.id\">\r\n                                {{activity.name_ar_localized}}\r\n                            </mat-option>\r\n\r\n                        </mat-select>\r\n                        <!-- <mat-icon matSuffix>wc</mat-icon> -->\r\n                        <!--                        <mat-error *ngIf=\"gender.errors?.required\">-->\r\n                        <!--                            Gender is required-->\r\n                        <!--                        </mat-error>-->\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <!--                        <mat-error *ngIf=\"farm_activity_type_id.errors?.required\">-->\r\n                        <!--                            Farm Activity Is Required-->\r\n                        <!--                        </mat-error>-->\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial\r\n                [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-way',\r\n  templateUrl: './delete-way.component.html',\r\n  styleUrls: ['./delete-way.component.css']\r\n})\r\nexport class DeleteWayComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteWayComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Farmed Type</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FarmsService} from '../../../../Services/farms.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-animal-medicine',\r\n  templateUrl: './add-edit-animal-medicine.component.html',\r\n  styleUrls: ['./add-edit-animal-medicine.component.css']\r\n})\r\nexport class AddEditAnimalMedicineComponent implements OnInit {\r\n\r\n  constructor(public _FarmsService: FarmsService, public dialogRef: MatDialogRef<AddEditAnimalMedicineComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getFarmsActivity();\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add Animal Medicine </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-animal-fodder',\r\n  templateUrl: './delete-animal-fodder.component.html',\r\n  styleUrls: ['./delete-animal-fodder.component.css']\r\n})\r\nexport class DeleteAnimalFodderComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteAnimalFodderComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Animal Fodder</h2>\r\n<div class=\"alert alert-danger \" role=\"alert\">\r\n    <div class=\"row text-center\">\r\n        <div class=\"col-12 \">\r\n            <i class=\"fas fa-exclamation-triangle fa-5x animate__animated animate__infinite animate__pulse\"></i><br>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <br>\r\n            <h6>Are You Sure You Want To Delete?</h6>\r\n            <h5>{{data.farmData.name_ar_localized}}</h5>\r\n            <h6>Are you sure you want to delete this Farmed Type Class permanently?</h6>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--<hr>-->\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <button style=\"float: right\" mat-raised-button color=\"accent\" [mat-dialog-close]=\"data.farmData.id\" cdkFocusInitial>\r\n            Yes\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddFarmingWays, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddWayComponent} from '../farming-way/add-way/add-way.component';\r\nimport {DeleteWayComponent} from '../farming-way/delete-way/delete-way.component';\r\nimport {AddEditMethodComponent} from './add-edit-method/add-edit-method.component';\r\n\r\n@Component({\r\n  selector: 'app-farming-methods',\r\n  templateUrl: './farming-methods.component.html',\r\n  styleUrls: ['./farming-methods.component.css']\r\n})\r\nexport class FarmingMethodsComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddFarmingWays[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Farming Method (Ar)'},\r\n      {field: 'name_en_localized', header: 'Farming Method (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getFarmingMethods().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddFarmingWays[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditMethodComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddMethods, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddMethods = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddMethods = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddFarmingMethods().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddMethods = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddFarmingWays) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditMethodComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddMethods = result.FarmedData;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddMethods = {} as IAddFarmingWays;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editFarmingMethods(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddMethods = {} as IAddFarmingWays;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteWayComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteFarmingMethods(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Farming Method\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-chemical-fertilizer-sources',\r\n  templateUrl: './add-edit-chemical-fertilizer-sources.component.html',\r\n  styleUrls: ['./add-edit-chemical-fertilizer-sources.component.css']\r\n})\r\nexport class AddEditChemicalFertilizerSourcesComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddEditChemicalFertilizerSourcesComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>Add ChemicalFertilizer </h2>\r\n<form #addFarmedType=\"ngForm\">\r\n    <div class=\"row\" *ngIf=\"data.error\">\r\n        <div class=\"col-12\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                <strong>{{data.error}}</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <mat-dialog-content class=\"mat-typography\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Arabic Name</mat-label>\r\n                        <input matInput name=\"name_ar_localized\" [(ngModel)]=\"data.FarmedData.name_ar_localized\"\r\n                               #name_ar_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_ar_localized.errors?.required\">\r\n                            Arabic Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>English Name</mat-label>\r\n                        <input matInput name=\"name_en_localized\" [(ngModel)]=\"data.FarmedData.name_en_localized\"\r\n                               #name_en_localized=\"ngModel\" required>\r\n                        <!-- <mat-icon matSuffix>people_outline</mat-icon> -->\r\n                        <mat-error *ngIf=\"name_en_localized.errors?.required\">\r\n                            English Name Is Required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Last Name</mat-label>-->\r\n            <!--                        <input matInput name=\"last_name\" [(ngModel)]=\"data.parentData.last_name\" #last_name=\"ngModel\" required>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"last_name.errors?.required\">-->\r\n            <!--                            Last Name Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Email</mat-label>-->\r\n            <!--                        <input type=\"email\" matInput name=\"email\" [(ngModel)]=\"data.parentData.email\" #email=\"ngModel\" required-->\r\n            <!--                               ngvemail>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.required\">-->\r\n            <!--                            Email Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"email.errors?.email\">-->\r\n            <!--                            Please Enter Valid Email-->\r\n            <!--                        </mat-error>-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--        -->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Mobile Number</mat-label>-->\r\n            <!--                        <input matInput name=\"phone_number\" required [(ngModel)]=\"data.parentData.phone_number\"-->\r\n            <!--                               #phone_number=\"ngModel\" [pattern]=\"'^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$'\" minlength=\"10\"-->\r\n            <!--                               maxlength=\"20\">-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.required\">-->\r\n            <!--                            Phone Number is required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.pattern\">-->\r\n            <!--                            It Must Be A Number-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.minlength\">-->\r\n            <!--                            Phone Number Must Be 10 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"phone_number.errors?.maxlength\">-->\r\n            <!--                            Phone Number Must Be 20 Characters-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <div class=\"form-group\">-->\r\n            <!--                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                        <mat-label>Birth Date</mat-label>-->\r\n            <!--                        <input matInput type=\"date\" name=\"birth_date\" [(ngModel)]=\"data.parentData.birth_date\"-->\r\n            <!--                               maxDate=\"2007-01-01\"-->\r\n            <!--                               required-->\r\n            <!--                               #birth_date=\"ngModel\">-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.required\">-->\r\n            <!--                            BirthDate Is Required-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        <mat-error *ngIf=\"birth_date.errors?.maxDate\">-->\r\n            <!--                            Parent Is Very Small-->\r\n            <!--                        </mat-error>-->\r\n            <!--                        &lt;!&ndash; <mat-icon matSuffix>people_outline</mat-icon> &ndash;&gt;-->\r\n            <!--                    </mat-form-field>-->\r\n            <!--                </div>-->\r\n            <!--            </div>-->\r\n            <!--            <div class=\"col-md-6\">-->\r\n            <!--                <mat-form-field class=\"example-full-width\" appearance=\"outline\">-->\r\n            <!--                    <mat-label>Gender</mat-label>-->\r\n            <!--                    <mat-select name=\"gender\" required-->\r\n            <!--                                [(ngModel)]=\"data.parentData.gender\" #gender=\"ngModel\">-->\r\n            <!--                        <mat-option [value]=\"'Male'\">-->\r\n            <!--                            Male-->\r\n            <!--                        </mat-option>-->\r\n            <!--                        <mat-option [value]=\"'Female'\">-->\r\n            <!--                            Female-->\r\n            <!--                        </mat-option>-->\r\n            <!--                    </mat-select>-->\r\n            <!--                    &lt;!&ndash; <mat-icon matSuffix>wc</mat-icon> &ndash;&gt;-->\r\n            <!--                    <mat-error *ngIf=\"gender.errors?.required\">-->\r\n            <!--                        Gender is required-->\r\n            <!--                    </mat-error>-->\r\n            <!--                </mat-form-field>-->\r\n            <!--            </div>-->\r\n\r\n\r\n        </div>\r\n\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"d-flex justify-content-between\">\r\n        <button mat-button (click)=\"onNoClick()\" mat-dialog-close>Cancel</button>\r\n        <button mat-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial [disabled]=\"!addFarmedType.valid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-view-farm',\r\n  templateUrl: './view-farm.component.html',\r\n  styleUrls: ['./view-farm.component.css']\r\n})\r\nexport class ViewFarmComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>view-farm works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddSoilTypes, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditChemicalFertilizerSourcesComponent} from '../chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources.component';\r\nimport {DeleteChemicalFertilizerSourcesComponent} from '../chemical-fertilizer-sources/delete-chemical-fertilizer-sources/delete-chemical-fertilizer-sources.component';\r\n\r\n@Component({\r\n  selector: 'app-home-plant-illuminating-sources',\r\n  templateUrl: './home-plant-illuminating-sources.component.html',\r\n  styleUrls: ['./home-plant-illuminating-sources.component.css']\r\n})\r\nexport class HomePlantIlluminatingSourcesComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddSoilTypes[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Plant Illuminating Sources  (Ar)'},\r\n      {field: 'name_en_localized', header: 'Plant Illuminating Sources (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getPlant_illuminating_sources().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddSoilTypes[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditChemicalFertilizerSourcesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddPlant_sources, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddPlant_sources = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddPlant_sources = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddPlant_illuminating_sources().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddPlant_sources = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddSoilTypes) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditChemicalFertilizerSourcesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddPlant_sources.name_ar_localized = result.FarmedData.name_ar_localized;\r\n        this._FarmsService.AddPlant_sources.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddPlant_sources = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editPlant_illuminating_sources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddPlant_sources = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteChemicalFertilizerSourcesComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deletePlant_illuminating_sources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Plant Illuminating Source\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddSoilTypes, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditAcidityTypesComponent} from '../acidity-types/add-edit-acidity-types/add-edit-acidity-types.component';\r\nimport {DeleteAcidityTypesComponent} from '../acidity-types/delete-acidity-types/delete-acidity-types.component';\r\nimport {DeleteChemicalFertilizerSourcesComponent} from './delete-chemical-fertilizer-sources/delete-chemical-fertilizer-sources.component';\r\nimport {AddEditChemicalFertilizerSourcesComponent} from './add-edit-chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources.component';\r\n\r\n@Component({\r\n  selector: 'app-chemical-fertilizer-sources',\r\n  templateUrl: './chemical-fertilizer-sources.component.html',\r\n  styleUrls: ['./chemical-fertilizer-sources.component.css']\r\n})\r\nexport class ChemicalFertilizerSourcesComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddSoilTypes[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Chemical Sources  (Ar)'},\r\n      {field: 'name_en_localized', header: 'Chemical Sources (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getChemical_fertilizer_sources().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddSoilTypes[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditChemicalFertilizerSourcesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddChemical_sources, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddChemical_sources = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddChemical_sources = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddChemical_fertilizer_sources().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddChemical_sources = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddSoilTypes) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditChemicalFertilizerSourcesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddChemical_sources.name_ar_localized = result.FarmedData.name_ar_localized;\r\n        this._FarmsService.AddChemical_sources.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddChemical_sources = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editChemical_fertilizer_sources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddChemical_sources = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteChemicalFertilizerSourcesComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteChemical_fertilizer_sources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Chemical Fertilizer Source\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IAddSoilTypes, IFarmedType} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {AddEditChemicalFertilizerSourcesComponent} from '../chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources/add-edit-chemical-fertilizer-sources.component';\r\nimport {DeleteChemicalFertilizerSourcesComponent} from '../chemical-fertilizer-sources/delete-chemical-fertilizer-sources/delete-chemical-fertilizer-sources.component';\r\nimport {AddEditAnimalFodderSourcesComponent} from './add-edit-animal-fodder-sources/add-edit-animal-fodder-sources.component';\r\nimport {DeleteAnimalFodderSourcesComponent} from './delete-animal-fodder-sources/delete-animal-fodder-sources.component';\r\n\r\n@Component({\r\n  selector: 'app-animal-fodder-sources',\r\n  templateUrl: './animal-fodder-sources.component.html',\r\n  styleUrls: ['./animal-fodder-sources.component.css']\r\n})\r\nexport class AnimalFodderSourcesComponent implements OnInit {\r\n\r\n  cols: any;\r\n  products: any;\r\n  roles: IAppAdmin[];\r\n  farms: IAddSoilTypes[];\r\n  profileFarm: IFarmedType;\r\n  rolesPermations: any[];\r\n  display: boolean = false;\r\n  data: any;\r\n  // toastOption: ToastOptions = {\r\n  //     title: 'Events',\r\n  //     msg: 'This Event Has Been Deleted successfully!',\r\n  //     showClose: true,\r\n  //     timeout: 3000,\r\n  //     theme: 'material'\r\n  // };\r\n  errorMessage: string;\r\n  profileFarmData: IAddFarmedType;\r\n\r\n  constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n  }\r\n\r\n  //\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      {field: 'id', header: 'ID'},\r\n      {field: 'name_ar_localized', header: 'Animal Fodder Sources  (Ar)'},\r\n      {field: 'name_en_localized', header: 'Animal Fodder Sources (En)'},\r\n\r\n\r\n    ];\r\n    this.getFarmsApp();\r\n  }\r\n\r\n  // showDialogGetFarmedTypeById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarm = res.data as IFarmedType;\r\n  //         console.log(this.profileFarm);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         this.display = true;\r\n  //\r\n  //     });\r\n  // }\r\n\r\n  getFarmsApp() {\r\n    this._FarmsService.getAnimal_fodder_sources().subscribe((res: { data }) => {\r\n      this.farms = res.data.all as IAddSoilTypes[];\r\n      // this.rolesPermations = this.roles.map(x => x.permissions);\r\n      // console.log(this.rolesPermations);\r\n    });\r\n  }\r\n\r\n\r\n  openAddFarmedTypeDialog() {\r\n\r\n    const dialogRef = this.dialog.open(AddEditAnimalFodderSourcesComponent, {\r\n          data: {\r\n            FarmedData: this._FarmsService.AddAnimal_food_sources, error: this.errorMessage,\r\n          }\r\n        })\r\n    ;\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.errorMessage = null;\r\n\r\n      if (result) {\r\n        this._FarmsService.AddAnimal_food_sources = result.FarmedData;\r\n        this.onAddFarmedType();\r\n\r\n      } else {\r\n        this._FarmsService.AddAnimal_food_sources = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddFarmedType() {\r\n    this._FarmsService.AddAnimal_fodder_sources().subscribe(res => {\r\n    }, error => {\r\n\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAnimal_food_sources = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  // getDataById(id: number) {\r\n  //     this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n  //         this.profileFarmData = res.data as IAddFarmedType;\r\n  //         console.log(this.profileFarmData);\r\n  //     }, error => {\r\n  //\r\n  //     }, () => {\r\n  //         // this.display = true;\r\n  //     });\r\n  //\r\n  //\r\n  // }\r\n\r\n  openEditFarmedTypeDialog(classData: IAddSoilTypes) {\r\n\r\n\r\n    const dialogRef = this.dialog.open(AddEditAnimalFodderSourcesComponent, {\r\n      data: {FarmedData: classData}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this._FarmsService.AddAnimal_food_sources.name_ar_localized = result.FarmedData.name_ar_localized;\r\n        this._FarmsService.AddAnimal_food_sources.name_en_localized = result.FarmedData.name_en_localized;\r\n\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onEditFarmedType(result.FarmedData.id);\r\n\r\n      } else {\r\n        this._FarmsService.AddAnimal_food_sources = {} as IAddSoilTypes;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onEditFarmedType(roleId) {\r\n    this._FarmsService.editAnimal_fodder_sources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this._FarmsService.AddAnimal_food_sources = {} as IAddSoilTypes;\r\n\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Updated successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n  openFarmedTypeDeleteDialog(data) {\r\n    const dialogRef = this.dialog.open(DeleteAnimalFodderSourcesComponent, {\r\n      data: {farmData: data}\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        // this.toastyService.success(this.toastOption);\r\n        console.log(result);\r\n        // this.eventsList.id = result;\r\n        this.onDeleteFarmedType(result);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteFarmedType(roleId) {\r\n    this._FarmsService.deleteAnimal_fodder_sources(roleId).subscribe(res => {\r\n    }, error => {\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n    }, () => {\r\n      this.getFarmsApp();\r\n      this.toastyService.success({\r\n        title: 'Members',\r\n        msg: 'This Role Has Been Deleted successfully!',\r\n        showClose: true,\r\n        timeout: 3000,\r\n        theme: 'material'\r\n      });\r\n      // this.displayClassDeleteDialogue = false;\r\n      // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Animal Fodder Source\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {IAppAdmin} from '../../../Models/app-admin';\r\nimport {IAddFarmedType, IFarmActivity, IFarmedType, IFarms} from '../../../Models/farms';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AppAdminService} from '../../../Services/app-admin.service';\r\nimport {FarmsService} from '../../../Services/farms.service';\r\nimport {ToastaService} from 'ngx-toasta';\r\nimport {DeleteRoleComponent} from '../../roles/delete-role/delete-role.component';\r\nimport {AddTypeComponent} from './add-type/add-type.component';\r\nimport {DeleteTypeComponent} from './delete-type/delete-type.component';\r\n\r\n@Component({\r\n    selector: 'app-farmed-type',\r\n    templateUrl: './farmed-type.component.html',\r\n    styleUrls: ['./farmed-type.component.css']\r\n})\r\nexport class FarmedTypeComponent implements OnInit {\r\n\r\n    cols: any;\r\n    products: any;\r\n    roles: IAppAdmin[];\r\n    farms: IFarmedType[];\r\n    profileFarm: IFarmedType;\r\n    rolesPermations: any[];\r\n    display: boolean = false;\r\n    data: any;\r\n    // toastOption: ToastOptions = {\r\n    //     title: 'Events',\r\n    //     msg: 'This Event Has Been Deleted successfully!',\r\n    //     showClose: true,\r\n    //     timeout: 3000,\r\n    //     theme: 'material'\r\n    // };\r\n    errorMessage: string;\r\n    profileFarmData: IAddFarmedType;\r\n\r\n    constructor(public dialog: MatDialog, private _AppAdminService: AppAdminService, private _FarmsService: FarmsService, private toastyService: ToastaService) {\r\n    }\r\n\r\n    //\r\n    ngOnInit(): void {\r\n        this.cols = [\r\n            {field: 'farm_activity_type_name', header: 'Farmed Type'},\r\n            {field: 'name_ar_localized', header: 'Name'},\r\n            {field: 'flowering_time', header: 'Flowering'},\r\n            {field: 'farming_temperature', header: 'Flowering(Temp)'},\r\n            {field: 'maturity_time', header: 'Maturity Time'},\r\n            {field: 'maturity_temperature', header: 'Maturity(Temp)'},\r\n            {field: 'suitable_soil_salts_concentration', header: 'Soil Salts'},\r\n            {field: 'suitable_water_salts_concentration', header: 'Water Salts'},\r\n            {field: 'suitable_ph', header: 'Ph'},\r\n            {field: 'suitable_soil_types', header: 'Soil Types'},\r\n        ];\r\n        this.getFarmsApp();\r\n    }\r\n\r\n    showDialogGetFarmedTypeById(id: number) {\r\n        this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n            this.profileFarm = res.data as IFarmedType;\r\n            console.log(this.profileFarm);\r\n        }, error => {\r\n\r\n        }, () => {\r\n            this.display = true;\r\n\r\n        });\r\n    }\r\n\r\n    getFarmsApp() {\r\n        this._FarmsService.getFarmedType().subscribe((res: { data }) => {\r\n            this.farms = res.data.all as IFarmedType[];\r\n            // this.rolesPermations = this.roles.map(x => x.permissions);\r\n            // console.log(this.rolesPermations);\r\n        });\r\n    }\r\n\r\n\r\n    openAddFarmedTypeDialog() {\r\n\r\n        const dialogRef = this.dialog.open(AddTypeComponent, {\r\n                data: {\r\n                    FarmedData: this._FarmsService.AddFarmType, error: this.errorMessage,\r\n                }\r\n            })\r\n        ;\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            this.errorMessage = null;\r\n\r\n            if (result) {\r\n                this._FarmsService.AddFarmType = result.FarmedData;\r\n                this.onAddFarmedType();\r\n\r\n            } else {\r\n                this._FarmsService.AddFarmType = {} as IAddFarmedType;\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onAddFarmedType() {\r\n        this._FarmsService.AddFarmedType().subscribe(res => {\r\n        }, error => {\r\n\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    getDataById(id: number) {\r\n        this._FarmsService.getFarmedTypeById(id).subscribe((res: { data }) => {\r\n            this.profileFarmData = res.data as IAddFarmedType;\r\n            console.log(this.profileFarmData);\r\n        }, error => {\r\n\r\n        }, () => {\r\n            // this.display = true;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    openEditFarmedTypeDialog(farmedType: IAddFarmedType) {\r\n\r\n        const dialogRef = this.dialog.open(AddTypeComponent, {\r\n            data: {FarmedData: farmedType}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result.FarmedData);\r\n                this._FarmsService.AddFarmType = result.FarmedData;\r\n\r\n                // this.eventsList.id = result;\r\n                this.onEditFarmedType(result.FarmedData.id);\r\n\r\n            } else {\r\n                this._FarmsService.AddFarmType = {} as IAddFarmedType;\r\n            }\r\n        });\r\n    }\r\n\r\n    onEditFarmedType(roleId) {\r\n        console.log(this._FarmsService.AddFarmType.photo);\r\n        this._FarmsService.editFarmedType(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this._FarmsService.AddFarmType = {} as IAddFarmedType;\r\n\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    openFarmedTypeDeleteDialog(data) {\r\n        const dialogRef = this.dialog.open(DeleteTypeComponent, {\r\n            data: {farmData: data}\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result) {\r\n                // this.toastyService.success(this.toastOption);\r\n                console.log(result);\r\n                // this.eventsList.id = result;\r\n                this.onDeleteFarmedType(result);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteFarmedType(roleId) {\r\n        this._FarmsService.deleteType(roleId).subscribe(res => {\r\n        }, error => {\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Error Happened'});\r\n        }, () => {\r\n            this.getFarmsApp();\r\n            this.toastyService.success({\r\n                title: 'Members',\r\n                msg: 'This Role Has Been Deleted successfully!',\r\n                showClose: true,\r\n                timeout: 3000,\r\n                theme: 'material'\r\n            });\r\n            // this.displayClassDeleteDialogue = false;\r\n            // this.messageService.add({severity: 'error', summary: 'Class', detail: 'Deleted Successfully'});\r\n        });\r\n    }\r\n\r\n    receiveData(data: File) {\r\n        console.log('Picked date: ', data);\r\n    }\r\n}\r\n","<mat-card class=\"py-4 pb-3\">\r\n    <button style=\"margin-left: 5px;float: right\" mat-raised-button color=\"primary\" (click)=\"getFarmsApp()\">\r\n        <mat-icon class=\"ml-2\">autorenew</mat-icon>\r\n        Refresh\r\n    </button>\r\n<!--    <button style=\"float: right\" mat-raised-button color=\"primary\" (click)=\"openAddFarmedTypeDialog()\">-->\r\n<!--        <mat-icon class=\"ml-2\">add</mat-icon>-->\r\n<!--        Add Farmed Type-->\r\n<!--    </button> -->\r\n    <button style=\"float: right\" mat-raised-button color=\"primary\" [routerLink]=\"['/admin-panel/farms/add-farmed-type']\">\r\n        <mat-icon class=\"ml-2\">add</mat-icon>\r\n        Add Farmed Type\r\n    </button>\r\n</mat-card>\r\n<mat-card>\r\n\r\n    <p-table #dt1 [columns]=\"cols\" [value]=\"farms\" [paginator]=\"true\" [rows]=\"10\" autoLayout=\"true\"\r\n             [rowsPerPageOptions]=\"[5,10,20]\" dataKey=\"id\" styleClass=\"p-datatable-responsive-demo\">\r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" [ngSwitch]=\"col.field\"></p-sortIcon>\r\n                </th>\r\n                <th>Permations</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let col of columns\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\r\n                    <input pInputText type=\"text\" style=\"width: 100%\"\r\n                           (input)=\"dt1.filter($event.target.value, col.field, col.filterMatchMode)\"\r\n                    >\r\n                </th>\r\n                <th></th>\r\n                <th></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\r\n            <tr [pSelectableRow]=\"rowData\">\r\n                <td *ngFor=\"let col of columns\">\r\n                    <!--                <span class=\"p-column-title\">{{col.header}}</span>-->\r\n                    {{rowData[col.field]}}\r\n                    <!--                <span *ngIf=\"col.field!=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                    <!--                <span *ngIf=\"col.field=='permations'\"> {{rowData[col.field]}}</span>-->\r\n                </td>\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"showDialogGetFarmedTypeById(rowData.id)\" mat-raised-button color=\"primary\"\r\n                                mat-card-icon>\r\n                            <mat-icon>visibility</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"embryo-ham-icon\">\r\n                        <button (click)=\"openEditFarmedTypeDialog(rowData)\" mat-mini-fab\r\n                                color=\"accent\"\r\n\r\n                                mat-card-icon>\r\n                            <mat-icon>create</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab (click)=\"openFarmedTypeDeleteDialog(rowData)\" color=\"warn\" mat-card-icon>\r\n                            <mat-icon>delete_forever</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n                <!--            <td>-->\r\n                <!--                <div class=\"embryo-ham-icon\">-->\r\n                <!--                    <button mat-mini-fab color=\"warn\" mat-card-icon-->\r\n                <!--                            >-->\r\n                <!--                        <mat-icon>delete_forever</mat-icon>-->\r\n                <!--                    </button>-->\r\n                <!--                </div>-->\r\n                <!--            </td>-->\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</mat-card>\r\n<p-dialog header=\"Title\" [(visible)]=\"display\" [style]=\"{width: '50vw'}\">\r\n    <!--    <div>-->\r\n    <!--        <div class=\"row\">-->\r\n\r\n    <!--            <div class=\"col-md-4\">Name</div>-->\r\n    <!--            <div class=\"col-md-4\">Display Name</div>-->\r\n    <!--            <div class=\"col-md-4\">Description</div>-->\r\n    <!--        </div>-->\r\n    <!--        <div class=\"row text-black-50\" *ngFor=\"let p of rolesPermations\">-->\r\n\r\n    <!--            <div class=\"col-md-4\">{{p.name}}</div>-->\r\n    <!--            <div class=\"col-md-4\">{{p.display_name}}</div>-->\r\n    <!--            <div class=\"col-md-4\">{{p.description}}</div>-->\r\n    <!--        </div>-->\r\n    <!--    </div>-->\r\n    <!--    <div *ngIf=\"rolesPermations?.length==0\">-->\r\n    <!--        <div class=\"col-md-12\">-->\r\n    <!--            <div class=\"alert alert-primary text-center\">-->\r\n    <!--                No Data-->\r\n    <!--            </div>-->\r\n    <!--        </div>-->\r\n    <!--    </div>-->\r\n    <mat-card class=\"example-card\">\r\n        <mat-card-header>\r\n            <div mat-card-avatar class=\"example-header-image m-2\">\r\n                <img mat-card-image [src]=\"profileFarm?.photo_url\" alt=\"Photo of a Shiba Inu\">\r\n\r\n            </div>\r\n            <mat-card-title>{{profileFarm?.name_ar_localized}}</mat-card-title>\r\n            <mat-card-subtitle>{{profileFarm?.farm_activity_type_name}}</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <!--        <img mat-card-image [src]=\"profileFarm?.photo_url\" alt=\"Photo of a Shiba Inu\">-->\r\n        <mat-card-content>\r\n            <div class=\"row text-center\">\r\n                <div class=\"col-md-4\">\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-3 \">\r\n                <div class=\"col-md-9\">\r\n\r\n                    <p-progressBar [value]=\"profileFarm?.farming_temperature\"></p-progressBar>\r\n                    <p>Farming Temperature</p>\r\n\r\n                    <!--                   <p-progressBar [value]=\"50\"></p-progressBar>-->\r\n\r\n\r\n                </div>\r\n                <div class=\"col-md-9\">\r\n                    <p-progressBar [value]=\"profileFarm?.flowering_temperature\"></p-progressBar>\r\n                    <p>Flowering Temperature</p>\r\n\r\n\r\n                </div>\r\n                <div class=\"col-md-9\">\r\n                    <p-progressBar [value]=\"profileFarm?.maturity_temperature\"></p-progressBar>\r\n                    <p>Maturity Temperature</p>\r\n\r\n                </div>\r\n                <div class=\"col-md-9\">\r\n                    <p-progressBar [value]=\"profileFarm?.humidity\"></p-progressBar>\r\n                    <p>Humidity</p>\r\n\r\n                </div>\r\n                <div class=\"col-md-9\">\r\n                    <p-progressBar [value]=\"profileFarm?.suitable_ph\"></p-progressBar>\r\n                    <p>Suitable PH</p>\r\n\r\n                </div>\r\n                <div class=\"col-md-9\">\r\n                    <p-progressBar [value]=\"profileFarm?.suitable_soil_types\"></p-progressBar>\r\n                    <p>Suitable Soil</p>\r\n\r\n                </div>\r\n                <div class=\"col-md-9\">\r\n                    <p-progressBar [value]=\"profileFarm?.suitable_soil_salts_concentration\"></p-progressBar>\r\n                    <p>Suitable Soil Salts</p>\r\n\r\n                </div>\r\n                <div class=\"col-md-9\">\r\n                    <p-progressBar [value]=\"profileFarm?.suitable_water_salts_concentration\"></p-progressBar>\r\n                    <p>Suitable Water Salts</p>\r\n\r\n                </div>\r\n            </div>\r\n            <!--            <p>-->\r\n            <!--                The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.-->\r\n            <!--                A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally-->\r\n            <!--                bred for hunting.-->\r\n            <!--            </p>-->\r\n        </mat-card-content>\r\n        <!--        <mat-card-actions>-->\r\n        <!--            <button mat-button>LIKE</button>-->\r\n        <!--            <button mat-button>SHARE</button>-->\r\n        <!--        </mat-card-actions>-->\r\n    </mat-card>\r\n</p-dialog>\r\n\r\n"],"sourceRoot":"webpack:///"}