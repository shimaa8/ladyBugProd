{"version":3,"sources":["./src/app/AdminPanel/Reports/Reports/Reports.component.ts","./src/app/AdminPanel/Reports/Reports/Reports.component.html","./src/app/AdminPanel/Reports/Reports.module.ts","./src/app/AdminPanel/Reports/Reports.routing.ts"],"names":[],"mappings":"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","file":"Reports-Reports-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AdminPanelServiceService } from '../../Service/AdminPanelService.service';\r\nimport {TimerObservable} from \"rxjs/observable/TimerObservable\";\r\n\r\n@Component({\r\n\tselector: 'app-reports',\r\n\ttemplateUrl: './Reports.component.html',\r\n\tstyleUrls: ['./Reports.component.scss']\r\n})\r\n\r\nexport class ReportsComponent implements OnInit {\r\n  \r\n   tableTabData        : any;\r\n   buySellChartContent : any;\r\n   chartData           : any;\r\n\r\n   displayedTransactionColumns : string [] = ['transid','date','account', 'type', 'amount','debit', 'balance'];\r\n\r\n   displayedTransferColumns : string [] = ['transid','date','account', 'type', 'amount', 'balance','status'];\r\n\r\n   displayedExpenseColumns : string [] = ['itmNo','date', 'type','companyName','amount','status'];\r\n\t\r\n   constructor(private service : AdminPanelServiceService) {\r\n   }\r\n\r\n   ngOnInit() {\r\n      this.service.getTableTabContent().valueChanges().subscribe(res => this.tableTabData = res);\r\n      this.service.getBuySellChartContent().valueChanges().\r\n            subscribe( res => (this.getChartData(res))\r\n                     );\r\n\r\n   }\r\n\r\n   //getChartData method is used to get the chart data.\r\n   getChartData(data){\r\n      this.buySellChartContent= data;\r\n      this.chartDataChange('week');\r\n   }\r\n\r\n   //chartDataChange method is used to change the chart data according to button event.\r\n   chartDataChange(tag){\r\n      if(this.buySellChartContent && this.buySellChartContent.length>0)\r\n      for(var content of this.buySellChartContent){\r\n         if(content.tag == tag){\r\n            this.chartData = content;\r\n         }\r\n      }\r\n   }\r\n}\r\n","<div fxLayout=\"column\">   \r\n   <mat-card *ngIf=\"buySellChartContent\">\r\n      <div fxLayout=\"row\" class=\"mb-5\" fxLayoutAlign=\"space-between center\">\r\n         <div class=\"dash-title\">\r\n            {{'Buy' | translate }} / {{ 'Sell' | translate}}\r\n         </div>\r\n         <div>\r\n            <button mat-icon-button>\r\n               <mat-icon>sync</mat-icon>\r\n            </button>\r\n            <button mat-icon-button [matMenuTriggerFor]=\"options\">\r\n               <mat-icon>more_horiz</mat-icon>\r\n            </button>\r\n         </div>\r\n      </div>\r\n      <div class=\"card-content\">\r\n         <div class=\"buttongroup mt-3 mb-3 text-right\">\r\n            <button class=\"mb-2 mr-2\" mat-raised-button color=\"accent\" (click)=\"chartDataChange('week')\">Week</button>\r\n            <button class=\"mb-2 mr-2\" mat-raised-button color=\"primary\" (click)=\"chartDataChange('month')\">Month</button>\r\n            <button class=\"mb-2 mr-2\" mat-raised-button color=\"warn\" (click)=\"chartDataChange('year')\">Year</button>\r\n         </div>\r\n         <div class=\"trade-chart-wrap\" *ngIf=\"chartData\">\r\n            <app-buy-sell-chart [color]=\"chartData.buySellChartColors\" [data]=\"chartData.buySellChartData\" [label]=\"chartData.buySellChartLabel\"></app-buy-sell-chart>\r\n         </div>\r\n         <!-- trade-chart-wrap-->\r\n      </div>\r\n      <!-- card-content-wrap-->\r\n   </mat-card>\r\n   <!--mat-card-->\r\n</div>\r\n<ng-container *ngIf=\"tableTabData;else empty\">\r\n   <mat-card class=\"p-3\">\r\n      <mat-tab-group class=\"table-tab-list\" color=\"accent\">\r\n         <mat-tab label=\"{{'Transaction List' | translate}}\">\r\n            <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n               <div class=\"transactiion-list table-list-wrap\">\r\n                  <div class=\"table-responsive-x\">  \r\n                     <table class=\"w-100 table-scroll-wrap\" mat-table [dataSource]=\"tableTabData.transactionList\">\r\n                        <ng-container matColumnDef=\"transid\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Transaction Id</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                              <div>{{element.transid}}</div>\r\n                           </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"date\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Date</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.date | date:'mediumDate'}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"account\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Account</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.account}}</td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"type\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Type</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                              <mat-chip-list>\r\n                                 <mat-chip color=\"{{element.typeColor}}\" selected>{{element.type}}</mat-chip>\r\n                              </mat-chip-list>\r\n                           </td>   \r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"amount\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Amount</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.amount|currency}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"debit\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Debit</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.debit|currency}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"balance\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Balance</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.balance|currency}} </td>\r\n                        </ng-container>\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedTransactionColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedTransactionColumns\"></tr>\r\n                     </table>\r\n                  </div>   \r\n                  <!-- table responsive -->\r\n               </div>\r\n               <!-- table list wrap -->\r\n            </div>\r\n         </mat-tab>\r\n         <mat-tab label=\"{{'Transfer Report' | translate}}\">\r\n            <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n               <div class=\"invoice-list table-list-wrap\">\r\n                  <div class=\"overflow-hidden\">\r\n                     <div class=\"table-responsive-x\">  \r\n                        <table class=\"w-100\" mat-table [dataSource]=\"tableTabData.transferreport\">\r\n                           <ng-container matColumnDef=\"transid\">\r\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Transfer Id</th>\r\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                                 <div>{{element.transid}}</div>\r\n                              </td>\r\n                           </ng-container>\r\n                           <ng-container matColumnDef=\"date\">\r\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Date</th>\r\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.date | date:'mediumDate'}} </td>\r\n                           </ng-container>\r\n                           <ng-container matColumnDef=\"account\">\r\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Account</th>\r\n                              \r\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.account}}</td>\r\n                           </ng-container>\r\n                           <ng-container matColumnDef=\"type\">\r\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Type</th>\r\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                                 <mat-chip-list>\r\n                                    <mat-chip color=\"{{element.typeColor}}\" selected>{{element.type}}</mat-chip>\r\n                                 </mat-chip-list>\r\n                              </td>\r\n                           </ng-container>\r\n                           <ng-container matColumnDef=\"amount\">\r\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Amount</th>\r\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.amount|currency}} </td>\r\n                           </ng-container>\r\n                           <ng-container matColumnDef=\"balance\">\r\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Balance</th>\r\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.balance|currency}} </td>\r\n                           </ng-container>\r\n                           <ng-container matColumnDef=\"status\">\r\n                              <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Status</th>\r\n                              <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                                 <mat-chip-list>\r\n                                    <mat-chip color=\"{{element.statusColor}}\" selected>{{element.status}}</mat-chip>\r\n                                 </mat-chip-list> \r\n                              </td>\r\n                           </ng-container>\r\n                           <tr mat-header-row *matHeaderRowDef=\"displayedTransferColumns\"></tr>\r\n                           <tr mat-row *matRowDef=\"let row; columns: displayedTransferColumns\"></tr>\r\n                        </table>\r\n                     </div>  \r\n                  </div>   \r\n                  <!-- table responsive-->\r\n               </div>\r\n               <!--invoice list-->\r\n            </div> \r\n         </mat-tab>\r\n         <mat-tab label=\"{{'Expense Category' | translate}}\">\r\n            <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n               <div class=\"Expense-category-list table-list-wrap\">\r\n                  <div class=\"table-responsive-x\">  \r\n                     <table class=\"w-100\" mat-table [dataSource]=\"tableTabData.expenseCategory\">\r\n                        <ng-container matColumnDef=\"itmNo\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Item No</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                              <div>{{element.itmNo}}</div>\r\n                           </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"date\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Date</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.date | date:'mediumDate'}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"type\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Type</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                              <mat-chip-list>\r\n                                 <mat-chip color=\"{{element.typeColor}}\" selected>{{element.type}}</mat-chip>\r\n                              </mat-chip-list> \r\n                           </td>   \r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"companyName\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Company Name</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.companyName}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"amount\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Amount</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">{{element.amount|currency}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"status\">\r\n                           <th class=\"text-nowrap px-3\" mat-header-cell *matHeaderCellDef>Status</th>\r\n                           <td class=\"text-nowrap px-3\" mat-cell *matCellDef=\"let element\">\r\n                              <mat-chip-list>\r\n                                 <mat-chip color=\"{{element.statusColor}}\" selected>{{element.status}}</mat-chip>\r\n                              </mat-chip-list> \r\n                           </td>\r\n                        </ng-container>\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedExpenseColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedExpenseColumns\"></tr>\r\n                     </table>\r\n                  </div>  \r\n                  <!-- table responsive -->\r\n               </div>\r\n               <!-- Expense-category-list-->\r\n            </div>   \r\n         </mat-tab>\r\n      </mat-tab-group>\r\n      <!--mat-tab-group-->\r\n   </mat-card>\r\n</ng-container> \r\n<ng-template #empty>\r\n   <h5 class=\"ml-5\">No data found</h5>\r\n</ng-template>\r\n<mat-menu #options=\"matMenu\" x-position=\"before\">\r\n   <button mat-menu-item>\r\n      <mat-icon>settings</mat-icon> Settings </button>\r\n   <button mat-menu-item>\r\n      <mat-icon>more</mat-icon> View More </button>\r\n   <button mat-menu-item>\r\n      <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n   <button mat-menu-item>\r\n      <mat-icon>exit_to_app</mat-icon> Remove Panel </button>\r\n</mat-menu>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportsComponent } from './Reports/Reports.component';\r\nimport { ReportsRoutes} from './Reports.routing';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { WidgetModule } from '../Widget/Widget.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n\tdeclarations: [ReportsComponent],\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tRouterModule.forChild(ReportsRoutes),\r\n\t\tTranslateModule,\r\n\t\tMatCardModule,\r\n\t\tMatIconModule,\r\n\t\tMatButtonModule,\r\n\t\tMatTableModule,\r\n\t\tMatMenuModule,\r\n\t\tMatDividerModule,\r\n\t\tWidgetModule,\r\n\t\tMatTabsModule,\r\n      MatChipsModule,\r\n      FlexLayoutModule\r\n\t]\r\n})\r\nexport class ReportsModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { ReportsComponent } from './Reports/Reports.component';\r\n\r\nexport const ReportsRoutes: Routes = [\r\n\t{\r\n\t\tpath      : '',\r\n\t\tcomponent : ReportsComponent\r\n\t}\r\n];\r\n"],"sourceRoot":"webpack:///"}